/*
** DON'T EDIT THIS FILE **
It's been generated by Zapatos, and is liable to be overwritten

Zapatos: https://jawj.github.io/zapatos/
Copyright (C) 2020 - 2023 George MacKerron
Released under the MIT licence: see LICENCE file
*/

declare module 'zapatos/schema' {

  import type * as db from 'zapatos/db';

  // got a type error on schemaVersionCanary below? update by running `npx zapatos`
  export interface schemaVersionCanary extends db.SchemaVersionCanary { version: 104 }


  /* === schema: public === */

  /* --- enums --- */

  export type intent_status = 'ADDED' | 'ADDED_AND_FILLED' | 'ADDED_HUB' | 'ADDED_SPOKE' | 'DEPOSIT_PROCESSED' | 'DISPATCHED' | 'DISPATCHED_HUB' | 'DISPATCHED_SPOKE' | 'DISPATCHED_UNSUPPORTED' | 'FILLED' | 'INVOICED' | 'NONE' | 'SETTLED' | 'SETTLED_AND_COMPLETED' | 'SETTLED_AND_MANUALLY_EXECUTED' | 'UNSUPPORTED' | 'UNSUPPORTED_RETURNED';
  export namespace every {
    export type intent_status = ['ADDED', 'ADDED_AND_FILLED', 'ADDED_HUB', 'ADDED_SPOKE', 'DEPOSIT_PROCESSED', 'DISPATCHED', 'DISPATCHED_HUB', 'DISPATCHED_SPOKE', 'DISPATCHED_UNSUPPORTED', 'FILLED', 'INVOICED', 'NONE', 'SETTLED', 'SETTLED_AND_COMPLETED', 'SETTLED_AND_MANUALLY_EXECUTED', 'UNSUPPORTED', 'UNSUPPORTED_RETURNED'];
  }
  export type message_status = 'delivered' | 'none' | 'pending' | 'relayable';
  export namespace every {
    export type message_status = ['delivered', 'none', 'pending', 'relayable'];
  }
  export type message_type = 'FILL' | 'GATEWAY_UPDATE' | 'INTENT' | 'LIGHTHOUSE_UPDATE' | 'MAILBOX_UPDATE' | 'SECURITY_MODULE_UPDATE' | 'SETTLEMENT';
  export namespace every {
    export type message_type = ['FILL', 'GATEWAY_UPDATE', 'INTENT', 'LIGHTHOUSE_UPDATE', 'MAILBOX_UPDATE', 'SECURITY_MODULE_UPDATE', 'SETTLEMENT'];
  }
  export type queue_type = 'DEPOSIT' | 'FILL' | 'INTENT' | 'SETTLEMENT';
  export namespace every {
    export type queue_type = ['DEPOSIT', 'FILL', 'INTENT', 'SETTLEMENT'];
  }

  /* --- tables --- */

  /**
   * **assets**
   * - Table in database
   */
  export namespace assets {
    export type Table = 'assets';
    export interface Selectable {
      /**
      * **assets.adopted**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      adopted: string;
      /**
      * **assets.approval**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      approval: boolean;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      domain: string | null;
      /**
      * **assets.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **assets.strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      strategy: string;
      /**
      * **assets.token_id**
      * - `varchar` in database
      * - Nullable, no default
      */
      token_id: string | null;
    }
    export interface JSONSelectable {
      /**
      * **assets.adopted**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      adopted: string;
      /**
      * **assets.approval**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      approval: boolean;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      domain: string | null;
      /**
      * **assets.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **assets.strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      strategy: string;
      /**
      * **assets.token_id**
      * - `varchar` in database
      * - Nullable, no default
      */
      token_id: string | null;
    }
    export interface Whereable {
      /**
      * **assets.adopted**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      adopted?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.approval**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      approval?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      strategy?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **assets.token_id**
      * - `varchar` in database
      * - Nullable, no default
      */
      token_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **assets.adopted**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      adopted: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **assets.approval**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      approval: boolean | db.Parameter<boolean> | db.SQLFragment;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **assets.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **assets.strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      strategy: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **assets.token_id**
      * - `varchar` in database
      * - Nullable, no default
      */
      token_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **assets.adopted**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      adopted?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **assets.approval**
      * - `bool` in database
      * - `NOT NULL`, no default
      */
      approval?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
      /**
      * **assets.domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **assets.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **assets.strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      strategy?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **assets.token_id**
      * - `varchar` in database
      * - Nullable, no default
      */
      token_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'assets_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **balances**
   * - Table in database
   */
  export namespace balances {
    export type Table = 'balances';
    export interface Selectable {
      /**
      * **balances.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string;
      /**
      * **balances.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **balances.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string;
      /**
      * **balances.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
    }
    export interface JSONSelectable {
      /**
      * **balances.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string;
      /**
      * **balances.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **balances.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string;
      /**
      * **balances.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
    }
    export interface Whereable {
      /**
      * **balances.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **balances.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **balances.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **balances.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **balances.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **balances.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **balances.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **balances.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **balances.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **balances.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **balances.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **balances.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'balances_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **checkpoints**
   * - Table in database
   */
  export namespace checkpoints {
    export type Table = 'checkpoints';
    export interface Selectable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      check_name: string;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
      check_point: db.NumericString;
    }
    export interface JSONSelectable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      check_name: string;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
      check_point: (number | db.NumericString);
    }
    export interface Whereable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      check_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
      check_point?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      check_name: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
      check_point?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **checkpoints.check_name**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      check_name?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **checkpoints.check_point**
      * - `numeric` in database
      * - `NOT NULL`, default: `0`
      */
      check_point?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'checkpoints_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **closedepochsprocessed**
   * - Materialized view in database
   */
  export namespace closedepochsprocessed {
    export type Table = 'closedepochsprocessed';
    export interface Selectable {
      /**
      * **closedepochsprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **closedepochsprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **closedepochsprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **closedepochsprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **closedepochsprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **closedepochsprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **closedepochsprocessed.data___last_closed_epoch_processed**
      * - `int8` in database
      * - Materialized view column
      */
      data___last_closed_epoch_processed: db.Int8String | null;
      /**
      * **closedepochsprocessed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **closedepochsprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **closedepochsprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **closedepochsprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **closedepochsprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **closedepochsprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **closedepochsprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **closedepochsprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **closedepochsprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **closedepochsprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **closedepochsprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **closedepochsprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **closedepochsprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **closedepochsprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **closedepochsprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **closedepochsprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **closedepochsprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **closedepochsprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **closedepochsprocessed.data___last_closed_epoch_processed**
      * - `int8` in database
      * - Materialized view column
      */
      data___last_closed_epoch_processed: (number | db.Int8String) | null;
      /**
      * **closedepochsprocessed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **closedepochsprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **closedepochsprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **closedepochsprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **closedepochsprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **closedepochsprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **closedepochsprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **closedepochsprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **closedepochsprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **closedepochsprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **closedepochsprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **closedepochsprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **closedepochsprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.data___last_closed_epoch_processed**
      * - `int8` in database
      * - Materialized view column
      */
      data___last_closed_epoch_processed?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **closedepochsprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **daily_metrics_by_chains_tokens**
   * - Materialized view in database
   */
  export namespace daily_metrics_by_chains_tokens {
    export type Table = 'daily_metrics_by_chains_tokens';
    export interface Selectable {
      /**
      * **daily_metrics_by_chains_tokens.apy**
      * - `float8` in database
      * - Materialized view column
      */
      apy: number | null;
      /**
      * **daily_metrics_by_chains_tokens.avg_discount_epoch_by_mm**
      * - `numeric` in database
      * - Materialized view column
      */
      avg_discount_epoch_by_mm: db.NumericString | null;
      /**
      * **daily_metrics_by_chains_tokens.avg_discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_discounts_by_mm: number | null;
      /**
      * **daily_metrics_by_chains_tokens.avg_rewards_by_invoice**
      * - `float8` in database
      * - Materialized view column
      */
      avg_rewards_by_invoice: number | null;
      /**
      * **daily_metrics_by_chains_tokens.avg_settlement_time_in_hrs_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_settlement_time_in_hrs_by_mm: number | null;
      /**
      * **daily_metrics_by_chains_tokens.day**
      * - `timestamptz` in database
      * - Materialized view column
      */
      day: Date | null;
      /**
      * **daily_metrics_by_chains_tokens.discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      discounts_by_mm: number | null;
      /**
      * **daily_metrics_by_chains_tokens.from_asset_address**
      * - `varchar` in database
      * - Materialized view column
      */
      from_asset_address: string | null;
      /**
      * **daily_metrics_by_chains_tokens.from_asset_symbol**
      * - `text` in database
      * - Materialized view column
      */
      from_asset_symbol: string | null;
      /**
      * **daily_metrics_by_chains_tokens.from_chain_id**
      * - `int4` in database
      * - Materialized view column
      */
      from_chain_id: number | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_avg_intent_size**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_intent_size: number | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_avg_time_in_hrs**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_time_in_hrs: number | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      netting_protocol_revenue: number | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      netting_total_intents: db.Int8String | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_volume**
      * - `float8` in database
      * - Materialized view column
      */
      netting_volume: number | null;
      /**
      * **daily_metrics_by_chains_tokens.rewards_for_invoices**
      * - `float8` in database
      * - Materialized view column
      */
      rewards_for_invoices: number | null;
      /**
      * **daily_metrics_by_chains_tokens.to_asset_address**
      * - `varchar` in database
      * - Materialized view column
      */
      to_asset_address: string | null;
      /**
      * **daily_metrics_by_chains_tokens.to_asset_symbol**
      * - `text` in database
      * - Materialized view column
      */
      to_asset_symbol: string | null;
      /**
      * **daily_metrics_by_chains_tokens.to_chain_id**
      * - `int4` in database
      * - Materialized view column
      */
      to_chain_id: number | null;
      /**
      * **daily_metrics_by_chains_tokens.total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents: db.Int8String | null;
      /**
      * **daily_metrics_by_chains_tokens.total_intents_by_mm**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents_by_mm: db.Int8String | null;
      /**
      * **daily_metrics_by_chains_tokens.total_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      total_protocol_revenue: number | null;
      /**
      * **daily_metrics_by_chains_tokens.total_rebalancing_fee**
      * - `float8` in database
      * - Materialized view column
      */
      total_rebalancing_fee: number | null;
      /**
      * **daily_metrics_by_chains_tokens.total_volume**
      * - `float8` in database
      * - Materialized view column
      */
      total_volume: number | null;
      /**
      * **daily_metrics_by_chains_tokens.volume_settled_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      volume_settled_by_mm: number | null;
    }
    export interface JSONSelectable {
      /**
      * **daily_metrics_by_chains_tokens.apy**
      * - `float8` in database
      * - Materialized view column
      */
      apy: number | null;
      /**
      * **daily_metrics_by_chains_tokens.avg_discount_epoch_by_mm**
      * - `numeric` in database
      * - Materialized view column
      */
      avg_discount_epoch_by_mm: (number | db.NumericString) | null;
      /**
      * **daily_metrics_by_chains_tokens.avg_discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_discounts_by_mm: number | null;
      /**
      * **daily_metrics_by_chains_tokens.avg_rewards_by_invoice**
      * - `float8` in database
      * - Materialized view column
      */
      avg_rewards_by_invoice: number | null;
      /**
      * **daily_metrics_by_chains_tokens.avg_settlement_time_in_hrs_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_settlement_time_in_hrs_by_mm: number | null;
      /**
      * **daily_metrics_by_chains_tokens.day**
      * - `timestamptz` in database
      * - Materialized view column
      */
      day: db.TimestampTzString | null;
      /**
      * **daily_metrics_by_chains_tokens.discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      discounts_by_mm: number | null;
      /**
      * **daily_metrics_by_chains_tokens.from_asset_address**
      * - `varchar` in database
      * - Materialized view column
      */
      from_asset_address: string | null;
      /**
      * **daily_metrics_by_chains_tokens.from_asset_symbol**
      * - `text` in database
      * - Materialized view column
      */
      from_asset_symbol: string | null;
      /**
      * **daily_metrics_by_chains_tokens.from_chain_id**
      * - `int4` in database
      * - Materialized view column
      */
      from_chain_id: number | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_avg_intent_size**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_intent_size: number | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_avg_time_in_hrs**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_time_in_hrs: number | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      netting_protocol_revenue: number | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      netting_total_intents: (number | db.Int8String) | null;
      /**
      * **daily_metrics_by_chains_tokens.netting_volume**
      * - `float8` in database
      * - Materialized view column
      */
      netting_volume: number | null;
      /**
      * **daily_metrics_by_chains_tokens.rewards_for_invoices**
      * - `float8` in database
      * - Materialized view column
      */
      rewards_for_invoices: number | null;
      /**
      * **daily_metrics_by_chains_tokens.to_asset_address**
      * - `varchar` in database
      * - Materialized view column
      */
      to_asset_address: string | null;
      /**
      * **daily_metrics_by_chains_tokens.to_asset_symbol**
      * - `text` in database
      * - Materialized view column
      */
      to_asset_symbol: string | null;
      /**
      * **daily_metrics_by_chains_tokens.to_chain_id**
      * - `int4` in database
      * - Materialized view column
      */
      to_chain_id: number | null;
      /**
      * **daily_metrics_by_chains_tokens.total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents: (number | db.Int8String) | null;
      /**
      * **daily_metrics_by_chains_tokens.total_intents_by_mm**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents_by_mm: (number | db.Int8String) | null;
      /**
      * **daily_metrics_by_chains_tokens.total_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      total_protocol_revenue: number | null;
      /**
      * **daily_metrics_by_chains_tokens.total_rebalancing_fee**
      * - `float8` in database
      * - Materialized view column
      */
      total_rebalancing_fee: number | null;
      /**
      * **daily_metrics_by_chains_tokens.total_volume**
      * - `float8` in database
      * - Materialized view column
      */
      total_volume: number | null;
      /**
      * **daily_metrics_by_chains_tokens.volume_settled_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      volume_settled_by_mm: number | null;
    }
    export interface Whereable {
      /**
      * **daily_metrics_by_chains_tokens.apy**
      * - `float8` in database
      * - Materialized view column
      */
      apy?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.avg_discount_epoch_by_mm**
      * - `numeric` in database
      * - Materialized view column
      */
      avg_discount_epoch_by_mm?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.avg_discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_discounts_by_mm?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.avg_rewards_by_invoice**
      * - `float8` in database
      * - Materialized view column
      */
      avg_rewards_by_invoice?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.avg_settlement_time_in_hrs_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_settlement_time_in_hrs_by_mm?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.day**
      * - `timestamptz` in database
      * - Materialized view column
      */
      day?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      discounts_by_mm?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.from_asset_address**
      * - `varchar` in database
      * - Materialized view column
      */
      from_asset_address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.from_asset_symbol**
      * - `text` in database
      * - Materialized view column
      */
      from_asset_symbol?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.from_chain_id**
      * - `int4` in database
      * - Materialized view column
      */
      from_chain_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.netting_avg_intent_size**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_intent_size?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.netting_avg_time_in_hrs**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_time_in_hrs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.netting_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      netting_protocol_revenue?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.netting_total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      netting_total_intents?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.netting_volume**
      * - `float8` in database
      * - Materialized view column
      */
      netting_volume?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.rewards_for_invoices**
      * - `float8` in database
      * - Materialized view column
      */
      rewards_for_invoices?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.to_asset_address**
      * - `varchar` in database
      * - Materialized view column
      */
      to_asset_address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.to_asset_symbol**
      * - `text` in database
      * - Materialized view column
      */
      to_asset_symbol?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.to_chain_id**
      * - `int4` in database
      * - Materialized view column
      */
      to_chain_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.total_intents_by_mm**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents_by_mm?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.total_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      total_protocol_revenue?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.total_rebalancing_fee**
      * - `float8` in database
      * - Materialized view column
      */
      total_rebalancing_fee?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.total_volume**
      * - `float8` in database
      * - Materialized view column
      */
      total_volume?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_chains_tokens.volume_settled_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      volume_settled_by_mm?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **daily_metrics_by_date**
   * - Materialized view in database
   */
  export namespace daily_metrics_by_date {
    export type Table = 'daily_metrics_by_date';
    export interface Selectable {
      /**
      * **daily_metrics_by_date.apy**
      * - `float8` in database
      * - Materialized view column
      */
      apy: number | null;
      /**
      * **daily_metrics_by_date.avg_discount_epoch_by_mm**
      * - `numeric` in database
      * - Materialized view column
      */
      avg_discount_epoch_by_mm: db.NumericString | null;
      /**
      * **daily_metrics_by_date.avg_discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_discounts_by_mm: number | null;
      /**
      * **daily_metrics_by_date.avg_rewards_by_invoice**
      * - `float8` in database
      * - Materialized view column
      */
      avg_rewards_by_invoice: number | null;
      /**
      * **daily_metrics_by_date.avg_settlement_time_in_hrs_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_settlement_time_in_hrs_by_mm: number | null;
      /**
      * **daily_metrics_by_date.day**
      * - `timestamptz` in database
      * - Materialized view column
      */
      day: Date | null;
      /**
      * **daily_metrics_by_date.discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      discounts_by_mm: number | null;
      /**
      * **daily_metrics_by_date.netting_avg_intent_size**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_intent_size: number | null;
      /**
      * **daily_metrics_by_date.netting_avg_time_in_hrs**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_time_in_hrs: number | null;
      /**
      * **daily_metrics_by_date.netting_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      netting_protocol_revenue: number | null;
      /**
      * **daily_metrics_by_date.netting_total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      netting_total_intents: db.Int8String | null;
      /**
      * **daily_metrics_by_date.netting_volume**
      * - `float8` in database
      * - Materialized view column
      */
      netting_volume: number | null;
      /**
      * **daily_metrics_by_date.rewards_for_invoices**
      * - `float8` in database
      * - Materialized view column
      */
      rewards_for_invoices: number | null;
      /**
      * **daily_metrics_by_date.total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents: db.Int8String | null;
      /**
      * **daily_metrics_by_date.total_intents_by_mm**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents_by_mm: db.Int8String | null;
      /**
      * **daily_metrics_by_date.total_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      total_protocol_revenue: number | null;
      /**
      * **daily_metrics_by_date.total_rebalancing_fee**
      * - `float8` in database
      * - Materialized view column
      */
      total_rebalancing_fee: number | null;
      /**
      * **daily_metrics_by_date.total_volume**
      * - `float8` in database
      * - Materialized view column
      */
      total_volume: number | null;
      /**
      * **daily_metrics_by_date.volume_settled_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      volume_settled_by_mm: number | null;
    }
    export interface JSONSelectable {
      /**
      * **daily_metrics_by_date.apy**
      * - `float8` in database
      * - Materialized view column
      */
      apy: number | null;
      /**
      * **daily_metrics_by_date.avg_discount_epoch_by_mm**
      * - `numeric` in database
      * - Materialized view column
      */
      avg_discount_epoch_by_mm: (number | db.NumericString) | null;
      /**
      * **daily_metrics_by_date.avg_discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_discounts_by_mm: number | null;
      /**
      * **daily_metrics_by_date.avg_rewards_by_invoice**
      * - `float8` in database
      * - Materialized view column
      */
      avg_rewards_by_invoice: number | null;
      /**
      * **daily_metrics_by_date.avg_settlement_time_in_hrs_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_settlement_time_in_hrs_by_mm: number | null;
      /**
      * **daily_metrics_by_date.day**
      * - `timestamptz` in database
      * - Materialized view column
      */
      day: db.TimestampTzString | null;
      /**
      * **daily_metrics_by_date.discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      discounts_by_mm: number | null;
      /**
      * **daily_metrics_by_date.netting_avg_intent_size**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_intent_size: number | null;
      /**
      * **daily_metrics_by_date.netting_avg_time_in_hrs**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_time_in_hrs: number | null;
      /**
      * **daily_metrics_by_date.netting_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      netting_protocol_revenue: number | null;
      /**
      * **daily_metrics_by_date.netting_total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      netting_total_intents: (number | db.Int8String) | null;
      /**
      * **daily_metrics_by_date.netting_volume**
      * - `float8` in database
      * - Materialized view column
      */
      netting_volume: number | null;
      /**
      * **daily_metrics_by_date.rewards_for_invoices**
      * - `float8` in database
      * - Materialized view column
      */
      rewards_for_invoices: number | null;
      /**
      * **daily_metrics_by_date.total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents: (number | db.Int8String) | null;
      /**
      * **daily_metrics_by_date.total_intents_by_mm**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents_by_mm: (number | db.Int8String) | null;
      /**
      * **daily_metrics_by_date.total_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      total_protocol_revenue: number | null;
      /**
      * **daily_metrics_by_date.total_rebalancing_fee**
      * - `float8` in database
      * - Materialized view column
      */
      total_rebalancing_fee: number | null;
      /**
      * **daily_metrics_by_date.total_volume**
      * - `float8` in database
      * - Materialized view column
      */
      total_volume: number | null;
      /**
      * **daily_metrics_by_date.volume_settled_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      volume_settled_by_mm: number | null;
    }
    export interface Whereable {
      /**
      * **daily_metrics_by_date.apy**
      * - `float8` in database
      * - Materialized view column
      */
      apy?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.avg_discount_epoch_by_mm**
      * - `numeric` in database
      * - Materialized view column
      */
      avg_discount_epoch_by_mm?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.avg_discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_discounts_by_mm?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.avg_rewards_by_invoice**
      * - `float8` in database
      * - Materialized view column
      */
      avg_rewards_by_invoice?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.avg_settlement_time_in_hrs_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      avg_settlement_time_in_hrs_by_mm?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.day**
      * - `timestamptz` in database
      * - Materialized view column
      */
      day?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.discounts_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      discounts_by_mm?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.netting_avg_intent_size**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_intent_size?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.netting_avg_time_in_hrs**
      * - `float8` in database
      * - Materialized view column
      */
      netting_avg_time_in_hrs?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.netting_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      netting_protocol_revenue?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.netting_total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      netting_total_intents?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.netting_volume**
      * - `float8` in database
      * - Materialized view column
      */
      netting_volume?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.rewards_for_invoices**
      * - `float8` in database
      * - Materialized view column
      */
      rewards_for_invoices?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.total_intents**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.total_intents_by_mm**
      * - `int8` in database
      * - Materialized view column
      */
      total_intents_by_mm?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.total_protocol_revenue**
      * - `float8` in database
      * - Materialized view column
      */
      total_protocol_revenue?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.total_rebalancing_fee**
      * - `float8` in database
      * - Materialized view column
      */
      total_rebalancing_fee?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.total_volume**
      * - `float8` in database
      * - Materialized view column
      */
      total_volume?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **daily_metrics_by_date.volume_settled_by_mm**
      * - `float8` in database
      * - Materialized view column
      */
      volume_settled_by_mm?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **deposit_enqueued_not_processed**
   * - Materialized view in database
   */
  export namespace deposit_enqueued_not_processed {
    export type Table = 'deposit_enqueued_not_processed';
    export interface Selectable {
      /**
      * **deposit_enqueued_not_processed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **deposit_enqueued_not_processed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **deposit_enqueued_not_processed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **deposit_enqueued_not_processed.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount: db.NumericString | null;
      /**
      * **deposit_enqueued_not_processed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **deposit_enqueued_not_processed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_address**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_address: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_block_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_block_log_index: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_block_number: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      depositprocessed_block_timestamp: Date | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_chain: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      depositprocessed_data___amount_and_rewards: db.NumericString | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_data___domain: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_data___epoch: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_data___intent_id: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_data___ticker_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_name**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_name: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_network**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_network: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_0: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_1: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_2: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_3: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_transaction_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_transaction_index: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_transaction_log_index: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **deposit_enqueued_not_processed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **deposit_enqueued_not_processed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **deposit_enqueued_not_processed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **deposit_enqueued_not_processed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **deposit_enqueued_not_processed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **deposit_enqueued_not_processed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **deposit_enqueued_not_processed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **deposit_enqueued_not_processed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **deposit_enqueued_not_processed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **deposit_enqueued_not_processed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **deposit_enqueued_not_processed.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount: (number | db.NumericString) | null;
      /**
      * **deposit_enqueued_not_processed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **deposit_enqueued_not_processed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_address**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_address: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_block_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_block_log_index: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_block_number: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      depositprocessed_block_timestamp: db.TimestampString | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_chain: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      depositprocessed_data___amount_and_rewards: (number | db.NumericString) | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_data___domain: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_data___epoch: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_data___intent_id: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_data___ticker_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_name**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_name: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_network**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_network: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_0: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_1: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_2: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_3: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_transaction_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_transaction_index: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_transaction_log_index: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **deposit_enqueued_not_processed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **deposit_enqueued_not_processed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **deposit_enqueued_not_processed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **deposit_enqueued_not_processed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **deposit_enqueued_not_processed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **deposit_enqueued_not_processed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **deposit_enqueued_not_processed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **deposit_enqueued_not_processed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **deposit_enqueued_not_processed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_address**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      depositprocessed_block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      depositprocessed_data___amount_and_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_data___domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_data___epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_data___ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_name**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_network**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      depositprocessed_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.depositprocessed_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      depositprocessed_transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **deposit_enqueued_not_processed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **depositenqueued**
   * - Materialized view in database
   */
  export namespace depositenqueued {
    export type Table = 'depositenqueued';
    export interface Selectable {
      /**
      * **depositenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **depositenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **depositenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **depositenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **depositenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **depositenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **depositenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount: db.NumericString | null;
      /**
      * **depositenqueued.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: db.Int8String | null;
      /**
      * **depositenqueued.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch: db.Int8String | null;
      /**
      * **depositenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **depositenqueued.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **depositenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **depositenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **depositenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **depositenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **depositenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **depositenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **depositenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **depositenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **depositenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **depositenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **depositenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **depositenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **depositenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **depositenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **depositenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **depositenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **depositenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **depositenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount: (number | db.NumericString) | null;
      /**
      * **depositenqueued.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: (number | db.Int8String) | null;
      /**
      * **depositenqueued.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch: (number | db.Int8String) | null;
      /**
      * **depositenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **depositenqueued.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **depositenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **depositenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **depositenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **depositenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **depositenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **depositenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **depositenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **depositenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **depositenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **depositenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **depositenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **depositenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **depositors**
   * - Table in database
   */
  export namespace depositors {
    export type Table = 'depositors';
    export interface Selectable {
      /**
      * **depositors.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
    }
    export interface JSONSelectable {
      /**
      * **depositors.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
    }
    export interface Whereable {
      /**
      * **depositors.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **depositors.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **depositors.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'depositors_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **depositprocessed**
   * - Materialized view in database
   */
  export namespace depositprocessed {
    export type Table = 'depositprocessed';
    export interface Selectable {
      /**
      * **depositprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **depositprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **depositprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **depositprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **depositprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **depositprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **depositprocessed.data___amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount_and_rewards: db.NumericString | null;
      /**
      * **depositprocessed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: db.Int8String | null;
      /**
      * **depositprocessed.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch: db.Int8String | null;
      /**
      * **depositprocessed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **depositprocessed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **depositprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **depositprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **depositprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **depositprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **depositprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **depositprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **depositprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **depositprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **depositprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **depositprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **depositprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **depositprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **depositprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **depositprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **depositprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **depositprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **depositprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **depositprocessed.data___amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount_and_rewards: (number | db.NumericString) | null;
      /**
      * **depositprocessed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: (number | db.Int8String) | null;
      /**
      * **depositprocessed.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch: (number | db.Int8String) | null;
      /**
      * **depositprocessed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **depositprocessed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **depositprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **depositprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **depositprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **depositprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **depositprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **depositprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **depositprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **depositprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **depositprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **depositprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **depositprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **depositprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.data___amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount_and_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.data___epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **depositprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **destination_intents**
   * - Table in database
   */
  export namespace destination_intents {
    export type Table = 'destination_intents';
    export interface Selectable {
      /**
      * **destination_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **destination_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('destination_intents_auto_id_seq'::regclass)`
      */
      auto_id: db.Int8String;
      /**
      * **destination_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: db.Int8String;
      /**
      * **destination_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data: string | null;
      /**
      * **destination_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations: string[];
      /**
      * **destination_intents.fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      fee: string;
      /**
      * **destination_intents.filled_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      filled_domain: string;
      /**
      * **destination_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: db.Int8String;
      /**
      * **destination_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: db.Int8String;
      /**
      * **destination_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **destination_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator: string;
      /**
      * **destination_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset: string;
      /**
      * **destination_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee: string;
      /**
      * **destination_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id: string | null;
      /**
      * **destination_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce: db.Int8String;
      /**
      * **destination_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin: string;
      /**
      * **destination_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset: string;
      /**
      * **destination_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx: db.Int8String;
      /**
      * **destination_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver: string;
      /**
      * **destination_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data: string | null;
      /**
      * **destination_intents.solver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      solver: string;
      /**
      * **destination_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status: intent_status;
      /**
      * **destination_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: db.Int8String;
      /**
      * **destination_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string;
      /**
      * **destination_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl: db.Int8String;
      /**
      * **destination_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: db.Int8String;
      /**
      * **destination_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string;
    }
    export interface JSONSelectable {
      /**
      * **destination_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **destination_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('destination_intents_auto_id_seq'::regclass)`
      */
      auto_id: (number | db.Int8String);
      /**
      * **destination_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: (number | db.Int8String);
      /**
      * **destination_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data: string | null;
      /**
      * **destination_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations: string[];
      /**
      * **destination_intents.fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      fee: string;
      /**
      * **destination_intents.filled_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      filled_domain: string;
      /**
      * **destination_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: (number | db.Int8String);
      /**
      * **destination_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: (number | db.Int8String);
      /**
      * **destination_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **destination_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator: string;
      /**
      * **destination_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset: string;
      /**
      * **destination_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee: string;
      /**
      * **destination_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id: string | null;
      /**
      * **destination_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce: (number | db.Int8String);
      /**
      * **destination_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin: string;
      /**
      * **destination_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset: string;
      /**
      * **destination_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx: (number | db.Int8String);
      /**
      * **destination_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver: string;
      /**
      * **destination_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data: string | null;
      /**
      * **destination_intents.solver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      solver: string;
      /**
      * **destination_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status: intent_status;
      /**
      * **destination_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: (number | db.Int8String);
      /**
      * **destination_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string;
      /**
      * **destination_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl: (number | db.Int8String);
      /**
      * **destination_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: (number | db.Int8String);
      /**
      * **destination_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string;
    }
    export interface Whereable {
      /**
      * **destination_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('destination_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.filled_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      filled_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.solver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      solver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **destination_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('destination_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment;
      /**
      * **destination_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **destination_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **destination_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations: string[] | db.Parameter<string[]> | db.SQLFragment;
      /**
      * **destination_intents.fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      fee: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.filled_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      filled_domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **destination_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **destination_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **destination_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **destination_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **destination_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **destination_intents.solver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      solver: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment;
      /**
      * **destination_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **destination_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **destination_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **destination_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **destination_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('destination_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment>;
      /**
      * **destination_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **destination_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **destination_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
      /**
      * **destination_intents.fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      fee?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.filled_domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      filled_domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **destination_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **destination_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **destination_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **destination_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **destination_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **destination_intents.solver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      solver?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment>;
      /**
      * **destination_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **destination_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **destination_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **destination_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'destination_intents_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **destination_intents_status_log**
   * - Table in database
   */
  export namespace destination_intents_status_log {
    export type Table = 'destination_intents_status_log';
    export interface Selectable {
      /**
      * **destination_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at: Date | null;
      /**
      * **destination_intents_status_log.destination_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      destination_intent_id: string;
      /**
      * **destination_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('destination_intents_status_log_id_seq'::regclass)`
      */
      id: number;
      /**
      * **destination_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status: intent_status | null;
    }
    export interface JSONSelectable {
      /**
      * **destination_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at: db.TimestampTzString | null;
      /**
      * **destination_intents_status_log.destination_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      destination_intent_id: string;
      /**
      * **destination_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('destination_intents_status_log_id_seq'::regclass)`
      */
      id: number;
      /**
      * **destination_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status: intent_status | null;
    }
    export interface Whereable {
      /**
      * **destination_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents_status_log.destination_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      destination_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('destination_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **destination_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **destination_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **destination_intents_status_log.destination_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      destination_intent_id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **destination_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('destination_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **destination_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **destination_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **destination_intents_status_log.destination_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      destination_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **destination_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('destination_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **destination_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'destination_intents_status_log_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **epoch_results**
   * - Table in database
   */
  export namespace epoch_results {
    export type Table = 'epoch_results';
    export interface Selectable {
      /**
      * **epoch_results.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string;
      /**
      * **epoch_results.clear_emissions**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      clear_emissions: string;
      /**
      * **epoch_results.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards: string;
      /**
      * **epoch_results.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **epoch_results.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp: Date;
      /**
      * **epoch_results.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('epoch_results_id_seq'::regclass)`
      */
      id: number;
      /**
      * **epoch_results.total_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_volume: string;
      /**
      * **epoch_results.update_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      update_timestamp: Date;
      /**
      * **epoch_results.user_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user_volume: string;
    }
    export interface JSONSelectable {
      /**
      * **epoch_results.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string;
      /**
      * **epoch_results.clear_emissions**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      clear_emissions: string;
      /**
      * **epoch_results.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards: string;
      /**
      * **epoch_results.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **epoch_results.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp: db.TimestampString;
      /**
      * **epoch_results.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('epoch_results_id_seq'::regclass)`
      */
      id: number;
      /**
      * **epoch_results.total_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_volume: string;
      /**
      * **epoch_results.update_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      update_timestamp: db.TimestampString;
      /**
      * **epoch_results.user_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user_volume: string;
    }
    export interface Whereable {
      /**
      * **epoch_results.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **epoch_results.clear_emissions**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      clear_emissions?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **epoch_results.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **epoch_results.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **epoch_results.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **epoch_results.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('epoch_results_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **epoch_results.total_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_volume?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **epoch_results.update_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      update_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **epoch_results.user_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user_volume?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **epoch_results.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **epoch_results.clear_emissions**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      clear_emissions: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **epoch_results.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **epoch_results.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **epoch_results.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **epoch_results.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('epoch_results_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **epoch_results.total_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_volume: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **epoch_results.update_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      update_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      /**
      * **epoch_results.user_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user_volume: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **epoch_results.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **epoch_results.clear_emissions**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      clear_emissions?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **epoch_results.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **epoch_results.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **epoch_results.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **epoch_results.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('epoch_results_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **epoch_results.total_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_volume?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **epoch_results.update_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      update_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      /**
      * **epoch_results.user_volume**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user_volume?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'epoch_results_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **finddepositdomain**
   * - Materialized view in database
   */
  export namespace finddepositdomain {
    export type Table = 'finddepositdomain';
    export interface Selectable {
      /**
      * **finddepositdomain.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **finddepositdomain.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **finddepositdomain.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **finddepositdomain.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **finddepositdomain.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **finddepositdomain.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **finddepositdomain.data__amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount: db.NumericString | null;
      /**
      * **finddepositdomain.data__amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_and_rewards: db.NumericString | null;
      /**
      * **finddepositdomain.data__destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__destinations: db.JSONValue | null;
      /**
      * **finddepositdomain.data__highest_liquidity_destination**
      * - `numeric` in database
      * - Materialized view column
      */
      data__highest_liquidity_destination: db.NumericString | null;
      /**
      * **finddepositdomain.data__intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__intent_id: string | null;
      /**
      * **finddepositdomain.data__is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_deposit: boolean | null;
      /**
      * **finddepositdomain.data__liquidity_in_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__liquidity_in_destinations: db.JSONValue | null;
      /**
      * **finddepositdomain.data__origin**
      * - `int8` in database
      * - Materialized view column
      */
      data__origin: db.Int8String | null;
      /**
      * **finddepositdomain.data__selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_destination: db.Int8String | null;
      /**
      * **finddepositdomain.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash: string | null;
      /**
      * **finddepositdomain.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **finddepositdomain.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **finddepositdomain.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **finddepositdomain.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **finddepositdomain.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **finddepositdomain.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **finddepositdomain.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **finddepositdomain.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **finddepositdomain.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **finddepositdomain.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **finddepositdomain.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **finddepositdomain.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **finddepositdomain.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **finddepositdomain.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **finddepositdomain.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **finddepositdomain.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **finddepositdomain.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **finddepositdomain.data__amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount: (number | db.NumericString) | null;
      /**
      * **finddepositdomain.data__amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_and_rewards: (number | db.NumericString) | null;
      /**
      * **finddepositdomain.data__destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__destinations: db.JSONValue | null;
      /**
      * **finddepositdomain.data__highest_liquidity_destination**
      * - `numeric` in database
      * - Materialized view column
      */
      data__highest_liquidity_destination: (number | db.NumericString) | null;
      /**
      * **finddepositdomain.data__intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__intent_id: string | null;
      /**
      * **finddepositdomain.data__is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_deposit: boolean | null;
      /**
      * **finddepositdomain.data__liquidity_in_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__liquidity_in_destinations: db.JSONValue | null;
      /**
      * **finddepositdomain.data__origin**
      * - `int8` in database
      * - Materialized view column
      */
      data__origin: (number | db.Int8String) | null;
      /**
      * **finddepositdomain.data__selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_destination: (number | db.Int8String) | null;
      /**
      * **finddepositdomain.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash: string | null;
      /**
      * **finddepositdomain.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **finddepositdomain.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **finddepositdomain.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **finddepositdomain.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **finddepositdomain.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **finddepositdomain.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **finddepositdomain.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **finddepositdomain.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **finddepositdomain.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **finddepositdomain.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **finddepositdomain.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **finddepositdomain.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_and_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__destinations?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__highest_liquidity_destination**
      * - `numeric` in database
      * - Materialized view column
      */
      data__highest_liquidity_destination?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_deposit?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__liquidity_in_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__liquidity_in_destinations?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__origin**
      * - `int8` in database
      * - Materialized view column
      */
      data__origin?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_destination?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **finddepositdomain.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **findinvoicedomain**
   * - Materialized view in database
   */
  export namespace findinvoicedomain {
    export type Table = 'findinvoicedomain';
    export interface Selectable {
      /**
      * **findinvoicedomain.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **findinvoicedomain.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **findinvoicedomain.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **findinvoicedomain.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **findinvoicedomain.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **findinvoicedomain.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **findinvoicedomain.data__amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_after_discount: db.NumericString | null;
      /**
      * **findinvoicedomain.data__amount_to_be_discoutned**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_to_be_discoutned: db.NumericString | null;
      /**
      * **findinvoicedomain.data__current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__current_epoch: db.Int8String | null;
      /**
      * **findinvoicedomain.data__discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      data__discount_dbps: number | null;
      /**
      * **findinvoicedomain.data__domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__domain: db.Int8String | null;
      /**
      * **findinvoicedomain.data__entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__entry_epoch: db.Int8String | null;
      /**
      * **findinvoicedomain.data__invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__invoice_amount: db.NumericString | null;
      /**
      * **findinvoicedomain.data__invoice_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_intent_id: string | null;
      /**
      * **findinvoicedomain.data__invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_owner: string | null;
      /**
      * **findinvoicedomain.data__liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      data__liquidity: db.NumericString | null;
      /**
      * **findinvoicedomain.data__rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      data__rewards_for_depositors: db.NumericString | null;
      /**
      * **findinvoicedomain.data__selected_domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_domain: db.Int8String | null;
      /**
      * **findinvoicedomain.data__selected_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_liquidity: db.NumericString | null;
      /**
      * **findinvoicedomain.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash: string | null;
      /**
      * **findinvoicedomain.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **findinvoicedomain.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **findinvoicedomain.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **findinvoicedomain.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **findinvoicedomain.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **findinvoicedomain.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **findinvoicedomain.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **findinvoicedomain.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **findinvoicedomain.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **findinvoicedomain.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **findinvoicedomain.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **findinvoicedomain.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **findinvoicedomain.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **findinvoicedomain.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **findinvoicedomain.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **findinvoicedomain.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **findinvoicedomain.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **findinvoicedomain.data__amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_after_discount: (number | db.NumericString) | null;
      /**
      * **findinvoicedomain.data__amount_to_be_discoutned**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_to_be_discoutned: (number | db.NumericString) | null;
      /**
      * **findinvoicedomain.data__current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__current_epoch: (number | db.Int8String) | null;
      /**
      * **findinvoicedomain.data__discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      data__discount_dbps: number | null;
      /**
      * **findinvoicedomain.data__domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__domain: (number | db.Int8String) | null;
      /**
      * **findinvoicedomain.data__entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__entry_epoch: (number | db.Int8String) | null;
      /**
      * **findinvoicedomain.data__invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__invoice_amount: (number | db.NumericString) | null;
      /**
      * **findinvoicedomain.data__invoice_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_intent_id: string | null;
      /**
      * **findinvoicedomain.data__invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_owner: string | null;
      /**
      * **findinvoicedomain.data__liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      data__liquidity: (number | db.NumericString) | null;
      /**
      * **findinvoicedomain.data__rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      data__rewards_for_depositors: (number | db.NumericString) | null;
      /**
      * **findinvoicedomain.data__selected_domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_domain: (number | db.Int8String) | null;
      /**
      * **findinvoicedomain.data__selected_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_liquidity: (number | db.NumericString) | null;
      /**
      * **findinvoicedomain.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash: string | null;
      /**
      * **findinvoicedomain.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **findinvoicedomain.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **findinvoicedomain.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **findinvoicedomain.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **findinvoicedomain.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **findinvoicedomain.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **findinvoicedomain.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **findinvoicedomain.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **findinvoicedomain.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **findinvoicedomain.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **findinvoicedomain.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **findinvoicedomain.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_after_discount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__amount_to_be_discoutned**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_to_be_discoutned?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__current_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      data__discount_dbps?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__invoice_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__invoice_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      data__liquidity?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      data__rewards_for_depositors?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__selected_domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__selected_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_liquidity?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **findinvoicedomain.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **hub_deposits**
   * - Table in database
   */
  export namespace hub_deposits {
    export type Table = 'hub_deposits';
    export interface Selectable {
      /**
      * **hub_deposits.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **hub_deposits.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_deposits_auto_id_seq'::regclass)`
      */
      auto_id: db.Int8String;
      /**
      * **hub_deposits.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **hub_deposits.enqueued_timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_timestamp: db.Int8String;
      /**
      * **hub_deposits.enqueued_tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_tx_nonce: db.Int8String;
      /**
      * **hub_deposits.epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      epoch: db.Int8String;
      /**
      * **hub_deposits.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **hub_deposits.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id: string;
      /**
      * **hub_deposits.processed_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_timestamp: db.Int8String | null;
      /**
      * **hub_deposits.processed_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_tx_nonce: db.Int8String | null;
      /**
      * **hub_deposits.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash: string;
    }
    export interface JSONSelectable {
      /**
      * **hub_deposits.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **hub_deposits.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_deposits_auto_id_seq'::regclass)`
      */
      auto_id: (number | db.Int8String);
      /**
      * **hub_deposits.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **hub_deposits.enqueued_timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_timestamp: (number | db.Int8String);
      /**
      * **hub_deposits.enqueued_tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_tx_nonce: (number | db.Int8String);
      /**
      * **hub_deposits.epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      epoch: (number | db.Int8String);
      /**
      * **hub_deposits.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **hub_deposits.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id: string;
      /**
      * **hub_deposits.processed_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_timestamp: (number | db.Int8String) | null;
      /**
      * **hub_deposits.processed_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_tx_nonce: (number | db.Int8String) | null;
      /**
      * **hub_deposits.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash: string;
    }
    export interface Whereable {
      /**
      * **hub_deposits.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_deposits_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.enqueued_timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.enqueued_tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.processed_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.processed_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_deposits.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **hub_deposits.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_deposits.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_deposits_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment;
      /**
      * **hub_deposits.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_deposits.enqueued_timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_timestamp: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **hub_deposits.enqueued_tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_tx_nonce: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **hub_deposits.epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      epoch: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **hub_deposits.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_deposits.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_deposits.processed_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_deposits.processed_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_deposits.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **hub_deposits.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_deposits.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_deposits_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_deposits.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_deposits.enqueued_timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **hub_deposits.enqueued_tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **hub_deposits.epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **hub_deposits.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_deposits.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_deposits.processed_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_deposits.processed_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      processed_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_deposits.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'hub_deposits_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **hub_intents**
   * - Table in database
   */
  export namespace hub_intents {
    export type Table = 'hub_intents';
    export interface Selectable {
      /**
      * **hub_intents.added_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      added_timestamp: db.Int8String | null;
      /**
      * **hub_intents.added_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      added_tx_nonce: db.Int8String | null;
      /**
      * **hub_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_intents_auto_id_seq'::regclass)`
      */
      auto_id: db.Int8String;
      /**
      * **hub_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **hub_intents.filled_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_timestamp: db.Int8String | null;
      /**
      * **hub_intents.filled_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_tx_nonce: db.Int8String | null;
      /**
      * **hub_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **hub_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id: string | null;
      /**
      * **hub_intents.queue_idx**
      * - `int8` in database
      * - Nullable, no default
      */
      queue_idx: db.Int8String | null;
      /**
      * **hub_intents.settlement_amount**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_amount: string | null;
      /**
      * **hub_intents.settlement_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_domain: string | null;
      /**
      * **hub_intents.settlement_enqueued_block_number**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_block_number: db.Int8String | null;
      /**
      * **hub_intents.settlement_enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_timestamp: db.Int8String | null;
      /**
      * **hub_intents.settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_tx_nonce: db.Int8String | null;
      /**
      * **hub_intents.settlement_epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_epoch: db.Int8String | null;
      /**
      * **hub_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status: intent_status;
      /**
      * **hub_intents.update_virtual_balance**
      * - `bool` in database
      * - Nullable, no default
      */
      update_virtual_balance: boolean | null;
    }
    export interface JSONSelectable {
      /**
      * **hub_intents.added_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      added_timestamp: (number | db.Int8String) | null;
      /**
      * **hub_intents.added_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      added_tx_nonce: (number | db.Int8String) | null;
      /**
      * **hub_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_intents_auto_id_seq'::regclass)`
      */
      auto_id: (number | db.Int8String);
      /**
      * **hub_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **hub_intents.filled_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_timestamp: (number | db.Int8String) | null;
      /**
      * **hub_intents.filled_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_tx_nonce: (number | db.Int8String) | null;
      /**
      * **hub_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **hub_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id: string | null;
      /**
      * **hub_intents.queue_idx**
      * - `int8` in database
      * - Nullable, no default
      */
      queue_idx: (number | db.Int8String) | null;
      /**
      * **hub_intents.settlement_amount**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_amount: string | null;
      /**
      * **hub_intents.settlement_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_domain: string | null;
      /**
      * **hub_intents.settlement_enqueued_block_number**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_block_number: (number | db.Int8String) | null;
      /**
      * **hub_intents.settlement_enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_timestamp: (number | db.Int8String) | null;
      /**
      * **hub_intents.settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_tx_nonce: (number | db.Int8String) | null;
      /**
      * **hub_intents.settlement_epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_epoch: (number | db.Int8String) | null;
      /**
      * **hub_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status: intent_status;
      /**
      * **hub_intents.update_virtual_balance**
      * - `bool` in database
      * - Nullable, no default
      */
      update_virtual_balance: boolean | null;
    }
    export interface Whereable {
      /**
      * **hub_intents.added_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      added_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.added_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      added_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.filled_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.filled_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.queue_idx**
      * - `int8` in database
      * - Nullable, no default
      */
      queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.settlement_amount**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.settlement_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.settlement_enqueued_block_number**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.settlement_enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.settlement_epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents.update_virtual_balance**
      * - `bool` in database
      * - Nullable, no default
      */
      update_virtual_balance?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **hub_intents.added_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      added_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.added_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      added_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_intents.filled_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.filled_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.queue_idx**
      * - `int8` in database
      * - Nullable, no default
      */
      queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.settlement_amount**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_amount?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.settlement_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.settlement_enqueued_block_number**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.settlement_enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.settlement_epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents.update_virtual_balance**
      * - `bool` in database
      * - Nullable, no default
      */
      update_virtual_balance?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **hub_intents.added_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      added_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.added_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      added_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_intents.filled_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.filled_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      filled_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.queue_idx**
      * - `int8` in database
      * - Nullable, no default
      */
      queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.settlement_amount**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_amount?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.settlement_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      settlement_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.settlement_enqueued_block_number**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.settlement_enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.settlement_epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      settlement_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents.update_virtual_balance**
      * - `bool` in database
      * - Nullable, no default
      */
      update_virtual_balance?: boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'hub_intents_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **hub_intents_status_log**
   * - Table in database
   */
  export namespace hub_intents_status_log {
    export type Table = 'hub_intents_status_log';
    export interface Selectable {
      /**
      * **hub_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at: Date | null;
      /**
      * **hub_intents_status_log.hub_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      hub_intent_id: string;
      /**
      * **hub_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('hub_intents_status_log_id_seq'::regclass)`
      */
      id: number;
      /**
      * **hub_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status: intent_status | null;
    }
    export interface JSONSelectable {
      /**
      * **hub_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at: db.TimestampTzString | null;
      /**
      * **hub_intents_status_log.hub_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      hub_intent_id: string;
      /**
      * **hub_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('hub_intents_status_log_id_seq'::regclass)`
      */
      id: number;
      /**
      * **hub_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status: intent_status | null;
    }
    export interface Whereable {
      /**
      * **hub_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents_status_log.hub_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      hub_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('hub_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **hub_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents_status_log.hub_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      hub_intent_id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('hub_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **hub_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **hub_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents_status_log.hub_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      hub_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('hub_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'hub_intents_status_log_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **hub_invoices**
   * - Table in database
   */
  export namespace hub_invoices {
    export type Table = 'hub_invoices';
    export interface Selectable {
      /**
      * **hub_invoices.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **hub_invoices.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_invoices_auto_id_seq'::regclass)`
      */
      auto_id: db.Int8String;
      /**
      * **hub_invoices.enqueued_block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_block_number: db.Int8String;
      /**
      * **hub_invoices.enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_timestamp: db.Int8String | null;
      /**
      * **hub_invoices.enqueued_transaction_hash**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      enqueued_transaction_hash: string;
      /**
      * **hub_invoices.enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_tx_nonce: db.Int8String | null;
      /**
      * **hub_invoices.entry_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      entry_epoch: db.Int8String;
      /**
      * **hub_invoices.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **hub_invoices.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id: string;
      /**
      * **hub_invoices.owner**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      owner: string;
      /**
      * **hub_invoices.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash: string;
    }
    export interface JSONSelectable {
      /**
      * **hub_invoices.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **hub_invoices.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_invoices_auto_id_seq'::regclass)`
      */
      auto_id: (number | db.Int8String);
      /**
      * **hub_invoices.enqueued_block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_block_number: (number | db.Int8String);
      /**
      * **hub_invoices.enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_timestamp: (number | db.Int8String) | null;
      /**
      * **hub_invoices.enqueued_transaction_hash**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      enqueued_transaction_hash: string;
      /**
      * **hub_invoices.enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_tx_nonce: (number | db.Int8String) | null;
      /**
      * **hub_invoices.entry_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      entry_epoch: (number | db.Int8String);
      /**
      * **hub_invoices.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **hub_invoices.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id: string;
      /**
      * **hub_invoices.owner**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      owner: string;
      /**
      * **hub_invoices.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash: string;
    }
    export interface Whereable {
      /**
      * **hub_invoices.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_invoices_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.enqueued_block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.enqueued_transaction_hash**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      enqueued_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.entry_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.owner**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **hub_invoices.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **hub_invoices.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_invoices.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_invoices_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment;
      /**
      * **hub_invoices.enqueued_block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_block_number: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **hub_invoices.enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_invoices.enqueued_transaction_hash**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      enqueued_transaction_hash: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_invoices.enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **hub_invoices.entry_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      entry_epoch: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **hub_invoices.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_invoices.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_invoices.owner**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      owner: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **hub_invoices.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **hub_invoices.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_invoices.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('hub_invoices_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_invoices.enqueued_block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      enqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **hub_invoices.enqueued_timestamp**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_invoices.enqueued_transaction_hash**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      enqueued_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_invoices.enqueued_tx_nonce**
      * - `int8` in database
      * - Nullable, no default
      */
      enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **hub_invoices.entry_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **hub_invoices.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_invoices.intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      intent_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_invoices.owner**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      owner?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **hub_invoices.ticker_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'hub_invoices_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **intentprocessed**
   * - Materialized view in database
   */
  export namespace intentprocessed {
    export type Table = 'intentprocessed';
    export interface Selectable {
      /**
      * **intentprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **intentprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **intentprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **intentprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **intentprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **intentprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **intentprocessed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **intentprocessed.data___status**
      * - `int2` in database
      * - Materialized view column
      */
      data___status: number | null;
      /**
      * **intentprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **intentprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **intentprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **intentprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **intentprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **intentprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **intentprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **intentprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **intentprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **intentprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **intentprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **intentprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **intentprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **intentprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **intentprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **intentprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **intentprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **intentprocessed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **intentprocessed.data___status**
      * - `int2` in database
      * - Materialized view column
      */
      data___status: number | null;
      /**
      * **intentprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **intentprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **intentprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **intentprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **intentprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **intentprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **intentprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **intentprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **intentprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **intentprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **intentprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **intentprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.data___status**
      * - `int2` in database
      * - Materialized view column
      */
      data___status?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intentprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **intents**
   * - Materialized view in database
   */
  export namespace intents {
    export type Table = 'intents';
    export interface Selectable {
      /**
      * **intents.destination_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_amount: string | null;
      /**
      * **intents.destination_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      destination_auto_id: db.Int8String | null;
      /**
      * **intents.destination_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      destination_block_number: db.Int8String | null;
      /**
      * **intents.destination_data**
      * - `text` in database
      * - Materialized view column
      */
      destination_data: string | null;
      /**
      * **intents.destination_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      destination_destinations: string[] | null;
      /**
      * **intents.destination_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_fee: string | null;
      /**
      * **intents.destination_filled**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_filled: string | null;
      /**
      * **intents.destination_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_limit: db.Int8String | null;
      /**
      * **intents.destination_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_price: db.Int8String | null;
      /**
      * **intents.destination_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_initiator: string | null;
      /**
      * **intents.destination_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_input_asset: string | null;
      /**
      * **intents.destination_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_message_id: string | null;
      /**
      * **intents.destination_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_nonce: db.Int8String | null;
      /**
      * **intents.destination_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_origin: string | null;
      /**
      * **intents.destination_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_output_asset: string | null;
      /**
      * **intents.destination_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      destination_queue_idx: db.Int8String | null;
      /**
      * **intents.destination_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_receiver: string | null;
      /**
      * **intents.destination_return_data**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_return_data: string | null;
      /**
      * **intents.destination_solver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_solver: string | null;
      /**
      * **intents.destination_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      destination_status: intent_status | null;
      /**
      * **intents.destination_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      destination_timestamp: db.Int8String | null;
      /**
      * **intents.destination_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_transaction_hash: string | null;
      /**
      * **intents.destination_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      destination_ttl: db.Int8String | null;
      /**
      * **intents.destination_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_tx_nonce: db.Int8String | null;
      /**
      * **intents.destination_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_tx_origin: string | null;
      /**
      * **intents.has_calldata**
      * - `bool` in database
      * - Materialized view column
      */
      has_calldata: boolean | null;
      /**
      * **intents.hub_added_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_timestamp: db.Int8String | null;
      /**
      * **intents.hub_added_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_tx_nonce: db.Int8String | null;
      /**
      * **intents.hub_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_auto_id: db.Int8String | null;
      /**
      * **intents.hub_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_domain: string | null;
      /**
      * **intents.hub_filled_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_timestamp: db.Int8String | null;
      /**
      * **intents.hub_filled_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_tx_nonce: db.Int8String | null;
      /**
      * **intents.hub_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_message_id: string | null;
      /**
      * **intents.hub_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      hub_queue_idx: db.Int8String | null;
      /**
      * **intents.hub_settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_amount: string | null;
      /**
      * **intents.hub_settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_domain: string | null;
      /**
      * **intents.hub_settlement_enqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_block_number: db.Int8String | null;
      /**
      * **intents.hub_settlement_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_timestamp: db.Int8String | null;
      /**
      * **intents.hub_settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_tx_nonce: db.Int8String | null;
      /**
      * **intents.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch: db.Int8String | null;
      /**
      * **intents.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status: intent_status | null;
      /**
      * **intents.hub_update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      hub_update_virtual_balance: boolean | null;
      /**
      * **intents.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id: string | null;
      /**
      * **intents.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount: string | null;
      /**
      * **intents.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id: db.Int8String | null;
      /**
      * **intents.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number: db.Int8String | null;
      /**
      * **intents.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data: string | null;
      /**
      * **intents.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations: string[] | null;
      /**
      * **intents.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit: db.Int8String | null;
      /**
      * **intents.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price: db.Int8String | null;
      /**
      * **intents.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator: string | null;
      /**
      * **intents.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset: string | null;
      /**
      * **intents.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee: string | null;
      /**
      * **intents.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id: string | null;
      /**
      * **intents.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce: db.Int8String | null;
      /**
      * **intents.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin: string | null;
      /**
      * **intents.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset: string | null;
      /**
      * **intents.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx: db.Int8String | null;
      /**
      * **intents.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver: string | null;
      /**
      * **intents.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status: intent_status | null;
      /**
      * **intents.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp: db.Int8String | null;
      /**
      * **intents.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash: string | null;
      /**
      * **intents.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl: db.Int8String | null;
      /**
      * **intents.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce: db.Int8String | null;
      /**
      * **intents.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin: string | null;
      /**
      * **intents.settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_amount: string | null;
      /**
      * **intents.settlement_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_asset: string | null;
      /**
      * **intents.settlement_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_auto_id: db.Int8String | null;
      /**
      * **intents.settlement_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_block_number: db.Int8String | null;
      /**
      * **intents.settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_domain: string | null;
      /**
      * **intents.settlement_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_limit: db.Int8String | null;
      /**
      * **intents.settlement_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_price: db.Int8String | null;
      /**
      * **intents.settlement_recipient**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_recipient: string | null;
      /**
      * **intents.settlement_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      settlement_status: intent_status | null;
      /**
      * **intents.settlement_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_timestamp: db.Int8String | null;
      /**
      * **intents.settlement_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      settlement_transaction_hash: string | null;
      /**
      * **intents.settlement_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_tx_nonce: db.Int8String | null;
      /**
      * **intents.settlement_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_tx_origin: string | null;
      /**
      * **intents.status**
      * - `intent_status` in database
      * - Materialized view column
      */
      status: intent_status | null;
    }
    export interface JSONSelectable {
      /**
      * **intents.destination_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_amount: string | null;
      /**
      * **intents.destination_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      destination_auto_id: (number | db.Int8String) | null;
      /**
      * **intents.destination_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      destination_block_number: (number | db.Int8String) | null;
      /**
      * **intents.destination_data**
      * - `text` in database
      * - Materialized view column
      */
      destination_data: string | null;
      /**
      * **intents.destination_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      destination_destinations: string[] | null;
      /**
      * **intents.destination_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_fee: string | null;
      /**
      * **intents.destination_filled**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_filled: string | null;
      /**
      * **intents.destination_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_limit: (number | db.Int8String) | null;
      /**
      * **intents.destination_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_price: (number | db.Int8String) | null;
      /**
      * **intents.destination_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_initiator: string | null;
      /**
      * **intents.destination_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_input_asset: string | null;
      /**
      * **intents.destination_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_message_id: string | null;
      /**
      * **intents.destination_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_nonce: (number | db.Int8String) | null;
      /**
      * **intents.destination_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_origin: string | null;
      /**
      * **intents.destination_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_output_asset: string | null;
      /**
      * **intents.destination_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      destination_queue_idx: (number | db.Int8String) | null;
      /**
      * **intents.destination_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_receiver: string | null;
      /**
      * **intents.destination_return_data**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_return_data: string | null;
      /**
      * **intents.destination_solver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_solver: string | null;
      /**
      * **intents.destination_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      destination_status: intent_status | null;
      /**
      * **intents.destination_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      destination_timestamp: (number | db.Int8String) | null;
      /**
      * **intents.destination_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_transaction_hash: string | null;
      /**
      * **intents.destination_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      destination_ttl: (number | db.Int8String) | null;
      /**
      * **intents.destination_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents.destination_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_tx_origin: string | null;
      /**
      * **intents.has_calldata**
      * - `bool` in database
      * - Materialized view column
      */
      has_calldata: boolean | null;
      /**
      * **intents.hub_added_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_timestamp: (number | db.Int8String) | null;
      /**
      * **intents.hub_added_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents.hub_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_auto_id: (number | db.Int8String) | null;
      /**
      * **intents.hub_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_domain: string | null;
      /**
      * **intents.hub_filled_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_timestamp: (number | db.Int8String) | null;
      /**
      * **intents.hub_filled_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents.hub_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_message_id: string | null;
      /**
      * **intents.hub_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      hub_queue_idx: (number | db.Int8String) | null;
      /**
      * **intents.hub_settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_amount: string | null;
      /**
      * **intents.hub_settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_domain: string | null;
      /**
      * **intents.hub_settlement_enqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_block_number: (number | db.Int8String) | null;
      /**
      * **intents.hub_settlement_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_timestamp: (number | db.Int8String) | null;
      /**
      * **intents.hub_settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch: (number | db.Int8String) | null;
      /**
      * **intents.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status: intent_status | null;
      /**
      * **intents.hub_update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      hub_update_virtual_balance: boolean | null;
      /**
      * **intents.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id: string | null;
      /**
      * **intents.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount: string | null;
      /**
      * **intents.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id: (number | db.Int8String) | null;
      /**
      * **intents.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number: (number | db.Int8String) | null;
      /**
      * **intents.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data: string | null;
      /**
      * **intents.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations: string[] | null;
      /**
      * **intents.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit: (number | db.Int8String) | null;
      /**
      * **intents.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price: (number | db.Int8String) | null;
      /**
      * **intents.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator: string | null;
      /**
      * **intents.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset: string | null;
      /**
      * **intents.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee: string | null;
      /**
      * **intents.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id: string | null;
      /**
      * **intents.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce: (number | db.Int8String) | null;
      /**
      * **intents.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin: string | null;
      /**
      * **intents.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset: string | null;
      /**
      * **intents.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx: (number | db.Int8String) | null;
      /**
      * **intents.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver: string | null;
      /**
      * **intents.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status: intent_status | null;
      /**
      * **intents.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp: (number | db.Int8String) | null;
      /**
      * **intents.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash: string | null;
      /**
      * **intents.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl: (number | db.Int8String) | null;
      /**
      * **intents.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin: string | null;
      /**
      * **intents.settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_amount: string | null;
      /**
      * **intents.settlement_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_asset: string | null;
      /**
      * **intents.settlement_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_auto_id: (number | db.Int8String) | null;
      /**
      * **intents.settlement_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_block_number: (number | db.Int8String) | null;
      /**
      * **intents.settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_domain: string | null;
      /**
      * **intents.settlement_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_limit: (number | db.Int8String) | null;
      /**
      * **intents.settlement_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_price: (number | db.Int8String) | null;
      /**
      * **intents.settlement_recipient**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_recipient: string | null;
      /**
      * **intents.settlement_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      settlement_status: intent_status | null;
      /**
      * **intents.settlement_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_timestamp: (number | db.Int8String) | null;
      /**
      * **intents.settlement_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      settlement_transaction_hash: string | null;
      /**
      * **intents.settlement_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents.settlement_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_tx_origin: string | null;
      /**
      * **intents.status**
      * - `intent_status` in database
      * - Materialized view column
      */
      status: intent_status | null;
    }
    export interface Whereable {
      /**
      * **intents.destination_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      destination_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      destination_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_data**
      * - `text` in database
      * - Materialized view column
      */
      destination_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      destination_destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_filled**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_filled?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_initiator?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      destination_queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_receiver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_return_data**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_return_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_solver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_solver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      destination_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      destination_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      destination_ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.destination_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.has_calldata**
      * - `bool` in database
      * - Materialized view column
      */
      has_calldata?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_added_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_added_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_filled_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_filled_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      hub_queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_settlement_enqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_settlement_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.hub_update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      hub_update_virtual_balance?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_recipient**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_recipient?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      settlement_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      settlement_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.settlement_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents.status**
      * - `intent_status` in database
      * - Materialized view column
      */
      status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **intents_with_shadow_data**
   * - Materialized view in database
   */
  export namespace intents_with_shadow_data {
    export type Table = 'intents_with_shadow_data';
    export interface Selectable {
      /**
      * **intents_with_shadow_data.destination_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_amount: string | null;
      /**
      * **intents_with_shadow_data.destination_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      destination_auto_id: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      destination_block_number: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_data**
      * - `text` in database
      * - Materialized view column
      */
      destination_data: string | null;
      /**
      * **intents_with_shadow_data.destination_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      destination_destinations: string[] | null;
      /**
      * **intents_with_shadow_data.destination_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_fee: string | null;
      /**
      * **intents_with_shadow_data.destination_filled**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_filled: string | null;
      /**
      * **intents_with_shadow_data.destination_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_limit: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_price: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_initiator: string | null;
      /**
      * **intents_with_shadow_data.destination_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_input_asset: string | null;
      /**
      * **intents_with_shadow_data.destination_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_message_id: string | null;
      /**
      * **intents_with_shadow_data.destination_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_nonce: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_origin: string | null;
      /**
      * **intents_with_shadow_data.destination_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_output_asset: string | null;
      /**
      * **intents_with_shadow_data.destination_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      destination_queue_idx: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_receiver: string | null;
      /**
      * **intents_with_shadow_data.destination_return_data**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_return_data: string | null;
      /**
      * **intents_with_shadow_data.destination_solver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_solver: string | null;
      /**
      * **intents_with_shadow_data.destination_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      destination_status: intent_status | null;
      /**
      * **intents_with_shadow_data.destination_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      destination_timestamp: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_transaction_hash: string | null;
      /**
      * **intents_with_shadow_data.destination_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      destination_ttl: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_tx_nonce: db.Int8String | null;
      /**
      * **intents_with_shadow_data.destination_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_tx_origin: string | null;
      /**
      * **intents_with_shadow_data.find_deposit_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_amount: db.NumericString | null;
      /**
      * **intents_with_shadow_data.find_deposit_amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_amount_and_rewards: db.NumericString | null;
      /**
      * **intents_with_shadow_data.find_deposit_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      find_deposit_destinations: db.JSONValue | null;
      /**
      * **intents_with_shadow_data.find_deposit_highest_liquidity_destination**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_highest_liquidity_destination: db.NumericString | null;
      /**
      * **intents_with_shadow_data.find_deposit_liquidity_in_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      find_deposit_liquidity_in_destinations: db.JSONValue | null;
      /**
      * **intents_with_shadow_data.find_deposit_origin**
      * - `int8` in database
      * - Materialized view column
      */
      find_deposit_origin: db.Int8String | null;
      /**
      * **intents_with_shadow_data.find_deposit_selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      find_deposit_selected_destination: db.Int8String | null;
      /**
      * **intents_with_shadow_data.has_calldata**
      * - `bool` in database
      * - Materialized view column
      */
      has_calldata: boolean | null;
      /**
      * **intents_with_shadow_data.hub_added_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_timestamp: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_added_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_tx_nonce: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_auto_id: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_domain: string | null;
      /**
      * **intents_with_shadow_data.hub_filled_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_timestamp: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_filled_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_tx_nonce: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_message_id: string | null;
      /**
      * **intents_with_shadow_data.hub_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      hub_queue_idx: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_amount: string | null;
      /**
      * **intents_with_shadow_data.hub_settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_domain: string | null;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_block_number: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_timestamp: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_tx_nonce: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch: db.Int8String | null;
      /**
      * **intents_with_shadow_data.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status: intent_status | null;
      /**
      * **intents_with_shadow_data.hub_update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      hub_update_virtual_balance: boolean | null;
      /**
      * **intents_with_shadow_data.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id: string | null;
      /**
      * **intents_with_shadow_data.is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      is_deposit: boolean | null;
      /**
      * **intents_with_shadow_data.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount: string | null;
      /**
      * **intents_with_shadow_data.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data: string | null;
      /**
      * **intents_with_shadow_data.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations: string[] | null;
      /**
      * **intents_with_shadow_data.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator: string | null;
      /**
      * **intents_with_shadow_data.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset: string | null;
      /**
      * **intents_with_shadow_data.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee: string | null;
      /**
      * **intents_with_shadow_data.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id: string | null;
      /**
      * **intents_with_shadow_data.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin: string | null;
      /**
      * **intents_with_shadow_data.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset: string | null;
      /**
      * **intents_with_shadow_data.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver: string | null;
      /**
      * **intents_with_shadow_data.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status: intent_status | null;
      /**
      * **intents_with_shadow_data.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash: string | null;
      /**
      * **intents_with_shadow_data.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce: db.Int8String | null;
      /**
      * **intents_with_shadow_data.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin: string | null;
      /**
      * **intents_with_shadow_data.settle_deposit_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount: db.NumericString | null;
      /**
      * **intents_with_shadow_data.settle_deposit_amount_after_fees**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount_after_fees: db.NumericString | null;
      /**
      * **intents_with_shadow_data.settle_deposit_amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount_and_rewards: db.NumericString | null;
      /**
      * **intents_with_shadow_data.settle_deposit_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      settle_deposit_destinations: db.JSONValue | null;
      /**
      * **intents_with_shadow_data.settle_deposit_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settle_deposit_input_asset: string | null;
      /**
      * **intents_with_shadow_data.settle_deposit_is_settlement**
      * - `bool` in database
      * - Materialized view column
      */
      settle_deposit_is_settlement: boolean | null;
      /**
      * **intents_with_shadow_data.settle_deposit_origin**
      * - `int8` in database
      * - Materialized view column
      */
      settle_deposit_origin: db.Int8String | null;
      /**
      * **intents_with_shadow_data.settle_deposit_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settle_deposit_output_asset: string | null;
      /**
      * **intents_with_shadow_data.settle_deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_rewards: db.NumericString | null;
      /**
      * **intents_with_shadow_data.settle_deposit_selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      settle_deposit_selected_destination: db.Int8String | null;
      /**
      * **intents_with_shadow_data.settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_amount: string | null;
      /**
      * **intents_with_shadow_data.settlement_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_asset: string | null;
      /**
      * **intents_with_shadow_data.settlement_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_auto_id: db.Int8String | null;
      /**
      * **intents_with_shadow_data.settlement_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_block_number: db.Int8String | null;
      /**
      * **intents_with_shadow_data.settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_domain: string | null;
      /**
      * **intents_with_shadow_data.settlement_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_limit: db.Int8String | null;
      /**
      * **intents_with_shadow_data.settlement_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_price: db.Int8String | null;
      /**
      * **intents_with_shadow_data.settlement_recipient**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_recipient: string | null;
      /**
      * **intents_with_shadow_data.settlement_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      settlement_status: intent_status | null;
      /**
      * **intents_with_shadow_data.settlement_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_timestamp: db.Int8String | null;
      /**
      * **intents_with_shadow_data.settlement_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      settlement_transaction_hash: string | null;
      /**
      * **intents_with_shadow_data.settlement_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_tx_nonce: db.Int8String | null;
      /**
      * **intents_with_shadow_data.settlement_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_tx_origin: string | null;
      /**
      * **intents_with_shadow_data.status**
      * - `intent_status` in database
      * - Materialized view column
      */
      status: intent_status | null;
      /**
      * **intents_with_shadow_data.ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      ticker_hash: string | null;
    }
    export interface JSONSelectable {
      /**
      * **intents_with_shadow_data.destination_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_amount: string | null;
      /**
      * **intents_with_shadow_data.destination_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      destination_auto_id: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      destination_block_number: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_data**
      * - `text` in database
      * - Materialized view column
      */
      destination_data: string | null;
      /**
      * **intents_with_shadow_data.destination_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      destination_destinations: string[] | null;
      /**
      * **intents_with_shadow_data.destination_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_fee: string | null;
      /**
      * **intents_with_shadow_data.destination_filled**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_filled: string | null;
      /**
      * **intents_with_shadow_data.destination_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_limit: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_price: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_initiator: string | null;
      /**
      * **intents_with_shadow_data.destination_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_input_asset: string | null;
      /**
      * **intents_with_shadow_data.destination_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_message_id: string | null;
      /**
      * **intents_with_shadow_data.destination_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_nonce: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_origin: string | null;
      /**
      * **intents_with_shadow_data.destination_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_output_asset: string | null;
      /**
      * **intents_with_shadow_data.destination_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      destination_queue_idx: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_receiver: string | null;
      /**
      * **intents_with_shadow_data.destination_return_data**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_return_data: string | null;
      /**
      * **intents_with_shadow_data.destination_solver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_solver: string | null;
      /**
      * **intents_with_shadow_data.destination_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      destination_status: intent_status | null;
      /**
      * **intents_with_shadow_data.destination_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      destination_timestamp: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_transaction_hash: string | null;
      /**
      * **intents_with_shadow_data.destination_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      destination_ttl: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.destination_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_tx_origin: string | null;
      /**
      * **intents_with_shadow_data.find_deposit_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_amount: (number | db.NumericString) | null;
      /**
      * **intents_with_shadow_data.find_deposit_amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_amount_and_rewards: (number | db.NumericString) | null;
      /**
      * **intents_with_shadow_data.find_deposit_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      find_deposit_destinations: db.JSONValue | null;
      /**
      * **intents_with_shadow_data.find_deposit_highest_liquidity_destination**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_highest_liquidity_destination: (number | db.NumericString) | null;
      /**
      * **intents_with_shadow_data.find_deposit_liquidity_in_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      find_deposit_liquidity_in_destinations: db.JSONValue | null;
      /**
      * **intents_with_shadow_data.find_deposit_origin**
      * - `int8` in database
      * - Materialized view column
      */
      find_deposit_origin: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.find_deposit_selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      find_deposit_selected_destination: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.has_calldata**
      * - `bool` in database
      * - Materialized view column
      */
      has_calldata: boolean | null;
      /**
      * **intents_with_shadow_data.hub_added_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_timestamp: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_added_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_auto_id: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_domain: string | null;
      /**
      * **intents_with_shadow_data.hub_filled_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_timestamp: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_filled_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_message_id: string | null;
      /**
      * **intents_with_shadow_data.hub_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      hub_queue_idx: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_amount: string | null;
      /**
      * **intents_with_shadow_data.hub_settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_domain: string | null;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_block_number: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_timestamp: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status: intent_status | null;
      /**
      * **intents_with_shadow_data.hub_update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      hub_update_virtual_balance: boolean | null;
      /**
      * **intents_with_shadow_data.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id: string | null;
      /**
      * **intents_with_shadow_data.is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      is_deposit: boolean | null;
      /**
      * **intents_with_shadow_data.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount: string | null;
      /**
      * **intents_with_shadow_data.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data: string | null;
      /**
      * **intents_with_shadow_data.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations: string[] | null;
      /**
      * **intents_with_shadow_data.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator: string | null;
      /**
      * **intents_with_shadow_data.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset: string | null;
      /**
      * **intents_with_shadow_data.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee: string | null;
      /**
      * **intents_with_shadow_data.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id: string | null;
      /**
      * **intents_with_shadow_data.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin: string | null;
      /**
      * **intents_with_shadow_data.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset: string | null;
      /**
      * **intents_with_shadow_data.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver: string | null;
      /**
      * **intents_with_shadow_data.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status: intent_status | null;
      /**
      * **intents_with_shadow_data.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash: string | null;
      /**
      * **intents_with_shadow_data.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin: string | null;
      /**
      * **intents_with_shadow_data.settle_deposit_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount: (number | db.NumericString) | null;
      /**
      * **intents_with_shadow_data.settle_deposit_amount_after_fees**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount_after_fees: (number | db.NumericString) | null;
      /**
      * **intents_with_shadow_data.settle_deposit_amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount_and_rewards: (number | db.NumericString) | null;
      /**
      * **intents_with_shadow_data.settle_deposit_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      settle_deposit_destinations: db.JSONValue | null;
      /**
      * **intents_with_shadow_data.settle_deposit_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settle_deposit_input_asset: string | null;
      /**
      * **intents_with_shadow_data.settle_deposit_is_settlement**
      * - `bool` in database
      * - Materialized view column
      */
      settle_deposit_is_settlement: boolean | null;
      /**
      * **intents_with_shadow_data.settle_deposit_origin**
      * - `int8` in database
      * - Materialized view column
      */
      settle_deposit_origin: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.settle_deposit_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settle_deposit_output_asset: string | null;
      /**
      * **intents_with_shadow_data.settle_deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_rewards: (number | db.NumericString) | null;
      /**
      * **intents_with_shadow_data.settle_deposit_selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      settle_deposit_selected_destination: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_amount: string | null;
      /**
      * **intents_with_shadow_data.settlement_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_asset: string | null;
      /**
      * **intents_with_shadow_data.settlement_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_auto_id: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.settlement_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_block_number: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_domain: string | null;
      /**
      * **intents_with_shadow_data.settlement_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_limit: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.settlement_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_price: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.settlement_recipient**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_recipient: string | null;
      /**
      * **intents_with_shadow_data.settlement_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      settlement_status: intent_status | null;
      /**
      * **intents_with_shadow_data.settlement_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_timestamp: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.settlement_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      settlement_transaction_hash: string | null;
      /**
      * **intents_with_shadow_data.settlement_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_tx_nonce: (number | db.Int8String) | null;
      /**
      * **intents_with_shadow_data.settlement_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_tx_origin: string | null;
      /**
      * **intents_with_shadow_data.status**
      * - `intent_status` in database
      * - Materialized view column
      */
      status: intent_status | null;
      /**
      * **intents_with_shadow_data.ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      ticker_hash: string | null;
    }
    export interface Whereable {
      /**
      * **intents_with_shadow_data.destination_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      destination_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      destination_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_data**
      * - `text` in database
      * - Materialized view column
      */
      destination_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      destination_destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_filled**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_filled?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      destination_gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_initiator?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      destination_queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_receiver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_return_data**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_return_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_solver**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_solver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      destination_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      destination_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      destination_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      destination_ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      destination_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.destination_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      destination_tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.find_deposit_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.find_deposit_amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_amount_and_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.find_deposit_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      find_deposit_destinations?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.find_deposit_highest_liquidity_destination**
      * - `numeric` in database
      * - Materialized view column
      */
      find_deposit_highest_liquidity_destination?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.find_deposit_liquidity_in_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      find_deposit_liquidity_in_destinations?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.find_deposit_origin**
      * - `int8` in database
      * - Materialized view column
      */
      find_deposit_origin?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.find_deposit_selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      find_deposit_selected_destination?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.has_calldata**
      * - `bool` in database
      * - Materialized view column
      */
      has_calldata?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_added_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_added_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_added_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_filled_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_filled_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_filled_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      hub_queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_settlement_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_settlement_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.hub_update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      hub_update_virtual_balance?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      is_deposit?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_amount_after_fees**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount_after_fees?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_amount_and_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      settle_deposit_destinations?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settle_deposit_input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_is_settlement**
      * - `bool` in database
      * - Materialized view column
      */
      settle_deposit_is_settlement?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_origin**
      * - `int8` in database
      * - Materialized view column
      */
      settle_deposit_origin?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settle_deposit_output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      settle_deposit_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settle_deposit_selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      settle_deposit_selected_destination?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_domain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_recipient**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_recipient?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      settlement_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      settlement_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      settlement_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.settlement_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      settlement_tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.status**
      * - `intent_status` in database
      * - Materialized view column
      */
      status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **intents_with_shadow_data.ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **invoice_enqueued_not_settled**
   * - Materialized view in database
   */
  export namespace invoice_enqueued_not_settled {
    export type Table = 'invoice_enqueued_not_settled';
    export interface Selectable {
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_address**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_address: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_block_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_block_log_index: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_block_number: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      invoiceenqueued_block_timestamp: Date | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_chain: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      invoiceenqueued_data___amount: db.NumericString | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_data___entry_epoch: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___intent_id: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___owner: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___ticker_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_name**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_name: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_network**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_network: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_0: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_1: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_2: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_3: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_index: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_log_index: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_address**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_address: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_block_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_block_log_index: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_block_number: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      settlementenqueued_block_timestamp: Date | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_chain: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      settlementenqueued_data___amount: db.NumericString | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___asset: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_data___domain: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_data___entry_epoch: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___intent_id: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___owner: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      settlementenqueued_data___update_virtual_balance: boolean | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_name**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_name: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_network**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_network: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_0: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_1: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_2: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_3: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_index: db.Int8String | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_address**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_address: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_block_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_block_log_index: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_block_number: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      invoiceenqueued_block_timestamp: db.TimestampString | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_chain: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      invoiceenqueued_data___amount: (number | db.NumericString) | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_data___entry_epoch: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___intent_id: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___owner: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___ticker_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_name**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_name: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_network**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_network: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_0: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_1: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_2: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_3: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_index: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_log_index: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_address**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_address: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_block_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_block_log_index: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_block_number: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      settlementenqueued_block_timestamp: db.TimestampString | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_chain: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      settlementenqueued_data___amount: (number | db.NumericString) | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___asset: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_data___domain: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_data___entry_epoch: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___intent_id: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___owner: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      settlementenqueued_data___update_virtual_balance: boolean | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_name**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_name: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_network**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_network: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_0: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_1: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_2: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_3: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_hash: string | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_index: (number | db.Int8String) | null;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_address**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      invoiceenqueued_block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      invoiceenqueued_data___amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_data___entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_data___ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_name**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_network**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.invoiceenqueued_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      invoiceenqueued_transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_address**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      settlementenqueued_block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_chain**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      settlementenqueued_data___amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___asset**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_data___domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_data___entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_data___owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_data___update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      settlementenqueued_data___update_virtual_balance?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_name**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_network**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoice_enqueued_not_settled.settlementenqueued_transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      settlementenqueued_transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **invoiceenqueued**
   * - Materialized view in database
   */
  export namespace invoiceenqueued {
    export type Table = 'invoiceenqueued';
    export interface Selectable {
      /**
      * **invoiceenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **invoiceenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **invoiceenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **invoiceenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **invoiceenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **invoiceenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **invoiceenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount: db.NumericString | null;
      /**
      * **invoiceenqueued.data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___entry_epoch: db.Int8String | null;
      /**
      * **invoiceenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **invoiceenqueued.data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data___owner: string | null;
      /**
      * **invoiceenqueued.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **invoiceenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **invoiceenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **invoiceenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **invoiceenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **invoiceenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **invoiceenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **invoiceenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **invoiceenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **invoiceenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **invoiceenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **invoiceenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **invoiceenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **invoiceenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **invoiceenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **invoiceenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **invoiceenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **invoiceenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **invoiceenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount: (number | db.NumericString) | null;
      /**
      * **invoiceenqueued.data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___entry_epoch: (number | db.Int8String) | null;
      /**
      * **invoiceenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **invoiceenqueued.data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data___owner: string | null;
      /**
      * **invoiceenqueued.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash: string | null;
      /**
      * **invoiceenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **invoiceenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **invoiceenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **invoiceenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **invoiceenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **invoiceenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **invoiceenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **invoiceenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **invoiceenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **invoiceenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **invoiceenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **invoiceenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data___owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.data___ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data___ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoiceenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **invoices**
   * - Materialized view in database
   */
  export namespace invoices {
    export type Table = 'invoices';
    export interface Selectable {
      /**
      * **invoices.hub_invoice_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_amount: string | null;
      /**
      * **invoices.hub_invoice_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_auto_id: db.Int8String | null;
      /**
      * **invoices.hub_invoice_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_timestamp: db.Int8String | null;
      /**
      * **invoices.hub_invoice_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_tx_nonce: db.Int8String | null;
      /**
      * **invoices.hub_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_entry_epoch: db.Int8String | null;
      /**
      * **invoices.hub_invoice_id**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_id: string | null;
      /**
      * **invoices.hub_invoice_intent_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_intent_id: string | null;
      /**
      * **invoices.hub_invoice_owner**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_owner: string | null;
      /**
      * **invoices.hub_invoice_ticker_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_ticker_hash: string | null;
      /**
      * **invoices.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch: db.Int8String | null;
      /**
      * **invoices.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status: intent_status | null;
      /**
      * **invoices.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id: string | null;
      /**
      * **invoices.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount: string | null;
      /**
      * **invoices.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id: db.Int8String | null;
      /**
      * **invoices.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number: db.Int8String | null;
      /**
      * **invoices.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data: string | null;
      /**
      * **invoices.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations: string[] | null;
      /**
      * **invoices.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit: db.Int8String | null;
      /**
      * **invoices.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price: db.Int8String | null;
      /**
      * **invoices.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator: string | null;
      /**
      * **invoices.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset: string | null;
      /**
      * **invoices.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee: string | null;
      /**
      * **invoices.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id: string | null;
      /**
      * **invoices.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce: db.Int8String | null;
      /**
      * **invoices.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin: string | null;
      /**
      * **invoices.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset: string | null;
      /**
      * **invoices.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx: db.Int8String | null;
      /**
      * **invoices.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver: string | null;
      /**
      * **invoices.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status: intent_status | null;
      /**
      * **invoices.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp: db.Int8String | null;
      /**
      * **invoices.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash: string | null;
      /**
      * **invoices.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl: db.Int8String | null;
      /**
      * **invoices.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce: db.Int8String | null;
      /**
      * **invoices.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin: string | null;
    }
    export interface JSONSelectable {
      /**
      * **invoices.hub_invoice_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_amount: string | null;
      /**
      * **invoices.hub_invoice_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_auto_id: (number | db.Int8String) | null;
      /**
      * **invoices.hub_invoice_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_timestamp: (number | db.Int8String) | null;
      /**
      * **invoices.hub_invoice_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_tx_nonce: (number | db.Int8String) | null;
      /**
      * **invoices.hub_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_entry_epoch: (number | db.Int8String) | null;
      /**
      * **invoices.hub_invoice_id**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_id: string | null;
      /**
      * **invoices.hub_invoice_intent_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_intent_id: string | null;
      /**
      * **invoices.hub_invoice_owner**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_owner: string | null;
      /**
      * **invoices.hub_invoice_ticker_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_ticker_hash: string | null;
      /**
      * **invoices.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch: (number | db.Int8String) | null;
      /**
      * **invoices.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status: intent_status | null;
      /**
      * **invoices.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id: string | null;
      /**
      * **invoices.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount: string | null;
      /**
      * **invoices.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id: (number | db.Int8String) | null;
      /**
      * **invoices.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number: (number | db.Int8String) | null;
      /**
      * **invoices.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data: string | null;
      /**
      * **invoices.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations: string[] | null;
      /**
      * **invoices.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit: (number | db.Int8String) | null;
      /**
      * **invoices.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price: (number | db.Int8String) | null;
      /**
      * **invoices.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator: string | null;
      /**
      * **invoices.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset: string | null;
      /**
      * **invoices.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee: string | null;
      /**
      * **invoices.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id: string | null;
      /**
      * **invoices.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce: (number | db.Int8String) | null;
      /**
      * **invoices.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin: string | null;
      /**
      * **invoices.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset: string | null;
      /**
      * **invoices.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx: (number | db.Int8String) | null;
      /**
      * **invoices.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver: string | null;
      /**
      * **invoices.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status: intent_status | null;
      /**
      * **invoices.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp: (number | db.Int8String) | null;
      /**
      * **invoices.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash: string | null;
      /**
      * **invoices.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl: (number | db.Int8String) | null;
      /**
      * **invoices.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce: (number | db.Int8String) | null;
      /**
      * **invoices.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin: string | null;
    }
    export interface Whereable {
      /**
      * **invoices.hub_invoice_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_invoice_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_invoice_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_invoice_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_invoice_id**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_invoice_intent_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_invoice_owner**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_invoice_ticker_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **invoices_with_shadow_data**
   * - Materialized view in database
   */
  export namespace invoices_with_shadow_data {
    export type Table = 'invoices_with_shadow_data';
    export interface Selectable {
      /**
      * **invoices_with_shadow_data.find_invoice_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_amount_after_discount: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.find_invoice_amount_to_be_discoutned**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_amount_to_be_discoutned: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.find_invoice_current_domain**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_current_domain: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.find_invoice_current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_current_epoch: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.find_invoice_discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      find_invoice_discount_dbps: number | null;
      /**
      * **invoices_with_shadow_data.find_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_entry_epoch: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.find_invoice_invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_invoice_amount: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.find_invoice_invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      find_invoice_invoice_owner: string | null;
      /**
      * **invoices_with_shadow_data.find_invoice_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_liquidity: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.find_invoice_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_rewards_for_depositors: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.find_invoice_selected_domain**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_selected_domain: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.find_invoice_selected_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_selected_liquidity: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_amount: string | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_auto_id: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_timestamp: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_tx_nonce: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_entry_epoch: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_id**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_id: string | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_intent_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_intent_id: string | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_owner**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_owner: string | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_ticker_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_ticker_hash: string | null;
      /**
      * **invoices_with_shadow_data.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status: intent_status | null;
      /**
      * **invoices_with_shadow_data.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id: string | null;
      /**
      * **invoices_with_shadow_data.match_deposit_discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      match_deposit_discount_dbps: number | null;
      /**
      * **invoices_with_shadow_data.match_deposit_domain**
      * - `int8` in database
      * - Materialized view column
      */
      match_deposit_domain: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.match_deposit_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      match_deposit_intent_id: string | null;
      /**
      * **invoices_with_shadow_data.match_deposit_invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_invoice_amount: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.match_deposit_invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      match_deposit_invoice_owner: string | null;
      /**
      * **invoices_with_shadow_data.match_deposit_match_count**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_match_count: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.match_deposit_purchase_power**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_purchase_power: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.match_deposit_remaining_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_remaining_amount: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.match_deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_rewards: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_amount_after_discount: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_amount_to_be_discounted**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_amount_to_be_discounted: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_rewards_for_depositors: db.NumericString | null;
      /**
      * **invoices_with_shadow_data.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount: string | null;
      /**
      * **invoices_with_shadow_data.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data: string | null;
      /**
      * **invoices_with_shadow_data.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations: string[] | null;
      /**
      * **invoices_with_shadow_data.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator: string | null;
      /**
      * **invoices_with_shadow_data.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset: string | null;
      /**
      * **invoices_with_shadow_data.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee: string | null;
      /**
      * **invoices_with_shadow_data.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id: string | null;
      /**
      * **invoices_with_shadow_data.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin: string | null;
      /**
      * **invoices_with_shadow_data.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset: string | null;
      /**
      * **invoices_with_shadow_data.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver: string | null;
      /**
      * **invoices_with_shadow_data.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status: intent_status | null;
      /**
      * **invoices_with_shadow_data.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash: string | null;
      /**
      * **invoices_with_shadow_data.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce: db.Int8String | null;
      /**
      * **invoices_with_shadow_data.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin: string | null;
      /**
      * **invoices_with_shadow_data.ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      ticker_hash: string | null;
    }
    export interface JSONSelectable {
      /**
      * **invoices_with_shadow_data.find_invoice_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_amount_after_discount: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_amount_to_be_discoutned**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_amount_to_be_discoutned: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_current_domain**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_current_domain: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_current_epoch: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      find_invoice_discount_dbps: number | null;
      /**
      * **invoices_with_shadow_data.find_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_entry_epoch: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_invoice_amount: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      find_invoice_invoice_owner: string | null;
      /**
      * **invoices_with_shadow_data.find_invoice_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_liquidity: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_rewards_for_depositors: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_selected_domain**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_selected_domain: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.find_invoice_selected_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_selected_liquidity: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_amount: string | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_auto_id: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_timestamp: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_tx_nonce: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_entry_epoch: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_id**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_id: string | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_intent_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_intent_id: string | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_owner**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_owner: string | null;
      /**
      * **invoices_with_shadow_data.hub_invoice_ticker_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_ticker_hash: string | null;
      /**
      * **invoices_with_shadow_data.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status: intent_status | null;
      /**
      * **invoices_with_shadow_data.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id: string | null;
      /**
      * **invoices_with_shadow_data.match_deposit_discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      match_deposit_discount_dbps: number | null;
      /**
      * **invoices_with_shadow_data.match_deposit_domain**
      * - `int8` in database
      * - Materialized view column
      */
      match_deposit_domain: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.match_deposit_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      match_deposit_intent_id: string | null;
      /**
      * **invoices_with_shadow_data.match_deposit_invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_invoice_amount: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.match_deposit_invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      match_deposit_invoice_owner: string | null;
      /**
      * **invoices_with_shadow_data.match_deposit_match_count**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_match_count: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.match_deposit_purchase_power**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_purchase_power: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.match_deposit_remaining_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_remaining_amount: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.match_deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_rewards: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_amount_after_discount: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_amount_to_be_discounted**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_amount_to_be_discounted: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_rewards_for_depositors: (number | db.NumericString) | null;
      /**
      * **invoices_with_shadow_data.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount: string | null;
      /**
      * **invoices_with_shadow_data.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data: string | null;
      /**
      * **invoices_with_shadow_data.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations: string[] | null;
      /**
      * **invoices_with_shadow_data.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator: string | null;
      /**
      * **invoices_with_shadow_data.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset: string | null;
      /**
      * **invoices_with_shadow_data.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee: string | null;
      /**
      * **invoices_with_shadow_data.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id: string | null;
      /**
      * **invoices_with_shadow_data.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin: string | null;
      /**
      * **invoices_with_shadow_data.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset: string | null;
      /**
      * **invoices_with_shadow_data.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver: string | null;
      /**
      * **invoices_with_shadow_data.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status: intent_status | null;
      /**
      * **invoices_with_shadow_data.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash: string | null;
      /**
      * **invoices_with_shadow_data.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce: (number | db.Int8String) | null;
      /**
      * **invoices_with_shadow_data.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin: string | null;
      /**
      * **invoices_with_shadow_data.ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      ticker_hash: string | null;
    }
    export interface Whereable {
      /**
      * **invoices_with_shadow_data.find_invoice_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_amount_after_discount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_amount_to_be_discoutned**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_amount_to_be_discoutned?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_current_domain**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_current_domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_current_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      find_invoice_discount_dbps?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_invoice_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      find_invoice_invoice_owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_liquidity?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_rewards_for_depositors?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_selected_domain**
      * - `int8` in database
      * - Materialized view column
      */
      find_invoice_selected_domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.find_invoice_selected_liquidity**
      * - `numeric` in database
      * - Materialized view column
      */
      find_invoice_selected_liquidity?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_enqueued_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_enqueued_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_enqueued_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_invoice_entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_id**
      * - `varchar` in database
      * - Materialized view column
      */
      hub_invoice_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_intent_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_owner**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_invoice_ticker_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      hub_invoice_ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_settlement_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      hub_settlement_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.hub_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      hub_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.id**
      * - `bpchar` in database
      * - Materialized view column
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      match_deposit_discount_dbps?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_domain**
      * - `int8` in database
      * - Materialized view column
      */
      match_deposit_domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      match_deposit_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_invoice_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      match_deposit_invoice_owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_match_count**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_match_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_purchase_power**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_purchase_power?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_remaining_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_remaining_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_amount_after_discount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_amount_to_be_discounted**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_amount_to_be_discounted?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.match_deposit_selected_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      match_deposit_selected_rewards_for_depositors?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_amount**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_auto_id**
      * - `int8` in database
      * - Materialized view column
      */
      origin_auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_block_number**
      * - `int8` in database
      * - Materialized view column
      */
      origin_block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_data**
      * - `text` in database
      * - Materialized view column
      */
      origin_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_destinations**
      * - `_varchar` in database
      * - Materialized view column
      */
      origin_destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_gas_limit**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_gas_price**
      * - `int8` in database
      * - Materialized view column
      */
      origin_gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_initiator**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_initiator?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_max_fee**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_max_fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_message_id**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_queue_idx**
      * - `int8` in database
      * - Materialized view column
      */
      origin_queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_receiver**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_receiver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_status**
      * - `intent_status` in database
      * - Materialized view column
      */
      origin_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_timestamp**
      * - `int8` in database
      * - Materialized view column
      */
      origin_timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_transaction_hash**
      * - `bpchar` in database
      * - Materialized view column
      */
      origin_transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_ttl**
      * - `int8` in database
      * - Materialized view column
      */
      origin_ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_tx_nonce**
      * - `int8` in database
      * - Materialized view column
      */
      origin_tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.origin_tx_origin**
      * - `varchar` in database
      * - Materialized view column
      */
      origin_tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **invoices_with_shadow_data.ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **lock_positions**
   * - Table in database
   */
  export namespace lock_positions {
    export type Table = 'lock_positions';
    export interface Selectable {
      /**
      * **lock_positions.amount_locked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount_locked: string;
      /**
      * **lock_positions.expiry**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      expiry: db.Int8String;
      /**
      * **lock_positions.start**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      start: db.Int8String;
      /**
      * **lock_positions.user**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user: string;
    }
    export interface JSONSelectable {
      /**
      * **lock_positions.amount_locked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount_locked: string;
      /**
      * **lock_positions.expiry**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      expiry: (number | db.Int8String);
      /**
      * **lock_positions.start**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      start: (number | db.Int8String);
      /**
      * **lock_positions.user**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user: string;
    }
    export interface Whereable {
      /**
      * **lock_positions.amount_locked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount_locked?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lock_positions.expiry**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      expiry?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lock_positions.start**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      start?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **lock_positions.user**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **lock_positions.amount_locked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount_locked: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **lock_positions.expiry**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      expiry: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **lock_positions.start**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      start: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **lock_positions.user**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **lock_positions.amount_locked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount_locked?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **lock_positions.expiry**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      expiry?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **lock_positions.start**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      start?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **lock_positions.user**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      user?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'lock_positions_user_start_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **matchdeposit**
   * - Materialized view in database
   */
  export namespace matchdeposit {
    export type Table = 'matchdeposit';
    export interface Selectable {
      /**
      * **matchdeposit.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **matchdeposit.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **matchdeposit.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **matchdeposit.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **matchdeposit.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **matchdeposit.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **matchdeposit.data__deposit_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__deposit_intent_id: string | null;
      /**
      * **matchdeposit.data__deposit_purchase_power**
      * - `numeric` in database
      * - Materialized view column
      */
      data__deposit_purchase_power: db.NumericString | null;
      /**
      * **matchdeposit.data__deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__deposit_rewards: db.NumericString | null;
      /**
      * **matchdeposit.data__discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      data__discount_dbps: number | null;
      /**
      * **matchdeposit.data__domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__domain: db.Int8String | null;
      /**
      * **matchdeposit.data__invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__invoice_amount: db.NumericString | null;
      /**
      * **matchdeposit.data__invoice_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_intent_id: string | null;
      /**
      * **matchdeposit.data__invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_owner: string | null;
      /**
      * **matchdeposit.data__match_count**
      * - `numeric` in database
      * - Materialized view column
      */
      data__match_count: db.NumericString | null;
      /**
      * **matchdeposit.data__remaining_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__remaining_amount: db.NumericString | null;
      /**
      * **matchdeposit.data__selected_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_amount_after_discount: db.NumericString | null;
      /**
      * **matchdeposit.data__selected_amount_to_be_discounted**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_amount_to_be_discounted: db.NumericString | null;
      /**
      * **matchdeposit.data__selected_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_rewards_for_depositors: db.NumericString | null;
      /**
      * **matchdeposit.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash: string | null;
      /**
      * **matchdeposit.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **matchdeposit.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **matchdeposit.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **matchdeposit.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **matchdeposit.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **matchdeposit.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **matchdeposit.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **matchdeposit.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **matchdeposit.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **matchdeposit.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **matchdeposit.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **matchdeposit.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **matchdeposit.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **matchdeposit.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **matchdeposit.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **matchdeposit.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **matchdeposit.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **matchdeposit.data__deposit_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__deposit_intent_id: string | null;
      /**
      * **matchdeposit.data__deposit_purchase_power**
      * - `numeric` in database
      * - Materialized view column
      */
      data__deposit_purchase_power: (number | db.NumericString) | null;
      /**
      * **matchdeposit.data__deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__deposit_rewards: (number | db.NumericString) | null;
      /**
      * **matchdeposit.data__discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      data__discount_dbps: number | null;
      /**
      * **matchdeposit.data__domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__domain: (number | db.Int8String) | null;
      /**
      * **matchdeposit.data__invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__invoice_amount: (number | db.NumericString) | null;
      /**
      * **matchdeposit.data__invoice_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_intent_id: string | null;
      /**
      * **matchdeposit.data__invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_owner: string | null;
      /**
      * **matchdeposit.data__match_count**
      * - `numeric` in database
      * - Materialized view column
      */
      data__match_count: (number | db.NumericString) | null;
      /**
      * **matchdeposit.data__remaining_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__remaining_amount: (number | db.NumericString) | null;
      /**
      * **matchdeposit.data__selected_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_amount_after_discount: (number | db.NumericString) | null;
      /**
      * **matchdeposit.data__selected_amount_to_be_discounted**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_amount_to_be_discounted: (number | db.NumericString) | null;
      /**
      * **matchdeposit.data__selected_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_rewards_for_depositors: (number | db.NumericString) | null;
      /**
      * **matchdeposit.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash: string | null;
      /**
      * **matchdeposit.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **matchdeposit.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **matchdeposit.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **matchdeposit.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **matchdeposit.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **matchdeposit.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **matchdeposit.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **matchdeposit.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **matchdeposit.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **matchdeposit.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **matchdeposit.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **matchdeposit.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__deposit_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__deposit_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__deposit_purchase_power**
      * - `numeric` in database
      * - Materialized view column
      */
      data__deposit_purchase_power?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__deposit_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__deposit_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__discount_dbps**
      * - `int4` in database
      * - Materialized view column
      */
      data__discount_dbps?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__domain**
      * - `int8` in database
      * - Materialized view column
      */
      data__domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__invoice_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__invoice_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__invoice_intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__invoice_owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data__invoice_owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__match_count**
      * - `numeric` in database
      * - Materialized view column
      */
      data__match_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__remaining_amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__remaining_amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__selected_amount_after_discount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_amount_after_discount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__selected_amount_to_be_discounted**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_amount_to_be_discounted?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__selected_rewards_for_depositors**
      * - `numeric` in database
      * - Materialized view column
      */
      data__selected_rewards_for_depositors?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.data__ticker_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      data__ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **matchdeposit.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **merkle_trees**
   * - Table in database
   */
  export namespace merkle_trees {
    export type Table = 'merkle_trees';
    export interface Selectable {
      /**
      * **merkle_trees.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string;
      /**
      * **merkle_trees.epoch_end_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_end_timestamp: Date;
      /**
      * **merkle_trees.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('merkle_trees_id_seq'::regclass)`
      */
      id: number;
      /**
      * **merkle_trees.merkle_tree**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_tree: string;
      /**
      * **merkle_trees.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof: string;
      /**
      * **merkle_trees.root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      root: string;
      /**
      * **merkle_trees.snapshot_timestamp**
      * - `timestamp` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      snapshot_timestamp: Date | null;
    }
    export interface JSONSelectable {
      /**
      * **merkle_trees.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string;
      /**
      * **merkle_trees.epoch_end_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_end_timestamp: db.TimestampString;
      /**
      * **merkle_trees.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('merkle_trees_id_seq'::regclass)`
      */
      id: number;
      /**
      * **merkle_trees.merkle_tree**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_tree: string;
      /**
      * **merkle_trees.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof: string;
      /**
      * **merkle_trees.root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      root: string;
      /**
      * **merkle_trees.snapshot_timestamp**
      * - `timestamp` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      snapshot_timestamp: db.TimestampString | null;
    }
    export interface Whereable {
      /**
      * **merkle_trees.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **merkle_trees.epoch_end_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_end_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **merkle_trees.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('merkle_trees_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **merkle_trees.merkle_tree**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_tree?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **merkle_trees.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **merkle_trees.root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      root?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **merkle_trees.snapshot_timestamp**
      * - `timestamp` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      snapshot_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **merkle_trees.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **merkle_trees.epoch_end_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_end_timestamp: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **merkle_trees.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('merkle_trees_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **merkle_trees.merkle_tree**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_tree: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **merkle_trees.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **merkle_trees.root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      root: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **merkle_trees.snapshot_timestamp**
      * - `timestamp` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      snapshot_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **merkle_trees.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **merkle_trees.epoch_end_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_end_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **merkle_trees.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('merkle_trees_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **merkle_trees.merkle_tree**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_tree?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **merkle_trees.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **merkle_trees.root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      root?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **merkle_trees.snapshot_timestamp**
      * - `timestamp` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      snapshot_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_merkle_trees_root' | 'merkle_trees_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **messages**
   * - Table in database
   */
  export namespace messages {
    export type Table = 'messages';
    export interface Selectable {
      /**
      * **messages.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('messages_auto_id_seq'::regclass)`
      */
      auto_id: db.Int8String;
      /**
      * **messages.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: db.Int8String;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      destination_domain: string | null;
      /**
      * **messages.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **messages.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first: db.Int8String;
      /**
      * **messages.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: db.Int8String;
      /**
      * **messages.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: db.Int8String;
      /**
      * **messages.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **messages.intent_ids**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      intent_ids: string[];
      /**
      * **messages.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last: db.Int8String;
      /**
      * **messages.message_status**
      * - `message_status` in database
      * - `NOT NULL`, default: `'none'::message_status`
      */
      message_status: message_status;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      origin_domain: string | null;
      /**
      * **messages.quote**
      * - `varchar` in database
      * - Nullable, no default
      */
      quote: string | null;
      /**
      * **messages.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: db.Int8String;
      /**
      * **messages.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string;
      /**
      * **messages.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: db.Int8String;
      /**
      * **messages.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string;
      /**
      * **messages.type**
      * - `message_type` in database
      * - `NOT NULL`, no default
      */
      type: message_type;
    }
    export interface JSONSelectable {
      /**
      * **messages.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('messages_auto_id_seq'::regclass)`
      */
      auto_id: (number | db.Int8String);
      /**
      * **messages.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: (number | db.Int8String);
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      destination_domain: string | null;
      /**
      * **messages.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **messages.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first: (number | db.Int8String);
      /**
      * **messages.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: (number | db.Int8String);
      /**
      * **messages.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: (number | db.Int8String);
      /**
      * **messages.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **messages.intent_ids**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      intent_ids: string[];
      /**
      * **messages.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last: (number | db.Int8String);
      /**
      * **messages.message_status**
      * - `message_status` in database
      * - `NOT NULL`, default: `'none'::message_status`
      */
      message_status: message_status;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      origin_domain: string | null;
      /**
      * **messages.quote**
      * - `varchar` in database
      * - Nullable, no default
      */
      quote: string | null;
      /**
      * **messages.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: (number | db.Int8String);
      /**
      * **messages.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string;
      /**
      * **messages.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: (number | db.Int8String);
      /**
      * **messages.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string;
      /**
      * **messages.type**
      * - `message_type` in database
      * - `NOT NULL`, no default
      */
      type: message_type;
    }
    export interface Whereable {
      /**
      * **messages.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('messages_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      destination_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.intent_ids**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      intent_ids?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.message_status**
      * - `message_status` in database
      * - `NOT NULL`, default: `'none'::message_status`
      */
      message_status?: message_status | db.Parameter<message_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, message_status | db.Parameter<message_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      origin_domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.quote**
      * - `varchar` in database
      * - Nullable, no default
      */
      quote?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **messages.type**
      * - `message_type` in database
      * - `NOT NULL`, no default
      */
      type?: message_type | db.Parameter<message_type> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, message_type | db.Parameter<message_type> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **messages.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('messages_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment;
      /**
      * **messages.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      destination_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **messages.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **messages.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **messages.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **messages.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **messages.intent_ids**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      intent_ids: string[] | db.Parameter<string[]> | db.SQLFragment;
      /**
      * **messages.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **messages.message_status**
      * - `message_status` in database
      * - `NOT NULL`, default: `'none'::message_status`
      */
      message_status?: message_status | db.Parameter<message_status> | db.DefaultType | db.SQLFragment;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      origin_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.quote**
      * - `varchar` in database
      * - Nullable, no default
      */
      quote?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **messages.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **messages.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **messages.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **messages.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **messages.type**
      * - `message_type` in database
      * - `NOT NULL`, no default
      */
      type: message_type | db.Parameter<message_type> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **messages.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('messages_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **messages.destination_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      destination_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **messages.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **messages.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **messages.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **messages.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **messages.intent_ids**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      intent_ids?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
      /**
      * **messages.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **messages.message_status**
      * - `message_status` in database
      * - `NOT NULL`, default: `'none'::message_status`
      */
      message_status?: message_status | db.Parameter<message_status> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, message_status | db.Parameter<message_status> | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.origin_domain**
      * - `varchar` in database
      * - Nullable, no default
      */
      origin_domain?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.quote**
      * - `varchar` in database
      * - Nullable, no default
      */
      quote?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **messages.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **messages.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **messages.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **messages.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **messages.type**
      * - `message_type` in database
      * - `NOT NULL`, no default
      */
      type?: message_type | db.Parameter<message_type> | db.SQLFragment | db.SQLFragment<any, message_type | db.Parameter<message_type> | db.SQLFragment>;
    }
    export type UniqueIndex = 'messages_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **origin_intents**
   * - Table in database
   */
  export namespace origin_intents {
    export type Table = 'origin_intents';
    export interface Selectable {
      /**
      * **origin_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **origin_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('origin_intents_auto_id_seq'::regclass)`
      */
      auto_id: db.Int8String;
      /**
      * **origin_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: db.Int8String;
      /**
      * **origin_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data: string | null;
      /**
      * **origin_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations: string[];
      /**
      * **origin_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: db.Int8String;
      /**
      * **origin_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: db.Int8String;
      /**
      * **origin_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **origin_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator: string;
      /**
      * **origin_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset: string;
      /**
      * **origin_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee: string;
      /**
      * **origin_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id: string | null;
      /**
      * **origin_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce: db.Int8String;
      /**
      * **origin_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin: string;
      /**
      * **origin_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset: string;
      /**
      * **origin_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx: db.Int8String;
      /**
      * **origin_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver: string;
      /**
      * **origin_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status: intent_status;
      /**
      * **origin_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: db.Int8String;
      /**
      * **origin_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string;
      /**
      * **origin_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl: db.Int8String;
      /**
      * **origin_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: db.Int8String;
      /**
      * **origin_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string;
    }
    export interface JSONSelectable {
      /**
      * **origin_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **origin_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('origin_intents_auto_id_seq'::regclass)`
      */
      auto_id: (number | db.Int8String);
      /**
      * **origin_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: (number | db.Int8String);
      /**
      * **origin_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data: string | null;
      /**
      * **origin_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations: string[];
      /**
      * **origin_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: (number | db.Int8String);
      /**
      * **origin_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: (number | db.Int8String);
      /**
      * **origin_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **origin_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator: string;
      /**
      * **origin_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset: string;
      /**
      * **origin_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee: string;
      /**
      * **origin_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id: string | null;
      /**
      * **origin_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce: (number | db.Int8String);
      /**
      * **origin_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin: string;
      /**
      * **origin_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset: string;
      /**
      * **origin_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx: (number | db.Int8String);
      /**
      * **origin_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver: string;
      /**
      * **origin_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status: intent_status;
      /**
      * **origin_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: (number | db.Int8String);
      /**
      * **origin_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string;
      /**
      * **origin_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl: (number | db.Int8String);
      /**
      * **origin_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: (number | db.Int8String);
      /**
      * **origin_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string;
    }
    export interface Whereable {
      /**
      * **origin_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('origin_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **origin_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('origin_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment;
      /**
      * **origin_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **origin_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **origin_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations: string[] | db.Parameter<string[]> | db.SQLFragment;
      /**
      * **origin_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **origin_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **origin_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **origin_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **origin_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **origin_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment;
      /**
      * **origin_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **origin_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **origin_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **origin_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **origin_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **origin_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('origin_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment>;
      /**
      * **origin_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **origin_intents.data**
      * - `text` in database
      * - Nullable, no default
      */
      data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **origin_intents.destinations**
      * - `_varchar` in database
      * - `NOT NULL`, no default
      */
      destinations?: string[] | db.Parameter<string[]> | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment>;
      /**
      * **origin_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **origin_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **origin_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.initiator**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      initiator?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.input_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      input_asset?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.max_fee**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      max_fee?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.message_id**
      * - `bpchar` in database
      * - Nullable, no default
      */
      message_id?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **origin_intents.nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **origin_intents.origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      origin?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.output_asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      output_asset?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.queue_idx**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      queue_idx?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **origin_intents.receiver**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      receiver?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'NONE'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment>;
      /**
      * **origin_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **origin_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **origin_intents.ttl**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      ttl?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **origin_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **origin_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'origin_intents_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **origin_intents_status_log**
   * - Table in database
   */
  export namespace origin_intents_status_log {
    export type Table = 'origin_intents_status_log';
    export interface Selectable {
      /**
      * **origin_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at: Date | null;
      /**
      * **origin_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('origin_intents_status_log_id_seq'::regclass)`
      */
      id: number;
      /**
      * **origin_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status: intent_status | null;
      /**
      * **origin_intents_status_log.origin_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      origin_intent_id: string;
    }
    export interface JSONSelectable {
      /**
      * **origin_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at: db.TimestampTzString | null;
      /**
      * **origin_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('origin_intents_status_log_id_seq'::regclass)`
      */
      id: number;
      /**
      * **origin_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status: intent_status | null;
      /**
      * **origin_intents_status_log.origin_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      origin_intent_id: string;
    }
    export interface Whereable {
      /**
      * **origin_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('origin_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **origin_intents_status_log.origin_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      origin_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **origin_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **origin_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('origin_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **origin_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment;
      /**
      * **origin_intents_status_log.origin_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      origin_intent_id: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **origin_intents_status_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **origin_intents_status_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('origin_intents_status_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **origin_intents_status_log.new_status**
      * - `intent_status` in database
      * - Nullable, no default
      */
      new_status?: intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **origin_intents_status_log.origin_intent_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      origin_intent_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'origin_intents_status_log_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **queues**
   * - Table in database
   */
  export namespace queues {
    export type Table = 'queues';
    export interface Selectable {
      /**
      * **queues.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **queues.epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      epoch: db.Int8String | null;
      /**
      * **queues.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first: db.Int8String;
      /**
      * **queues.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **queues.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last: db.Int8String;
      /**
      * **queues.last_processed**
      * - `int8` in database
      * - Nullable, no default
      */
      last_processed: db.Int8String | null;
      /**
      * **queues.size**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      size: db.Int8String;
      /**
      * **queues.ticker_hash**
      * - `varchar` in database
      * - Nullable, no default
      */
      ticker_hash: string | null;
      /**
      * **queues.type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      type: queue_type;
    }
    export interface JSONSelectable {
      /**
      * **queues.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **queues.epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      epoch: (number | db.Int8String) | null;
      /**
      * **queues.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first: (number | db.Int8String);
      /**
      * **queues.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **queues.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last: (number | db.Int8String);
      /**
      * **queues.last_processed**
      * - `int8` in database
      * - Nullable, no default
      */
      last_processed: (number | db.Int8String) | null;
      /**
      * **queues.size**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      size: (number | db.Int8String);
      /**
      * **queues.ticker_hash**
      * - `varchar` in database
      * - Nullable, no default
      */
      ticker_hash: string | null;
      /**
      * **queues.type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      type: queue_type;
    }
    export interface Whereable {
      /**
      * **queues.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues.epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues.last_processed**
      * - `int8` in database
      * - Nullable, no default
      */
      last_processed?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues.size**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      size?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues.ticker_hash**
      * - `varchar` in database
      * - Nullable, no default
      */
      ticker_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues.type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      type?: queue_type | db.Parameter<queue_type> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, queue_type | db.Parameter<queue_type> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **queues.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **queues.epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **queues.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **queues.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **queues.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **queues.last_processed**
      * - `int8` in database
      * - Nullable, no default
      */
      last_processed?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **queues.size**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      size: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **queues.ticker_hash**
      * - `varchar` in database
      * - Nullable, no default
      */
      ticker_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **queues.type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      type: queue_type | db.Parameter<queue_type> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **queues.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **queues.epoch**
      * - `int8` in database
      * - Nullable, no default
      */
      epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **queues.first**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      first?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **queues.id**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **queues.last**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      last?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **queues.last_processed**
      * - `int8` in database
      * - Nullable, no default
      */
      last_processed?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **queues.size**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      size?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **queues.ticker_hash**
      * - `varchar` in database
      * - Nullable, no default
      */
      ticker_hash?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **queues.type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      type?: queue_type | db.Parameter<queue_type> | db.SQLFragment | db.SQLFragment<any, queue_type | db.Parameter<queue_type> | db.SQLFragment>;
    }
    export type UniqueIndex = 'queues_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **queues_type_log**
   * - Table in database
   */
  export namespace queues_type_log {
    export type Table = 'queues_type_log';
    export interface Selectable {
      /**
      * **queues_type_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at: Date | null;
      /**
      * **queues_type_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('queues_type_log_id_seq'::regclass)`
      */
      id: number;
      /**
      * **queues_type_log.new_type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      new_type: queue_type;
      /**
      * **queues_type_log.queue_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      queue_id: string;
    }
    export interface JSONSelectable {
      /**
      * **queues_type_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at: db.TimestampTzString | null;
      /**
      * **queues_type_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('queues_type_log_id_seq'::regclass)`
      */
      id: number;
      /**
      * **queues_type_log.new_type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      new_type: queue_type;
      /**
      * **queues_type_log.queue_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      queue_id: string;
    }
    export interface Whereable {
      /**
      * **queues_type_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues_type_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('queues_type_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues_type_log.new_type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      new_type?: queue_type | db.Parameter<queue_type> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, queue_type | db.Parameter<queue_type> | db.SQLFragment | db.ParentColumn>;
      /**
      * **queues_type_log.queue_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      queue_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **queues_type_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment;
      /**
      * **queues_type_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('queues_type_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **queues_type_log.new_type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      new_type: queue_type | db.Parameter<queue_type> | db.SQLFragment;
      /**
      * **queues_type_log.queue_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      queue_id: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **queues_type_log.changed_at**
      * - `timestamptz` in database
      * - Nullable, default: `CURRENT_TIMESTAMP`
      */
      changed_at?: (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampTzString | Date) | db.Parameter<(db.TimestampTzString | Date)> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **queues_type_log.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('queues_type_log_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **queues_type_log.new_type**
      * - `queue_type` in database
      * - `NOT NULL`, no default
      */
      new_type?: queue_type | db.Parameter<queue_type> | db.SQLFragment | db.SQLFragment<any, queue_type | db.Parameter<queue_type> | db.SQLFragment>;
      /**
      * **queues_type_log.queue_id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      queue_id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'queues_type_log_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **rewards**
   * - Table in database
   */
  export namespace rewards {
    export type Table = 'rewards';
    export interface Selectable {
      /**
      * **rewards.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string;
      /**
      * **rewards.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string;
      /**
      * **rewards.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards: string;
      /**
      * **rewards.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp: Date;
      /**
      * **rewards.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('rewards_id_seq'::regclass)`
      */
      id: number;
      /**
      * **rewards.merkle_root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_root: string;
      /**
      * **rewards.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof: string;
      /**
      * **rewards.proof_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      proof_timestamp: Date;
      /**
      * **rewards.protocol_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      protocol_rewards: string;
      /**
      * **rewards.stake_apy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_apy: string;
      /**
      * **rewards.stake_rewards**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_rewards: string;
      /**
      * **rewards.total_clear_staked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_clear_staked: string;
    }
    export interface JSONSelectable {
      /**
      * **rewards.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string;
      /**
      * **rewards.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string;
      /**
      * **rewards.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards: string;
      /**
      * **rewards.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp: db.TimestampString;
      /**
      * **rewards.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('rewards_id_seq'::regclass)`
      */
      id: number;
      /**
      * **rewards.merkle_root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_root: string;
      /**
      * **rewards.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof: string;
      /**
      * **rewards.proof_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      proof_timestamp: db.TimestampString;
      /**
      * **rewards.protocol_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      protocol_rewards: string;
      /**
      * **rewards.stake_apy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_apy: string;
      /**
      * **rewards.stake_rewards**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_rewards: string;
      /**
      * **rewards.total_clear_staked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_clear_staked: string;
    }
    export interface Whereable {
      /**
      * **rewards.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('rewards_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.merkle_root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_root?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.proof_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      proof_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.protocol_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      protocol_rewards?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.stake_apy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_apy?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.stake_rewards**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_rewards?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **rewards.total_clear_staked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_clear_staked?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **rewards.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **rewards.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **rewards.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **rewards.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment;
      /**
      * **rewards.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('rewards_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment;
      /**
      * **rewards.merkle_root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_root: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **rewards.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **rewards.proof_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      proof_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment;
      /**
      * **rewards.protocol_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      protocol_rewards?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment;
      /**
      * **rewards.stake_apy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_apy: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **rewards.stake_rewards**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_rewards: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **rewards.total_clear_staked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_clear_staked: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **rewards.account**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      account?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **rewards.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **rewards.cumulative_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      cumulative_rewards?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **rewards.epoch_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, no default
      */
      epoch_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment>;
      /**
      * **rewards.id**
      * - `int4` in database
      * - `NOT NULL`, default: `nextval('rewards_id_seq'::regclass)`
      */
      id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.DefaultType | db.SQLFragment>;
      /**
      * **rewards.merkle_root**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      merkle_root?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **rewards.proof**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      proof?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **rewards.proof_timestamp**
      * - `timestamp` in database
      * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
      */
      proof_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.DefaultType | db.SQLFragment>;
      /**
      * **rewards.protocol_rewards**
      * - `varchar` in database
      * - `NOT NULL`, default: `'0'::character varying`
      */
      protocol_rewards?: string | db.Parameter<string> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.DefaultType | db.SQLFragment>;
      /**
      * **rewards.stake_apy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_apy?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **rewards.stake_rewards**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      stake_rewards?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **rewards.total_clear_staked**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      total_clear_staked?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'idx_proofs_initiator_merkle_root_proof' | 'rewards_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **schema_migrations**
   * - Table in database
   */
  export namespace schema_migrations {
    export type Table = 'schema_migrations';
    export interface Selectable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      version: string;
    }
    export interface JSONSelectable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      version: string;
    }
    export interface Whereable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      version?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      version: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **schema_migrations.version**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      version?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'schema_migrations_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **settledeposit**
   * - Materialized view in database
   */
  export namespace settledeposit {
    export type Table = 'settledeposit';
    export interface Selectable {
      /**
      * **settledeposit.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **settledeposit.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **settledeposit.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **settledeposit.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **settledeposit.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **settledeposit.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **settledeposit.data__amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount: db.NumericString | null;
      /**
      * **settledeposit.data__amount_after_fees**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_after_fees: db.NumericString | null;
      /**
      * **settledeposit.data__amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_and_rewards: db.NumericString | null;
      /**
      * **settledeposit.data__destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__destinations: db.JSONValue | null;
      /**
      * **settledeposit.data__input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data__input_asset: string | null;
      /**
      * **settledeposit.data__intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__intent_id: string | null;
      /**
      * **settledeposit.data__is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_deposit: boolean | null;
      /**
      * **settledeposit.data__is_settlement**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_settlement: boolean | null;
      /**
      * **settledeposit.data__origin**
      * - `int8` in database
      * - Materialized view column
      */
      data__origin: db.Int8String | null;
      /**
      * **settledeposit.data__output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data__output_asset: string | null;
      /**
      * **settledeposit.data__rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__rewards: db.NumericString | null;
      /**
      * **settledeposit.data__selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_destination: db.Int8String | null;
      /**
      * **settledeposit.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **settledeposit.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **settledeposit.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **settledeposit.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **settledeposit.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **settledeposit.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **settledeposit.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **settledeposit.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **settledeposit.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **settledeposit.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **settledeposit.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **settledeposit.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **settledeposit.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **settledeposit.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **settledeposit.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **settledeposit.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **settledeposit.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **settledeposit.data__amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount: (number | db.NumericString) | null;
      /**
      * **settledeposit.data__amount_after_fees**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_after_fees: (number | db.NumericString) | null;
      /**
      * **settledeposit.data__amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_and_rewards: (number | db.NumericString) | null;
      /**
      * **settledeposit.data__destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__destinations: db.JSONValue | null;
      /**
      * **settledeposit.data__input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data__input_asset: string | null;
      /**
      * **settledeposit.data__intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__intent_id: string | null;
      /**
      * **settledeposit.data__is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_deposit: boolean | null;
      /**
      * **settledeposit.data__is_settlement**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_settlement: boolean | null;
      /**
      * **settledeposit.data__origin**
      * - `int8` in database
      * - Materialized view column
      */
      data__origin: (number | db.Int8String) | null;
      /**
      * **settledeposit.data__output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data__output_asset: string | null;
      /**
      * **settledeposit.data__rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__rewards: (number | db.NumericString) | null;
      /**
      * **settledeposit.data__selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_destination: (number | db.Int8String) | null;
      /**
      * **settledeposit.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **settledeposit.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **settledeposit.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **settledeposit.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **settledeposit.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **settledeposit.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **settledeposit.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **settledeposit.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **settledeposit.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **settledeposit.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **settledeposit.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **settledeposit.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__amount_after_fees**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_after_fees?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__amount_and_rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__amount_and_rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__destinations**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__destinations?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__input_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data__input_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data__intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__is_deposit**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_deposit?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__is_settlement**
      * - `bool` in database
      * - Materialized view column
      */
      data__is_settlement?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__origin**
      * - `int8` in database
      * - Materialized view column
      */
      data__origin?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__output_asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data__output_asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__rewards**
      * - `numeric` in database
      * - Materialized view column
      */
      data__rewards?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.data__selected_destination**
      * - `int8` in database
      * - Materialized view column
      */
      data__selected_destination?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settledeposit.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **settlement_intents**
   * - Table in database
   */
  export namespace settlement_intents {
    export type Table = 'settlement_intents';
    export interface Selectable {
      /**
      * **settlement_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **settlement_intents.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string;
      /**
      * **settlement_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('settlement_intents_auto_id_seq'::regclass)`
      */
      auto_id: db.Int8String;
      /**
      * **settlement_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: db.Int8String;
      /**
      * **settlement_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **settlement_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: db.Int8String;
      /**
      * **settlement_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: db.Int8String;
      /**
      * **settlement_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **settlement_intents.recipient**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      recipient: string;
      /**
      * **settlement_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data: string | null;
      /**
      * **settlement_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'SETTLED'::intent_status`
      */
      status: intent_status;
      /**
      * **settlement_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: db.Int8String;
      /**
      * **settlement_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string;
      /**
      * **settlement_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: db.Int8String;
      /**
      * **settlement_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string;
    }
    export interface JSONSelectable {
      /**
      * **settlement_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string;
      /**
      * **settlement_intents.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string;
      /**
      * **settlement_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('settlement_intents_auto_id_seq'::regclass)`
      */
      auto_id: (number | db.Int8String);
      /**
      * **settlement_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: (number | db.Int8String);
      /**
      * **settlement_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string;
      /**
      * **settlement_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: (number | db.Int8String);
      /**
      * **settlement_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: (number | db.Int8String);
      /**
      * **settlement_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **settlement_intents.recipient**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      recipient: string;
      /**
      * **settlement_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data: string | null;
      /**
      * **settlement_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'SETTLED'::intent_status`
      */
      status: intent_status;
      /**
      * **settlement_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: (number | db.Int8String);
      /**
      * **settlement_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string;
      /**
      * **settlement_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: (number | db.Int8String);
      /**
      * **settlement_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string;
    }
    export interface Whereable {
      /**
      * **settlement_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('settlement_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.recipient**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      recipient?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'SETTLED'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlement_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **settlement_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **settlement_intents.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **settlement_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('settlement_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment;
      /**
      * **settlement_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **settlement_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **settlement_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **settlement_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **settlement_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **settlement_intents.recipient**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      recipient: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **settlement_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
      /**
      * **settlement_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'SETTLED'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment;
      /**
      * **settlement_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **settlement_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **settlement_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **settlement_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **settlement_intents.amount**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      amount?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **settlement_intents.asset**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      asset?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **settlement_intents.auto_id**
      * - `int8` in database
      * - `NOT NULL`, default: `nextval('settlement_intents_auto_id_seq'::regclass)`
      */
      auto_id?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.DefaultType | db.SQLFragment>;
      /**
      * **settlement_intents.block_number**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **settlement_intents.domain**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      domain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **settlement_intents.gas_limit**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_limit?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **settlement_intents.gas_price**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      gas_price?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **settlement_intents.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **settlement_intents.recipient**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      recipient?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **settlement_intents.return_data**
      * - `varchar` in database
      * - Nullable, no default
      */
      return_data?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **settlement_intents.status**
      * - `intent_status` in database
      * - `NOT NULL`, default: `'SETTLED'::intent_status`
      */
      status?: intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment | db.SQLFragment<any, intent_status | db.Parameter<intent_status> | db.DefaultType | db.SQLFragment>;
      /**
      * **settlement_intents.timestamp**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      timestamp?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **settlement_intents.transaction_hash**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **settlement_intents.tx_nonce**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      tx_nonce?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **settlement_intents.tx_origin**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      tx_origin?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'settlement_intents_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **settlementenqueued**
   * - Materialized view in database
   */
  export namespace settlementenqueued {
    export type Table = 'settlementenqueued';
    export interface Selectable {
      /**
      * **settlementenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **settlementenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **settlementenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **settlementenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **settlementenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **settlementenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **settlementenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount: db.NumericString | null;
      /**
      * **settlementenqueued.data___asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data___asset: string | null;
      /**
      * **settlementenqueued.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: db.Int8String | null;
      /**
      * **settlementenqueued.data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___entry_epoch: db.Int8String | null;
      /**
      * **settlementenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **settlementenqueued.data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data___owner: string | null;
      /**
      * **settlementenqueued.data___update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      data___update_virtual_balance: boolean | null;
      /**
      * **settlementenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **settlementenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **settlementenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **settlementenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **settlementenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **settlementenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **settlementenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **settlementenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **settlementenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **settlementenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **settlementenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **settlementenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **settlementenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **settlementenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **settlementenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **settlementenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **settlementenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **settlementenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount: (number | db.NumericString) | null;
      /**
      * **settlementenqueued.data___asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data___asset: string | null;
      /**
      * **settlementenqueued.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: (number | db.Int8String) | null;
      /**
      * **settlementenqueued.data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___entry_epoch: (number | db.Int8String) | null;
      /**
      * **settlementenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id: string | null;
      /**
      * **settlementenqueued.data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data___owner: string | null;
      /**
      * **settlementenqueued.data___update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      data___update_virtual_balance: boolean | null;
      /**
      * **settlementenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **settlementenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **settlementenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **settlementenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **settlementenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **settlementenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **settlementenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **settlementenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **settlementenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **settlementenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **settlementenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **settlementenqueued.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.data___amount**
      * - `numeric` in database
      * - Materialized view column
      */
      data___amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.data___asset**
      * - `varchar` in database
      * - Materialized view column
      */
      data___asset?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.data___entry_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data___entry_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.data___intent_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___intent_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.data___owner**
      * - `varchar` in database
      * - Materialized view column
      */
      data___owner?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.data___update_virtual_balance**
      * - `bool` in database
      * - Materialized view column
      */
      data___update_virtual_balance?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementenqueued.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **settlementqueueprocessed**
   * - Materialized view in database
   */
  export namespace settlementqueueprocessed {
    export type Table = 'settlementqueueprocessed';
    export interface Selectable {
      /**
      * **settlementqueueprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **settlementqueueprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **settlementqueueprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **settlementqueueprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **settlementqueueprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **settlementqueueprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **settlementqueueprocessed.data___amount**
      * - `int8` in database
      * - Materialized view column
      */
      data___amount: db.Int8String | null;
      /**
      * **settlementqueueprocessed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: db.Int8String | null;
      /**
      * **settlementqueueprocessed.data___message_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___message_id: string | null;
      /**
      * **settlementqueueprocessed.data___quote**
      * - `numeric` in database
      * - Materialized view column
      */
      data___quote: db.NumericString | null;
      /**
      * **settlementqueueprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **settlementqueueprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **settlementqueueprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **settlementqueueprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **settlementqueueprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **settlementqueueprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **settlementqueueprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **settlementqueueprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **settlementqueueprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **settlementqueueprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **settlementqueueprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **settlementqueueprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **settlementqueueprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **settlementqueueprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **settlementqueueprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **settlementqueueprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **settlementqueueprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **settlementqueueprocessed.data___amount**
      * - `int8` in database
      * - Materialized view column
      */
      data___amount: (number | db.Int8String) | null;
      /**
      * **settlementqueueprocessed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain: (number | db.Int8String) | null;
      /**
      * **settlementqueueprocessed.data___message_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___message_id: string | null;
      /**
      * **settlementqueueprocessed.data___quote**
      * - `numeric` in database
      * - Materialized view column
      */
      data___quote: (number | db.NumericString) | null;
      /**
      * **settlementqueueprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **settlementqueueprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **settlementqueueprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **settlementqueueprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **settlementqueueprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **settlementqueueprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **settlementqueueprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **settlementqueueprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **settlementqueueprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **settlementqueueprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **settlementqueueprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **settlementqueueprocessed.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.data___amount**
      * - `int8` in database
      * - Materialized view column
      */
      data___amount?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.data___domain**
      * - `int8` in database
      * - Materialized view column
      */
      data___domain?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.data___message_id**
      * - `varchar` in database
      * - Materialized view column
      */
      data___message_id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.data___quote**
      * - `numeric` in database
      * - Materialized view column
      */
      data___quote?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementqueueprocessed.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **settlementsent**
   * - Materialized view in database
   */
  export namespace settlementsent {
    export type Table = 'settlementsent';
    export interface Selectable {
      /**
      * **settlementsent.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **settlementsent.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **settlementsent.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: db.Int8String | null;
      /**
      * **settlementsent.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: db.Int8String | null;
      /**
      * **settlementsent.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: Date | null;
      /**
      * **settlementsent.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **settlementsent.data__current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__current_epoch: db.Int8String | null;
      /**
      * **settlementsent.data__intent_ids**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__intent_ids: db.JSONValue | null;
      /**
      * **settlementsent.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **settlementsent.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **settlementsent.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **settlementsent.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: Date | null;
      /**
      * **settlementsent.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **settlementsent.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **settlementsent.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **settlementsent.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **settlementsent.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **settlementsent.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: db.Int8String | null;
      /**
      * **settlementsent.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: db.Int8String | null;
    }
    export interface JSONSelectable {
      /**
      * **settlementsent.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address: string | null;
      /**
      * **settlementsent.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash: string | null;
      /**
      * **settlementsent.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index: (number | db.Int8String) | null;
      /**
      * **settlementsent.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number: (number | db.Int8String) | null;
      /**
      * **settlementsent.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp: db.TimestampString | null;
      /**
      * **settlementsent.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain: string | null;
      /**
      * **settlementsent.data__current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__current_epoch: (number | db.Int8String) | null;
      /**
      * **settlementsent.data__intent_ids**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__intent_ids: db.JSONValue | null;
      /**
      * **settlementsent.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency: string | null;
      /**
      * **settlementsent.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name: string | null;
      /**
      * **settlementsent.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network: string | null;
      /**
      * **settlementsent.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp: db.TimestampString | null;
      /**
      * **settlementsent.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0: string | null;
      /**
      * **settlementsent.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1: string | null;
      /**
      * **settlementsent.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2: string | null;
      /**
      * **settlementsent.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3: string | null;
      /**
      * **settlementsent.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash: string | null;
      /**
      * **settlementsent.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index: (number | db.Int8String) | null;
      /**
      * **settlementsent.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index: (number | db.Int8String) | null;
    }
    export interface Whereable {
      /**
      * **settlementsent.address**
      * - `varchar` in database
      * - Materialized view column
      */
      address?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.block_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      block_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.block_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      block_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.block_number**
      * - `int8` in database
      * - Materialized view column
      */
      block_number?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.block_timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      block_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.chain**
      * - `varchar` in database
      * - Materialized view column
      */
      chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.data__current_epoch**
      * - `int8` in database
      * - Materialized view column
      */
      data__current_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.data__intent_ids**
      * - `jsonb` in database
      * - Materialized view column
      */
      data__intent_ids?: db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, db.JSONValue | db.Parameter<db.JSONValue> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.latency**
      * - `interval` in database
      * - Materialized view column
      */
      latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.name**
      * - `varchar` in database
      * - Materialized view column
      */
      name?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.network**
      * - `varchar` in database
      * - Materialized view column
      */
      network?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.timestamp**
      * - `timestamp` in database
      * - Materialized view column
      */
      timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.topic_0**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_0?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.topic_1**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_1?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.topic_2**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_2?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.topic_3**
      * - `varchar` in database
      * - Materialized view column
      */
      topic_3?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.transaction_hash**
      * - `varchar` in database
      * - Materialized view column
      */
      transaction_hash?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.transaction_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **settlementsent.transaction_log_index**
      * - `int8` in database
      * - Materialized view column
      */
      transaction_log_index?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      [key: string]: never;
    }
    export interface Updatable {
      [key: string]: never;
    }
    export type UniqueIndex = never;
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /**
   * **tokens**
   * - Table in database
   */
  export namespace tokens {
    export type Table = 'tokens';
    export interface Selectable {
      /**
      * **tokens.discount_per_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      discount_per_epoch: db.Int8String;
      /**
      * **tokens.fee_amounts**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_amounts: string[] | null;
      /**
      * **tokens.fee_recipients**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_recipients: string[] | null;
      /**
      * **tokens.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **tokens.max_discount_bps**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      max_discount_bps: db.Int8String;
      /**
      * **tokens.prioritized_strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      prioritized_strategy: string;
    }
    export interface JSONSelectable {
      /**
      * **tokens.discount_per_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      discount_per_epoch: (number | db.Int8String);
      /**
      * **tokens.fee_amounts**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_amounts: string[] | null;
      /**
      * **tokens.fee_recipients**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_recipients: string[] | null;
      /**
      * **tokens.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string;
      /**
      * **tokens.max_discount_bps**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      max_discount_bps: (number | db.Int8String);
      /**
      * **tokens.prioritized_strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      prioritized_strategy: string;
    }
    export interface Whereable {
      /**
      * **tokens.discount_per_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      discount_per_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tokens.fee_amounts**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_amounts?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tokens.fee_recipients**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_recipients?: string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string[] | db.Parameter<string[]> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tokens.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tokens.max_discount_bps**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      max_discount_bps?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      /**
      * **tokens.prioritized_strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      prioritized_strategy?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
    }
    export interface Insertable {
      /**
      * **tokens.discount_per_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      discount_per_epoch: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **tokens.fee_amounts**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_amounts?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tokens.fee_recipients**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_recipients?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment;
      /**
      * **tokens.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id: string | db.Parameter<string> | db.SQLFragment;
      /**
      * **tokens.max_discount_bps**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      max_discount_bps: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      /**
      * **tokens.prioritized_strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      prioritized_strategy: string | db.Parameter<string> | db.SQLFragment;
    }
    export interface Updatable {
      /**
      * **tokens.discount_per_epoch**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      discount_per_epoch?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **tokens.fee_amounts**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_amounts?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tokens.fee_recipients**
      * - `_varchar` in database
      * - Nullable, no default
      */
      fee_recipients?: string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string[] | db.Parameter<string[]> | null | db.DefaultType | db.SQLFragment>;
      /**
      * **tokens.id**
      * - `bpchar` in database
      * - `NOT NULL`, no default
      */
      id?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
      /**
      * **tokens.max_discount_bps**
      * - `int8` in database
      * - `NOT NULL`, no default
      */
      max_discount_bps?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      /**
      * **tokens.prioritized_strategy**
      * - `varchar` in database
      * - `NOT NULL`, no default
      */
      prioritized_strategy?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
    }
    export type UniqueIndex = 'tokens_pkey';
    export type Column = keyof Selectable;
    export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
    export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
    export type SQL = SQLExpression | SQLExpression[];
  }

  /* --- aggregate types --- */

  export namespace public {  
    export type Table = assets.Table | balances.Table | checkpoints.Table | closedepochsprocessed.Table | daily_metrics_by_chains_tokens.Table | daily_metrics_by_date.Table | deposit_enqueued_not_processed.Table | depositenqueued.Table | depositors.Table | depositprocessed.Table | destination_intents.Table | destination_intents_status_log.Table | epoch_results.Table | finddepositdomain.Table | findinvoicedomain.Table | hub_deposits.Table | hub_intents.Table | hub_intents_status_log.Table | hub_invoices.Table | intentprocessed.Table | intents.Table | intents_with_shadow_data.Table | invoice_enqueued_not_settled.Table | invoiceenqueued.Table | invoices.Table | invoices_with_shadow_data.Table | lock_positions.Table | matchdeposit.Table | merkle_trees.Table | messages.Table | origin_intents.Table | origin_intents_status_log.Table | queues.Table | queues_type_log.Table | rewards.Table | schema_migrations.Table | settledeposit.Table | settlement_intents.Table | settlementenqueued.Table | settlementqueueprocessed.Table | settlementsent.Table | tokens.Table;
    export type Selectable = assets.Selectable | balances.Selectable | checkpoints.Selectable | closedepochsprocessed.Selectable | daily_metrics_by_chains_tokens.Selectable | daily_metrics_by_date.Selectable | deposit_enqueued_not_processed.Selectable | depositenqueued.Selectable | depositors.Selectable | depositprocessed.Selectable | destination_intents.Selectable | destination_intents_status_log.Selectable | epoch_results.Selectable | finddepositdomain.Selectable | findinvoicedomain.Selectable | hub_deposits.Selectable | hub_intents.Selectable | hub_intents_status_log.Selectable | hub_invoices.Selectable | intentprocessed.Selectable | intents.Selectable | intents_with_shadow_data.Selectable | invoice_enqueued_not_settled.Selectable | invoiceenqueued.Selectable | invoices.Selectable | invoices_with_shadow_data.Selectable | lock_positions.Selectable | matchdeposit.Selectable | merkle_trees.Selectable | messages.Selectable | origin_intents.Selectable | origin_intents_status_log.Selectable | queues.Selectable | queues_type_log.Selectable | rewards.Selectable | schema_migrations.Selectable | settledeposit.Selectable | settlement_intents.Selectable | settlementenqueued.Selectable | settlementqueueprocessed.Selectable | settlementsent.Selectable | tokens.Selectable;
    export type JSONSelectable = assets.JSONSelectable | balances.JSONSelectable | checkpoints.JSONSelectable | closedepochsprocessed.JSONSelectable | daily_metrics_by_chains_tokens.JSONSelectable | daily_metrics_by_date.JSONSelectable | deposit_enqueued_not_processed.JSONSelectable | depositenqueued.JSONSelectable | depositors.JSONSelectable | depositprocessed.JSONSelectable | destination_intents.JSONSelectable | destination_intents_status_log.JSONSelectable | epoch_results.JSONSelectable | finddepositdomain.JSONSelectable | findinvoicedomain.JSONSelectable | hub_deposits.JSONSelectable | hub_intents.JSONSelectable | hub_intents_status_log.JSONSelectable | hub_invoices.JSONSelectable | intentprocessed.JSONSelectable | intents.JSONSelectable | intents_with_shadow_data.JSONSelectable | invoice_enqueued_not_settled.JSONSelectable | invoiceenqueued.JSONSelectable | invoices.JSONSelectable | invoices_with_shadow_data.JSONSelectable | lock_positions.JSONSelectable | matchdeposit.JSONSelectable | merkle_trees.JSONSelectable | messages.JSONSelectable | origin_intents.JSONSelectable | origin_intents_status_log.JSONSelectable | queues.JSONSelectable | queues_type_log.JSONSelectable | rewards.JSONSelectable | schema_migrations.JSONSelectable | settledeposit.JSONSelectable | settlement_intents.JSONSelectable | settlementenqueued.JSONSelectable | settlementqueueprocessed.JSONSelectable | settlementsent.JSONSelectable | tokens.JSONSelectable;
    export type Whereable = assets.Whereable | balances.Whereable | checkpoints.Whereable | closedepochsprocessed.Whereable | daily_metrics_by_chains_tokens.Whereable | daily_metrics_by_date.Whereable | deposit_enqueued_not_processed.Whereable | depositenqueued.Whereable | depositors.Whereable | depositprocessed.Whereable | destination_intents.Whereable | destination_intents_status_log.Whereable | epoch_results.Whereable | finddepositdomain.Whereable | findinvoicedomain.Whereable | hub_deposits.Whereable | hub_intents.Whereable | hub_intents_status_log.Whereable | hub_invoices.Whereable | intentprocessed.Whereable | intents.Whereable | intents_with_shadow_data.Whereable | invoice_enqueued_not_settled.Whereable | invoiceenqueued.Whereable | invoices.Whereable | invoices_with_shadow_data.Whereable | lock_positions.Whereable | matchdeposit.Whereable | merkle_trees.Whereable | messages.Whereable | origin_intents.Whereable | origin_intents_status_log.Whereable | queues.Whereable | queues_type_log.Whereable | rewards.Whereable | schema_migrations.Whereable | settledeposit.Whereable | settlement_intents.Whereable | settlementenqueued.Whereable | settlementqueueprocessed.Whereable | settlementsent.Whereable | tokens.Whereable;
    export type Insertable = assets.Insertable | balances.Insertable | checkpoints.Insertable | closedepochsprocessed.Insertable | daily_metrics_by_chains_tokens.Insertable | daily_metrics_by_date.Insertable | deposit_enqueued_not_processed.Insertable | depositenqueued.Insertable | depositors.Insertable | depositprocessed.Insertable | destination_intents.Insertable | destination_intents_status_log.Insertable | epoch_results.Insertable | finddepositdomain.Insertable | findinvoicedomain.Insertable | hub_deposits.Insertable | hub_intents.Insertable | hub_intents_status_log.Insertable | hub_invoices.Insertable | intentprocessed.Insertable | intents.Insertable | intents_with_shadow_data.Insertable | invoice_enqueued_not_settled.Insertable | invoiceenqueued.Insertable | invoices.Insertable | invoices_with_shadow_data.Insertable | lock_positions.Insertable | matchdeposit.Insertable | merkle_trees.Insertable | messages.Insertable | origin_intents.Insertable | origin_intents_status_log.Insertable | queues.Insertable | queues_type_log.Insertable | rewards.Insertable | schema_migrations.Insertable | settledeposit.Insertable | settlement_intents.Insertable | settlementenqueued.Insertable | settlementqueueprocessed.Insertable | settlementsent.Insertable | tokens.Insertable;
    export type Updatable = assets.Updatable | balances.Updatable | checkpoints.Updatable | closedepochsprocessed.Updatable | daily_metrics_by_chains_tokens.Updatable | daily_metrics_by_date.Updatable | deposit_enqueued_not_processed.Updatable | depositenqueued.Updatable | depositors.Updatable | depositprocessed.Updatable | destination_intents.Updatable | destination_intents_status_log.Updatable | epoch_results.Updatable | finddepositdomain.Updatable | findinvoicedomain.Updatable | hub_deposits.Updatable | hub_intents.Updatable | hub_intents_status_log.Updatable | hub_invoices.Updatable | intentprocessed.Updatable | intents.Updatable | intents_with_shadow_data.Updatable | invoice_enqueued_not_settled.Updatable | invoiceenqueued.Updatable | invoices.Updatable | invoices_with_shadow_data.Updatable | lock_positions.Updatable | matchdeposit.Updatable | merkle_trees.Updatable | messages.Updatable | origin_intents.Updatable | origin_intents_status_log.Updatable | queues.Updatable | queues_type_log.Updatable | rewards.Updatable | schema_migrations.Updatable | settledeposit.Updatable | settlement_intents.Updatable | settlementenqueued.Updatable | settlementqueueprocessed.Updatable | settlementsent.Updatable | tokens.Updatable;
    export type UniqueIndex = assets.UniqueIndex | balances.UniqueIndex | checkpoints.UniqueIndex | closedepochsprocessed.UniqueIndex | daily_metrics_by_chains_tokens.UniqueIndex | daily_metrics_by_date.UniqueIndex | deposit_enqueued_not_processed.UniqueIndex | depositenqueued.UniqueIndex | depositors.UniqueIndex | depositprocessed.UniqueIndex | destination_intents.UniqueIndex | destination_intents_status_log.UniqueIndex | epoch_results.UniqueIndex | finddepositdomain.UniqueIndex | findinvoicedomain.UniqueIndex | hub_deposits.UniqueIndex | hub_intents.UniqueIndex | hub_intents_status_log.UniqueIndex | hub_invoices.UniqueIndex | intentprocessed.UniqueIndex | intents.UniqueIndex | intents_with_shadow_data.UniqueIndex | invoice_enqueued_not_settled.UniqueIndex | invoiceenqueued.UniqueIndex | invoices.UniqueIndex | invoices_with_shadow_data.UniqueIndex | lock_positions.UniqueIndex | matchdeposit.UniqueIndex | merkle_trees.UniqueIndex | messages.UniqueIndex | origin_intents.UniqueIndex | origin_intents_status_log.UniqueIndex | queues.UniqueIndex | queues_type_log.UniqueIndex | rewards.UniqueIndex | schema_migrations.UniqueIndex | settledeposit.UniqueIndex | settlement_intents.UniqueIndex | settlementenqueued.UniqueIndex | settlementqueueprocessed.UniqueIndex | settlementsent.UniqueIndex | tokens.UniqueIndex;
    export type Column = assets.Column | balances.Column | checkpoints.Column | closedepochsprocessed.Column | daily_metrics_by_chains_tokens.Column | daily_metrics_by_date.Column | deposit_enqueued_not_processed.Column | depositenqueued.Column | depositors.Column | depositprocessed.Column | destination_intents.Column | destination_intents_status_log.Column | epoch_results.Column | finddepositdomain.Column | findinvoicedomain.Column | hub_deposits.Column | hub_intents.Column | hub_intents_status_log.Column | hub_invoices.Column | intentprocessed.Column | intents.Column | intents_with_shadow_data.Column | invoice_enqueued_not_settled.Column | invoiceenqueued.Column | invoices.Column | invoices_with_shadow_data.Column | lock_positions.Column | matchdeposit.Column | merkle_trees.Column | messages.Column | origin_intents.Column | origin_intents_status_log.Column | queues.Column | queues_type_log.Column | rewards.Column | schema_migrations.Column | settledeposit.Column | settlement_intents.Column | settlementenqueued.Column | settlementqueueprocessed.Column | settlementsent.Column | tokens.Column;
  
    export type AllBaseTables = [assets.Table, balances.Table, checkpoints.Table, depositors.Table, destination_intents.Table, destination_intents_status_log.Table, epoch_results.Table, hub_deposits.Table, hub_intents.Table, hub_intents_status_log.Table, hub_invoices.Table, lock_positions.Table, merkle_trees.Table, messages.Table, origin_intents.Table, origin_intents_status_log.Table, queues.Table, queues_type_log.Table, rewards.Table, schema_migrations.Table, settlement_intents.Table, tokens.Table];
    export type AllForeignTables = [];
    export type AllViews = [];
    export type AllMaterializedViews = [closedepochsprocessed.Table, daily_metrics_by_chains_tokens.Table, daily_metrics_by_date.Table, deposit_enqueued_not_processed.Table, depositenqueued.Table, depositprocessed.Table, finddepositdomain.Table, findinvoicedomain.Table, intentprocessed.Table, intents.Table, intents_with_shadow_data.Table, invoice_enqueued_not_settled.Table, invoiceenqueued.Table, invoices.Table, invoices_with_shadow_data.Table, matchdeposit.Table, settledeposit.Table, settlementenqueued.Table, settlementqueueprocessed.Table, settlementsent.Table];
    export type AllTablesAndViews = [assets.Table, balances.Table, checkpoints.Table, closedepochsprocessed.Table, daily_metrics_by_chains_tokens.Table, daily_metrics_by_date.Table, deposit_enqueued_not_processed.Table, depositenqueued.Table, depositors.Table, depositprocessed.Table, destination_intents.Table, destination_intents_status_log.Table, epoch_results.Table, finddepositdomain.Table, findinvoicedomain.Table, hub_deposits.Table, hub_intents.Table, hub_intents_status_log.Table, hub_invoices.Table, intentprocessed.Table, intents.Table, intents_with_shadow_data.Table, invoice_enqueued_not_settled.Table, invoiceenqueued.Table, invoices.Table, invoices_with_shadow_data.Table, lock_positions.Table, matchdeposit.Table, merkle_trees.Table, messages.Table, origin_intents.Table, origin_intents_status_log.Table, queues.Table, queues_type_log.Table, rewards.Table, schema_migrations.Table, settledeposit.Table, settlement_intents.Table, settlementenqueued.Table, settlementqueueprocessed.Table, settlementsent.Table, tokens.Table];
  }



  /* === schema: tokenomics === */

  export namespace tokenomics {
  
    /* --- enums --- */
    /* (none) */
  
    /* --- tables --- */
  
    /**
     * **tokenomics.bridge_in_error**
     * - Table in database
     */
    export namespace bridge_in_error {
      export type Table = 'tokenomics.bridge_in_error';
      export interface Selectable {
        /**
        * **tokenomics.bridge_in_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridge_in_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridge_in_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.bridge_in_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridge_in_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.bridge_in_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.bridge_in_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: db.NumericString;
        /**
        * **tokenomics.bridge_in_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.bridge_in_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.bridge_in_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridge_in_error.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp: db.NumericString;
        /**
        * **tokenomics.bridge_in_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.bridge_in_error.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.bridge_in_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.bridge_in_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridge_in_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridge_in_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.bridge_in_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridge_in_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.bridge_in_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.bridge_in_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString);
        /**
        * **tokenomics.bridge_in_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.bridge_in_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.bridge_in_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridge_in_error.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp: (number | db.NumericString);
        /**
        * **tokenomics.bridge_in_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.bridge_in_error.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.bridge_in_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.bridge_in_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_in_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.bridge_in_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_in_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.bridge_in_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_in_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'bridge_in_error_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.bridge_updated**
     * - Table in database
     */
    export namespace bridge_updated {
      export type Table = 'tokenomics.bridge_updated';
      export interface Selectable {
        /**
        * **tokenomics.bridge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.bridge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.bridge_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: Buffer;
        /**
        * **tokenomics.bridge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.bridge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.bridge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridge_updated.new_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_bridge: Buffer;
        /**
        * **tokenomics.bridge_updated.old_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_bridge: Buffer;
        /**
        * **tokenomics.bridge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.bridge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.bridge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.bridge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.bridge_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: db.ByteArrayString;
        /**
        * **tokenomics.bridge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.bridge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.bridge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridge_updated.new_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_bridge: db.ByteArrayString;
        /**
        * **tokenomics.bridge_updated.old_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_bridge: db.ByteArrayString;
        /**
        * **tokenomics.bridge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.bridge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.bridge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.new_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_bridge?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.old_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_bridge?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.bridge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.new_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_bridge: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.old_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_bridge: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.bridge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.new_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_bridge?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.old_bridge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_bridge?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'bridge_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.bridged_in**
     * - Table in database
     */
    export namespace bridged_in {
      export type Table = 'tokenomics.bridged_in';
      export interface Selectable {
        /**
        * **tokenomics.bridged_in._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridged_in._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridged_in.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.bridged_in.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridged_in.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.bridged_in.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.bridged_in.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.bridged_in.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.bridged_in.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridged_in.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: Buffer;
        /**
        * **tokenomics.bridged_in.src_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        src_chain_id: db.NumericString;
        /**
        * **tokenomics.bridged_in.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.bridged_in.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.bridged_in._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridged_in._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridged_in.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.bridged_in.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridged_in.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.bridged_in.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.bridged_in.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.bridged_in.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.bridged_in.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridged_in.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: db.ByteArrayString;
        /**
        * **tokenomics.bridged_in.src_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        src_chain_id: (number | db.NumericString);
        /**
        * **tokenomics.bridged_in.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.bridged_in.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.bridged_in._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.src_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        src_chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_in.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.bridged_in._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.src_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        src_chain_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_in.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.bridged_in._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.src_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        src_chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_in.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'bridged_in_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.bridged_lock**
     * - Table in database
     */
    export namespace bridged_lock {
      export type Table = 'tokenomics.bridged_lock';
      export interface Selectable {
        /**
        * **tokenomics.bridged_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridged_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridged_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.bridged_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridged_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.bridged_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.bridged_lock.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: db.NumericString;
        /**
        * **tokenomics.bridged_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: db.NumericString;
        /**
        * **tokenomics.bridged_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.bridged_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.bridged_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridged_lock.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: Buffer;
        /**
        * **tokenomics.bridged_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.bridged_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.bridged_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridged_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridged_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridged_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.bridged_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.bridged_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridged_lock.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: db.ByteArrayString;
        /**
        * **tokenomics.bridged_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.bridged_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.bridged_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.bridged_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.bridged_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'bridged_lock_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.bridged_lock_error**
     * - Table in database
     */
    export namespace bridged_lock_error {
      export type Table = 'tokenomics.bridged_lock_error';
      export interface Selectable {
        /**
        * **tokenomics.bridged_lock_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridged_lock_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridged_lock_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.bridged_lock_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridged_lock_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.bridged_lock_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.bridged_lock_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: db.NumericString;
        /**
        * **tokenomics.bridged_lock_error.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: db.NumericString;
        /**
        * **tokenomics.bridged_lock_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.bridged_lock_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.bridged_lock_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridged_lock_error.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: Buffer;
        /**
        * **tokenomics.bridged_lock_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.bridged_lock_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.bridged_lock_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridged_lock_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridged_lock_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridged_lock_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock_error.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString);
        /**
        * **tokenomics.bridged_lock_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.bridged_lock_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.bridged_lock_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridged_lock_error.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: db.ByteArrayString;
        /**
        * **tokenomics.bridged_lock_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.bridged_lock_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.bridged_lock_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_lock_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.bridged_lock_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_lock_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.bridged_lock_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_lock_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'bridged_lock_error_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.bridged_out**
     * - Table in database
     */
    export namespace bridged_out {
      export type Table = 'tokenomics.bridged_out';
      export interface Selectable {
        /**
        * **tokenomics.bridged_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridged_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridged_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.bridged_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridged_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.bridged_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.bridged_out.bridge_user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        bridge_user: Buffer;
        /**
        * **tokenomics.bridged_out.dst_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        dst_chain_id: db.NumericString;
        /**
        * **tokenomics.bridged_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.bridged_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.bridged_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridged_out.token_receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token_receiver: Buffer;
        /**
        * **tokenomics.bridged_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.bridged_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.bridged_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.bridged_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.bridged_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.bridged_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.bridged_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.bridged_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.bridged_out.bridge_user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        bridge_user: db.ByteArrayString;
        /**
        * **tokenomics.bridged_out.dst_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        dst_chain_id: (number | db.NumericString);
        /**
        * **tokenomics.bridged_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.bridged_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.bridged_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.bridged_out.token_receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token_receiver: db.ByteArrayString;
        /**
        * **tokenomics.bridged_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.bridged_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.bridged_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.bridge_user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        bridge_user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.dst_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        dst_chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.token_receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token_receiver?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.bridged_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.bridged_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.bridge_user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        bridge_user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.dst_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        dst_chain_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.token_receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token_receiver: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.bridged_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.bridged_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.bridge_user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        bridge_user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.dst_chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        dst_chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.token_receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token_receiver?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.bridged_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'bridged_out_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.chain_gateway_added**
     * - Table in database
     */
    export namespace chain_gateway_added {
      export type Table = 'tokenomics.chain_gateway_added';
      export interface Selectable {
        /**
        * **tokenomics.chain_gateway_added._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.chain_gateway_added._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.chain_gateway_added.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.chain_gateway_added.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.chain_gateway_added.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.chain_gateway_added.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: db.NumericString;
        /**
        * **tokenomics.chain_gateway_added.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: Buffer;
        /**
        * **tokenomics.chain_gateway_added.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway: Buffer;
        /**
        * **tokenomics.chain_gateway_added.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.chain_gateway_added.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.chain_gateway_added.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.chain_gateway_added.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.chain_gateway_added.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.chain_gateway_added._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.chain_gateway_added._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.chain_gateway_added.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.chain_gateway_added.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.chain_gateway_added.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.chain_gateway_added.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString);
        /**
        * **tokenomics.chain_gateway_added.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: db.ByteArrayString;
        /**
        * **tokenomics.chain_gateway_added.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway: db.ByteArrayString;
        /**
        * **tokenomics.chain_gateway_added.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.chain_gateway_added.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.chain_gateway_added.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.chain_gateway_added.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.chain_gateway_added.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.chain_gateway_added._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_added.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.chain_gateway_added._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_added.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.chain_gateway_added._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_added.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'chain_gateway_added_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.chain_gateway_removed**
     * - Table in database
     */
    export namespace chain_gateway_removed {
      export type Table = 'tokenomics.chain_gateway_removed';
      export interface Selectable {
        /**
        * **tokenomics.chain_gateway_removed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.chain_gateway_removed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.chain_gateway_removed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.chain_gateway_removed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.chain_gateway_removed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.chain_gateway_removed.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: db.NumericString;
        /**
        * **tokenomics.chain_gateway_removed.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: Buffer;
        /**
        * **tokenomics.chain_gateway_removed.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway: Buffer;
        /**
        * **tokenomics.chain_gateway_removed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.chain_gateway_removed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.chain_gateway_removed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.chain_gateway_removed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.chain_gateway_removed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.chain_gateway_removed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.chain_gateway_removed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.chain_gateway_removed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.chain_gateway_removed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.chain_gateway_removed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.chain_gateway_removed.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString);
        /**
        * **tokenomics.chain_gateway_removed.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: db.ByteArrayString;
        /**
        * **tokenomics.chain_gateway_removed.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway: db.ByteArrayString;
        /**
        * **tokenomics.chain_gateway_removed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.chain_gateway_removed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.chain_gateway_removed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.chain_gateway_removed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.chain_gateway_removed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.chain_gateway_removed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.chain_gateway_removed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.chain_gateway_removed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.chain_gateway_removed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.chain_gateway_removed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        gateway?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.chain_gateway_removed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'chain_gateway_removed_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.early_exit**
     * - Table in database
     */
    export namespace early_exit {
      export type Table = 'tokenomics.early_exit';
      export interface Selectable {
        /**
        * **tokenomics.early_exit._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.early_exit._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.early_exit.amount_received**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_received: db.NumericString;
        /**
        * **tokenomics.early_exit.amount_unlocked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_unlocked: db.NumericString;
        /**
        * **tokenomics.early_exit.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.early_exit.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.early_exit.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.early_exit.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.early_exit.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.early_exit.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.early_exit.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.early_exit.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.early_exit.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.early_exit._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.early_exit._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.early_exit.amount_received**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_received: (number | db.NumericString);
        /**
        * **tokenomics.early_exit.amount_unlocked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_unlocked: (number | db.NumericString);
        /**
        * **tokenomics.early_exit.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.early_exit.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.early_exit.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.early_exit.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.early_exit.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.early_exit.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.early_exit.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.early_exit.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.early_exit.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.early_exit._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.amount_received**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_received?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.amount_unlocked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_unlocked?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.early_exit.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.early_exit._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.early_exit._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.amount_received**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_received: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.amount_unlocked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_unlocked: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.early_exit.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.early_exit.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.early_exit.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.early_exit._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.amount_received**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_received?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.amount_unlocked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount_unlocked?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.early_exit.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'early_exit_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.eip712_domain_changed**
     * - Table in database
     */
    export namespace eip712_domain_changed {
      export type Table = 'tokenomics.eip712_domain_changed';
      export interface Selectable {
        /**
        * **tokenomics.eip712_domain_changed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.eip712_domain_changed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.eip712_domain_changed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.eip712_domain_changed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.eip712_domain_changed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.eip712_domain_changed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.eip712_domain_changed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.eip712_domain_changed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.eip712_domain_changed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.eip712_domain_changed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.eip712_domain_changed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.eip712_domain_changed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.eip712_domain_changed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.eip712_domain_changed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.eip712_domain_changed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.eip712_domain_changed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.eip712_domain_changed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.eip712_domain_changed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.eip712_domain_changed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.eip712_domain_changed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.eip712_domain_changed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eip712_domain_changed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.eip712_domain_changed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.eip712_domain_changed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.eip712_domain_changed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.eip712_domain_changed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'eip712_domain_changed_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.epoch_rewards_updated**
     * - Table in database
     */
    export namespace epoch_rewards_updated {
      export type Table = 'tokenomics.epoch_rewards_updated';
      export interface Selectable {
        /**
        * **tokenomics.epoch_rewards_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.epoch_rewards_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.epoch_rewards_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.epoch_rewards_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.epoch_rewards_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.epoch_rewards_updated.epoch**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: db.NumericString[];
        /**
        * **tokenomics.epoch_rewards_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.epoch_rewards_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.epoch_rewards_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.epoch_rewards_updated.rewards**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        rewards: db.NumericString[];
        /**
        * **tokenomics.epoch_rewards_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.epoch_rewards_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.epoch_rewards_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.epoch_rewards_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.epoch_rewards_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.epoch_rewards_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.epoch_rewards_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.epoch_rewards_updated.epoch**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: (number | db.NumericString)[];
        /**
        * **tokenomics.epoch_rewards_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.epoch_rewards_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.epoch_rewards_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.epoch_rewards_updated.rewards**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        rewards: (number | db.NumericString)[];
        /**
        * **tokenomics.epoch_rewards_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.epoch_rewards_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.epoch_rewards_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.epoch**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        epoch?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.rewards**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        rewards?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.epoch_rewards_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.epoch_rewards_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.epoch**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.rewards**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        rewards: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.epoch_rewards_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.epoch_rewards_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.epoch**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        epoch?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.rewards**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        rewards?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.epoch_rewards_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'epoch_rewards_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.eth_withdrawn**
     * - Table in database
     */
    export namespace eth_withdrawn {
      export type Table = 'tokenomics.eth_withdrawn';
      export interface Selectable {
        /**
        * **tokenomics.eth_withdrawn._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.eth_withdrawn._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.eth_withdrawn.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.eth_withdrawn.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.eth_withdrawn.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.eth_withdrawn.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.eth_withdrawn.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.eth_withdrawn.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.eth_withdrawn.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.eth_withdrawn.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: Buffer;
        /**
        * **tokenomics.eth_withdrawn.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.eth_withdrawn.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
        /**
        * **tokenomics.eth_withdrawn.withdraw_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        withdraw_id: db.NumericString;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.eth_withdrawn._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.eth_withdrawn._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.eth_withdrawn.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.eth_withdrawn.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.eth_withdrawn.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.eth_withdrawn.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.eth_withdrawn.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.eth_withdrawn.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.eth_withdrawn.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.eth_withdrawn.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: db.ByteArrayString;
        /**
        * **tokenomics.eth_withdrawn.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.eth_withdrawn.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
        /**
        * **tokenomics.eth_withdrawn.withdraw_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        withdraw_id: (number | db.NumericString);
      }
      export interface Whereable {
        /**
        * **tokenomics.eth_withdrawn._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.eth_withdrawn.withdraw_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        withdraw_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.eth_withdrawn._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
        /**
        * **tokenomics.eth_withdrawn.withdraw_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        withdraw_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.eth_withdrawn._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
        /**
        * **tokenomics.eth_withdrawn.withdraw_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        withdraw_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'eth_withdrawn_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.fee_info**
     * - Table in database
     */
    export namespace fee_info {
      export type Table = 'tokenomics.fee_info';
      export interface Selectable {
        /**
        * **tokenomics.fee_info._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.fee_info._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.fee_info.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.fee_info.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string;
        /**
        * **tokenomics.fee_info.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.fee_info.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: db.NumericString;
        /**
        * **tokenomics.fee_info.fee**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee: db.NumericString;
        /**
        * **tokenomics.fee_info.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.fee_info.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.fee_info.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.fee_info.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.fee_info.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.fee_info._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.fee_info._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.fee_info.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.fee_info.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string;
        /**
        * **tokenomics.fee_info.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.fee_info.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString);
        /**
        * **tokenomics.fee_info.fee**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee: (number | db.NumericString);
        /**
        * **tokenomics.fee_info.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.fee_info.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.fee_info.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.fee_info.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.fee_info.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.fee_info._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.fee**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.fee_info.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.fee_info._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.fee_info._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.fee_info.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.fee_info.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.fee_info.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.fee_info.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.fee_info.fee**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.fee_info.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.fee_info.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.fee_info.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.fee_info.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.fee_info.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.fee_info._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.fee**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.fee_info.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'fee_info_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.gateway_updated**
     * - Table in database
     */
    export namespace gateway_updated {
      export type Table = 'tokenomics.gateway_updated';
      export interface Selectable {
        /**
        * **tokenomics.gateway_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.gateway_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.gateway_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.gateway_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.gateway_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.gateway_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.gateway_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.gateway_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.gateway_updated.new_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_gateway: Buffer;
        /**
        * **tokenomics.gateway_updated.old_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_gateway: Buffer;
        /**
        * **tokenomics.gateway_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.gateway_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.gateway_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.gateway_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.gateway_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.gateway_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.gateway_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.gateway_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.gateway_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.gateway_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.gateway_updated.new_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_gateway: db.ByteArrayString;
        /**
        * **tokenomics.gateway_updated.old_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_gateway: db.ByteArrayString;
        /**
        * **tokenomics.gateway_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.gateway_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.gateway_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.new_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_gateway?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.old_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_gateway?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.gateway_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.gateway_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.new_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_gateway: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.old_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_gateway: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.gateway_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.gateway_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.new_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_gateway?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.old_gateway**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_gateway?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.gateway_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'gateway_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.hub_gauge_updated**
     * - Table in database
     */
    export namespace hub_gauge_updated {
      export type Table = 'tokenomics.hub_gauge_updated';
      export interface Selectable {
        /**
        * **tokenomics.hub_gauge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.hub_gauge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.hub_gauge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.hub_gauge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.hub_gauge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.hub_gauge_updated.hub_gauge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        hub_gauge: Buffer;
        /**
        * **tokenomics.hub_gauge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.hub_gauge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.hub_gauge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.hub_gauge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.hub_gauge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.hub_gauge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.hub_gauge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.hub_gauge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.hub_gauge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.hub_gauge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.hub_gauge_updated.hub_gauge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        hub_gauge: db.ByteArrayString;
        /**
        * **tokenomics.hub_gauge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.hub_gauge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.hub_gauge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.hub_gauge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.hub_gauge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.hub_gauge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.hub_gauge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        hub_gauge?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.hub_gauge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.hub_gauge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.hub_gauge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        hub_gauge: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.hub_gauge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.hub_gauge_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.hub_gauge**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        hub_gauge?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.hub_gauge_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'hub_gauge_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.lock_position**
     * - Table in database
     */
    export namespace lock_position {
      export type Table = 'tokenomics.lock_position';
      export interface Selectable {
        /**
        * **tokenomics.lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.lock_position.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.lock_position.bias**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        bias: db.NumericString;
        /**
        * **tokenomics.lock_position.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string;
        /**
        * **tokenomics.lock_position.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate: Buffer;
        /**
        * **tokenomics.lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: db.NumericString;
        /**
        * **tokenomics.lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.lock_position.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner: Buffer;
        /**
        * **tokenomics.lock_position.slope**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        slope: db.NumericString;
        /**
        * **tokenomics.lock_position.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp: db.NumericString;
        /**
        * **tokenomics.lock_position.vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        vb_balance: db.NumericString;
        /**
        * **tokenomics.lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.lock_position.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.lock_position.bias**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        bias: (number | db.NumericString);
        /**
        * **tokenomics.lock_position.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string;
        /**
        * **tokenomics.lock_position.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate: db.ByteArrayString;
        /**
        * **tokenomics.lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString);
        /**
        * **tokenomics.lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.lock_position.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner: db.ByteArrayString;
        /**
        * **tokenomics.lock_position.slope**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        slope: (number | db.NumericString);
        /**
        * **tokenomics.lock_position.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp: (number | db.NumericString);
        /**
        * **tokenomics.lock_position.vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        vb_balance: (number | db.NumericString);
        /**
        * **tokenomics.lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.bias**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        bias?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.slope**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        slope?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        vb_balance?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.bias**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        bias: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.slope**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        slope: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        vb_balance: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.bias**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        bias?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.slope**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        slope?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        vb_balance?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'lock_position_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.mailbox_updated**
     * - Table in database
     */
    export namespace mailbox_updated {
      export type Table = 'tokenomics.mailbox_updated';
      export interface Selectable {
        /**
        * **tokenomics.mailbox_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.mailbox_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.mailbox_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.mailbox_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.mailbox_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.mailbox_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: Buffer;
        /**
        * **tokenomics.mailbox_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.mailbox_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.mailbox_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.mailbox_updated.new_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_mailbox: Buffer;
        /**
        * **tokenomics.mailbox_updated.old_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_mailbox: Buffer;
        /**
        * **tokenomics.mailbox_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.mailbox_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.mailbox_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.mailbox_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.mailbox_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.mailbox_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.mailbox_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.mailbox_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: db.ByteArrayString;
        /**
        * **tokenomics.mailbox_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.mailbox_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.mailbox_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.mailbox_updated.new_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_mailbox: db.ByteArrayString;
        /**
        * **tokenomics.mailbox_updated.old_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_mailbox: db.ByteArrayString;
        /**
        * **tokenomics.mailbox_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.mailbox_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.mailbox_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.new_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_mailbox?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.old_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_mailbox?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mailbox_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.mailbox_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.new_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_mailbox: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.old_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_mailbox: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mailbox_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.mailbox_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.new_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_mailbox?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.old_mailbox**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_mailbox?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mailbox_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'mailbox_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.message_gas_limit_updated**
     * - Table in database
     */
    export namespace message_gas_limit_updated {
      export type Table = 'tokenomics.message_gas_limit_updated';
      export interface Selectable {
        /**
        * **tokenomics.message_gas_limit_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.message_gas_limit_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.message_gas_limit_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.message_gas_limit_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.message_gas_limit_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.message_gas_limit_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain: db.NumericString[];
        /**
        * **tokenomics.message_gas_limit_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.message_gas_limit_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.message_gas_limit_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.message_gas_limit_updated.new_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_gas_limit: db.NumericString[];
        /**
        * **tokenomics.message_gas_limit_updated.old_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_gas_limit: db.NumericString[];
        /**
        * **tokenomics.message_gas_limit_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.message_gas_limit_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.message_gas_limit_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.message_gas_limit_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.message_gas_limit_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.message_gas_limit_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.message_gas_limit_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.message_gas_limit_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString)[];
        /**
        * **tokenomics.message_gas_limit_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.message_gas_limit_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.message_gas_limit_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.message_gas_limit_updated.new_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_gas_limit: (number | db.NumericString)[];
        /**
        * **tokenomics.message_gas_limit_updated.old_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_gas_limit: (number | db.NumericString)[];
        /**
        * **tokenomics.message_gas_limit_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.message_gas_limit_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.message_gas_limit_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.new_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_gas_limit?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.old_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_gas_limit?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.message_gas_limit_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.message_gas_limit_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.new_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_gas_limit: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.old_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_gas_limit: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.message_gas_limit_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.message_gas_limit_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.new_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_gas_limit?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.old_gas_limit**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_gas_limit?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.message_gas_limit_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'message_gas_limit_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.mint_message_sent**
     * - Table in database
     */
    export namespace mint_message_sent {
      export type Table = 'tokenomics.mint_message_sent';
      export interface Selectable {
        /**
        * **tokenomics.mint_message_sent._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.mint_message_sent._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.mint_message_sent.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.mint_message_sent.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.mint_message_sent.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.mint_message_sent.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.mint_message_sent.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: db.NumericString;
        /**
        * **tokenomics.mint_message_sent.fee_spent**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee_spent: db.NumericString;
        /**
        * **tokenomics.mint_message_sent.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.mint_message_sent.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.mint_message_sent.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.mint_message_sent.message_id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        message_id: Buffer;
        /**
        * **tokenomics.mint_message_sent.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: Buffer;
        /**
        * **tokenomics.mint_message_sent.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.mint_message_sent.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.mint_message_sent._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.mint_message_sent._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.mint_message_sent.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.mint_message_sent.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.mint_message_sent.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.mint_message_sent.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.mint_message_sent.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString);
        /**
        * **tokenomics.mint_message_sent.fee_spent**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee_spent: (number | db.NumericString);
        /**
        * **tokenomics.mint_message_sent.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.mint_message_sent.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.mint_message_sent.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.mint_message_sent.message_id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        message_id: db.ByteArrayString;
        /**
        * **tokenomics.mint_message_sent.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: db.ByteArrayString;
        /**
        * **tokenomics.mint_message_sent.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.mint_message_sent.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.mint_message_sent._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.fee_spent**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee_spent?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.message_id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        message_id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.mint_message_sent.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.mint_message_sent._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.fee_spent**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee_spent: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.message_id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        message_id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.mint_message_sent.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.mint_message_sent._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.fee_spent**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        fee_spent?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.message_id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        message_id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.mint_message_sent.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'mint_message_sent_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.new_lock_position**
     * - Table in database
     */
    export namespace new_lock_position {
      export type Table = 'tokenomics.new_lock_position';
      export interface Selectable {
        /**
        * **tokenomics.new_lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.new_lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.new_lock_position.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.new_lock_position.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.new_lock_position.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.new_lock_position.caller**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        caller: Buffer;
        /**
        * **tokenomics.new_lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: db.NumericString;
        /**
        * **tokenomics.new_lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.new_lock_position.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.new_lock_position.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.new_lock_position.new_total_amount_locked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_total_amount_locked: db.NumericString;
        /**
        * **tokenomics.new_lock_position.new_vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_vb_balance: db.NumericString;
        /**
        * **tokenomics.new_lock_position.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.new_lock_position.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.new_lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.new_lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.new_lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.new_lock_position.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.new_lock_position.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.new_lock_position.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.new_lock_position.caller**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        caller: db.ByteArrayString;
        /**
        * **tokenomics.new_lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString);
        /**
        * **tokenomics.new_lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.new_lock_position.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.new_lock_position.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.new_lock_position.new_total_amount_locked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_total_amount_locked: (number | db.NumericString);
        /**
        * **tokenomics.new_lock_position.new_vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_vb_balance: (number | db.NumericString);
        /**
        * **tokenomics.new_lock_position.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.new_lock_position.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.new_lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.new_lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.caller**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        caller?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.new_total_amount_locked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_total_amount_locked?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.new_vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_vb_balance?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.new_lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.new_lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.caller**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        caller: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.new_total_amount_locked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_total_amount_locked: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.new_vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_vb_balance: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.new_lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.new_lock_position._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.caller**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        caller?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.new_total_amount_locked**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_total_amount_locked?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.new_vb_balance**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        new_vb_balance?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.new_lock_position.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'new_lock_position_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.ownership_transferred**
     * - Table in database
     */
    export namespace ownership_transferred {
      export type Table = 'tokenomics.ownership_transferred';
      export interface Selectable {
        /**
        * **tokenomics.ownership_transferred._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.ownership_transferred._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.ownership_transferred.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.ownership_transferred.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.ownership_transferred.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.ownership_transferred.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: Buffer;
        /**
        * **tokenomics.ownership_transferred.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.ownership_transferred.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.ownership_transferred.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.ownership_transferred.new_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_owner: Buffer;
        /**
        * **tokenomics.ownership_transferred.previous_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        previous_owner: Buffer;
        /**
        * **tokenomics.ownership_transferred.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.ownership_transferred.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.ownership_transferred._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.ownership_transferred._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.ownership_transferred.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.ownership_transferred.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.ownership_transferred.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.ownership_transferred.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: db.ByteArrayString;
        /**
        * **tokenomics.ownership_transferred.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.ownership_transferred.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.ownership_transferred.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.ownership_transferred.new_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_owner: db.ByteArrayString;
        /**
        * **tokenomics.ownership_transferred.previous_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        previous_owner: db.ByteArrayString;
        /**
        * **tokenomics.ownership_transferred.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.ownership_transferred.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.ownership_transferred._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.new_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_owner?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.previous_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        previous_owner?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.ownership_transferred.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.ownership_transferred._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.new_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_owner: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.previous_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        previous_owner: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.ownership_transferred.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.ownership_transferred._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.new_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_owner?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.previous_owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        previous_owner?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.ownership_transferred.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'ownership_transferred_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.process_error**
     * - Table in database
     */
    export namespace process_error {
      export type Table = 'tokenomics.process_error';
      export interface Selectable {
        /**
        * **tokenomics.process_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.process_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.process_error.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active: boolean;
        /**
        * **tokenomics.process_error.additional_data**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        additional_data: db.NumericString;
        /**
        * **tokenomics.process_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.process_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.process_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.process_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.process_error.error_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        error_id: number;
        /**
        * **tokenomics.process_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.process_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.process_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.process_error.nonce**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        nonce: db.NumericString;
        /**
        * **tokenomics.process_error.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: Buffer;
        /**
        * **tokenomics.process_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.process_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.process_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.process_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.process_error.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active: boolean;
        /**
        * **tokenomics.process_error.additional_data**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        additional_data: (number | db.NumericString);
        /**
        * **tokenomics.process_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.process_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.process_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.process_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.process_error.error_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        error_id: number;
        /**
        * **tokenomics.process_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.process_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.process_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.process_error.nonce**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        nonce: (number | db.NumericString);
        /**
        * **tokenomics.process_error.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: db.ByteArrayString;
        /**
        * **tokenomics.process_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.process_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.process_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.additional_data**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        additional_data?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.error_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        error_id?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.nonce**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        nonce?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.process_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.process_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.process_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.process_error.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active: boolean | db.Parameter<boolean> | db.SQLFragment;
        /**
        * **tokenomics.process_error.additional_data**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        additional_data: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.process_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.process_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.process_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.process_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.process_error.error_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        error_id: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.process_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.process_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.process_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.process_error.nonce**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        nonce: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.process_error.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.process_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.process_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.process_error._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.process_error._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.active**
        * - `bool` in database
        * - `NOT NULL`, no default
        */
        active?: boolean | db.Parameter<boolean> | db.SQLFragment | db.SQLFragment<any, boolean | db.Parameter<boolean> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.additional_data**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        additional_data?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.error_id**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        error_id?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.process_error.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.process_error.nonce**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        nonce?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.sender**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        sender?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.process_error.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'process_error_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.retry_bridge_out**
     * - Table in database
     */
    export namespace retry_bridge_out {
      export type Table = 'tokenomics.retry_bridge_out';
      export interface Selectable {
        /**
        * **tokenomics.retry_bridge_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_bridge_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_bridge_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.retry_bridge_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_bridge_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.retry_bridge_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.retry_bridge_out.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: db.NumericString;
        /**
        * **tokenomics.retry_bridge_out.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: db.NumericString;
        /**
        * **tokenomics.retry_bridge_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.retry_bridge_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.retry_bridge_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_bridge_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.retry_bridge_out.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.retry_bridge_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.retry_bridge_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_bridge_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_bridge_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.retry_bridge_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_bridge_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.retry_bridge_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.retry_bridge_out.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString);
        /**
        * **tokenomics.retry_bridge_out.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString);
        /**
        * **tokenomics.retry_bridge_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.retry_bridge_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.retry_bridge_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_bridge_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.retry_bridge_out.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.retry_bridge_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.retry_bridge_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_bridge_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.retry_bridge_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_bridge_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.retry_bridge_out._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_bridge_out.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'retry_bridge_out_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.retry_lock**
     * - Table in database
     */
    export namespace retry_lock {
      export type Table = 'tokenomics.retry_lock';
      export interface Selectable {
        /**
        * **tokenomics.retry_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.retry_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.retry_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.retry_lock.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: db.NumericString;
        /**
        * **tokenomics.retry_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: db.NumericString;
        /**
        * **tokenomics.retry_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.retry_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.retry_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_lock.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: Buffer;
        /**
        * **tokenomics.retry_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.retry_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.retry_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.retry_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.retry_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.retry_lock.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString);
        /**
        * **tokenomics.retry_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString);
        /**
        * **tokenomics.retry_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.retry_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.retry_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_lock.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: db.ByteArrayString;
        /**
        * **tokenomics.retry_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.retry_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.retry_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.retry_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.retry_lock._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.expiry**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        expiry?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_lock.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'retry_lock_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.retry_message**
     * - Table in database
     */
    export namespace retry_message {
      export type Table = 'tokenomics.retry_message';
      export interface Selectable {
        /**
        * **tokenomics.retry_message._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_message._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_message.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.retry_message.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_message.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.retry_message.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.retry_message.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: db.NumericString;
        /**
        * **tokenomics.retry_message.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: db.NumericString;
        /**
        * **tokenomics.retry_message.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.retry_message.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.retry_message.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_message.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.retry_message.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.retry_message.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.retry_message._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_message._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_message.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.retry_message.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_message.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.retry_message.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.retry_message.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString);
        /**
        * **tokenomics.retry_message.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString);
        /**
        * **tokenomics.retry_message.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.retry_message.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.retry_message.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_message.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.retry_message.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.retry_message.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.retry_message._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_message.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.retry_message._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_message._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_message.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_message.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_message.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.retry_message._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_message.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'retry_message_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.retry_mint**
     * - Table in database
     */
    export namespace retry_mint {
      export type Table = 'tokenomics.retry_mint';
      export interface Selectable {
        /**
        * **tokenomics.retry_mint._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_mint._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_mint.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.retry_mint.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_mint.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.retry_mint.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.retry_mint.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: db.NumericString;
        /**
        * **tokenomics.retry_mint.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: db.NumericString;
        /**
        * **tokenomics.retry_mint.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.retry_mint.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.retry_mint.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_mint.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.retry_mint.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.retry_mint.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.retry_mint._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_mint._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_mint.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.retry_mint.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_mint.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.retry_mint.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.retry_mint.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString);
        /**
        * **tokenomics.retry_mint.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString);
        /**
        * **tokenomics.retry_mint.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.retry_mint.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.retry_mint.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_mint.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.retry_mint.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.retry_mint.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.retry_mint._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_mint.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.retry_mint._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_mint.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.retry_mint._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_mint.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'retry_mint_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.retry_transfer**
     * - Table in database
     */
    export namespace retry_transfer {
      export type Table = 'tokenomics.retry_transfer';
      export interface Selectable {
        /**
        * **tokenomics.retry_transfer._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_transfer._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_transfer.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.retry_transfer.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_transfer.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.retry_transfer.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.retry_transfer.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: db.NumericString;
        /**
        * **tokenomics.retry_transfer.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: db.NumericString;
        /**
        * **tokenomics.retry_transfer.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.retry_transfer.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.retry_transfer.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_transfer.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.retry_transfer.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.retry_transfer.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.retry_transfer._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.retry_transfer._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.retry_transfer.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.retry_transfer.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.retry_transfer.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.retry_transfer.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.retry_transfer.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString);
        /**
        * **tokenomics.retry_transfer.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString);
        /**
        * **tokenomics.retry_transfer.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.retry_transfer.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.retry_transfer.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.retry_transfer.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.retry_transfer.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.retry_transfer.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.retry_transfer._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.retry_transfer.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.retry_transfer._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.retry_transfer.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.retry_transfer._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.chain_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        chain_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.error_id**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        error_id?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.retry_transfer.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'retry_transfer_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.return_fee_updated**
     * - Table in database
     */
    export namespace return_fee_updated {
      export type Table = 'tokenomics.return_fee_updated';
      export interface Selectable {
        /**
        * **tokenomics.return_fee_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.return_fee_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.return_fee_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.return_fee_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.return_fee_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.return_fee_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain: db.NumericString[];
        /**
        * **tokenomics.return_fee_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.return_fee_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.return_fee_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.return_fee_updated.new_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_fee: db.NumericString[];
        /**
        * **tokenomics.return_fee_updated.old_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_fee: db.NumericString[];
        /**
        * **tokenomics.return_fee_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.return_fee_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.return_fee_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.return_fee_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.return_fee_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.return_fee_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.return_fee_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.return_fee_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString)[];
        /**
        * **tokenomics.return_fee_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.return_fee_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.return_fee_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.return_fee_updated.new_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_fee: (number | db.NumericString)[];
        /**
        * **tokenomics.return_fee_updated.old_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_fee: (number | db.NumericString)[];
        /**
        * **tokenomics.return_fee_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.return_fee_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.return_fee_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.new_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_fee?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.old_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_fee?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.return_fee_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.return_fee_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.new_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_fee: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.old_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_fee: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.return_fee_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.return_fee_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.domain**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.new_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        new_fee?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.old_fee**
        * - `_numeric` in database
        * - `NOT NULL`, no default
        */
        old_fee?: (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString)[] | db.Parameter<(number | db.NumericString)[]> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.return_fee_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'return_fee_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.reward_claimed**
     * - Table in database
     */
    export namespace reward_claimed {
      export type Table = 'tokenomics.reward_claimed';
      export interface Selectable {
        /**
        * **tokenomics.reward_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.reward_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.reward_claimed.account**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        account: Buffer;
        /**
        * **tokenomics.reward_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.reward_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.reward_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.reward_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.reward_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.reward_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.reward_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.reward_claimed.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token: Buffer;
        /**
        * **tokenomics.reward_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.reward_claimed.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count: db.NumericString;
        /**
        * **tokenomics.reward_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.reward_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.reward_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.reward_claimed.account**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        account: db.ByteArrayString;
        /**
        * **tokenomics.reward_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.reward_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.reward_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.reward_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.reward_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.reward_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.reward_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.reward_claimed.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token: db.ByteArrayString;
        /**
        * **tokenomics.reward_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.reward_claimed.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count: (number | db.NumericString);
        /**
        * **tokenomics.reward_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.reward_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.account**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        account?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.reward_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.account**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        account: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.reward_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.reward_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.account**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        account?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'reward_claimed_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.reward_metadata_updated**
     * - Table in database
     */
    export namespace reward_metadata_updated {
      export type Table = 'tokenomics.reward_metadata_updated';
      export interface Selectable {
        /**
        * **tokenomics.reward_metadata_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.reward_metadata_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.reward_metadata_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.reward_metadata_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.reward_metadata_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.reward_metadata_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.reward_metadata_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.reward_metadata_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.reward_metadata_updated.merkle_root**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        merkle_root: Buffer;
        /**
        * **tokenomics.reward_metadata_updated.proof**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        proof: Buffer;
        /**
        * **tokenomics.reward_metadata_updated.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token: Buffer;
        /**
        * **tokenomics.reward_metadata_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.reward_metadata_updated.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count: db.NumericString;
        /**
        * **tokenomics.reward_metadata_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.reward_metadata_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.reward_metadata_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.reward_metadata_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.reward_metadata_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.reward_metadata_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.reward_metadata_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.reward_metadata_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.reward_metadata_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.reward_metadata_updated.merkle_root**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        merkle_root: db.ByteArrayString;
        /**
        * **tokenomics.reward_metadata_updated.proof**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        proof: db.ByteArrayString;
        /**
        * **tokenomics.reward_metadata_updated.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token: db.ByteArrayString;
        /**
        * **tokenomics.reward_metadata_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.reward_metadata_updated.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count: (number | db.NumericString);
        /**
        * **tokenomics.reward_metadata_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.reward_metadata_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.merkle_root**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        merkle_root?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.proof**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        proof?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.reward_metadata_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.reward_metadata_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.merkle_root**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        merkle_root: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.proof**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        proof: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.reward_metadata_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.reward_metadata_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.merkle_root**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        merkle_root?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.proof**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        proof?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.token**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        token?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.update_count**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        update_count?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.reward_metadata_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'reward_metadata_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.rewards_claimed**
     * - Table in database
     */
    export namespace rewards_claimed {
      export type Table = 'tokenomics.rewards_claimed';
      export interface Selectable {
        /**
        * **tokenomics.rewards_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.rewards_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.rewards_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.rewards_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.rewards_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.rewards_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.rewards_claimed.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: db.NumericString;
        /**
        * **tokenomics.rewards_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.rewards_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.rewards_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.rewards_claimed.recipient**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        recipient: Buffer;
        /**
        * **tokenomics.rewards_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.rewards_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.rewards_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.rewards_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.rewards_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.rewards_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.rewards_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.rewards_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.rewards_claimed.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: (number | db.NumericString);
        /**
        * **tokenomics.rewards_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.rewards_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.rewards_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.rewards_claimed.recipient**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        recipient: db.ByteArrayString;
        /**
        * **tokenomics.rewards_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.rewards_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.rewards_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.recipient**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        recipient?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.rewards_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.rewards_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.recipient**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        recipient: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.rewards_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.rewards_claimed._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.recipient**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        recipient?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.rewards_claimed.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'rewards_claimed_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.security_module_updated**
     * - Table in database
     */
    export namespace security_module_updated {
      export type Table = 'tokenomics.security_module_updated';
      export interface Selectable {
        /**
        * **tokenomics.security_module_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.security_module_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.security_module_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.security_module_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.security_module_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.security_module_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: Buffer;
        /**
        * **tokenomics.security_module_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.security_module_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.security_module_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.security_module_updated.new_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_security_module: Buffer;
        /**
        * **tokenomics.security_module_updated.old_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_security_module: Buffer;
        /**
        * **tokenomics.security_module_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.security_module_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.security_module_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.security_module_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.security_module_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.security_module_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.security_module_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.security_module_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: db.ByteArrayString;
        /**
        * **tokenomics.security_module_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.security_module_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.security_module_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.security_module_updated.new_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_security_module: db.ByteArrayString;
        /**
        * **tokenomics.security_module_updated.old_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_security_module: db.ByteArrayString;
        /**
        * **tokenomics.security_module_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.security_module_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.security_module_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.new_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_security_module?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.old_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_security_module?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.security_module_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.security_module_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.new_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_security_module: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.old_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_security_module: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.security_module_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.security_module_updated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.contract**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        contract?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.new_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        new_security_module?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.old_security_module**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        old_security_module?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.security_module_updated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'security_module_updated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.user**
     * - Table in database
     */
    export namespace user {
      export type Table = 'tokenomics.user';
      export interface Selectable {
        /**
        * **tokenomics.user._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.user._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.user.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string;
        /**
        * **tokenomics.user.claimed**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        claimed: db.NumericString;
        /**
        * **tokenomics.user.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.user.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.user._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.user._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.user.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string;
        /**
        * **tokenomics.user.claimed**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        claimed: (number | db.NumericString);
        /**
        * **tokenomics.user.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.user.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.user._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.user._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.user.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.user.claimed**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        claimed?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.user.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.user.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.user._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.user._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.user.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.user.claimed**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        claimed: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.user.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.user.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.user._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.user._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.user.block_range**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        block_range?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.user.claimed**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        claimed?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.user.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.user.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'user_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.vote_cast**
     * - Table in database
     */
    export namespace vote_cast {
      export type Table = 'tokenomics.vote_cast';
      export interface Selectable {
        /**
        * **tokenomics.vote_cast._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.vote_cast._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.vote_cast.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.vote_cast.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.vote_cast.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.vote_cast.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: db.NumericString;
        /**
        * **tokenomics.vote_cast.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: db.NumericString;
        /**
        * **tokenomics.vote_cast.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.vote_cast.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.vote_cast.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.vote_cast.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner: Buffer;
        /**
        * **tokenomics.vote_cast.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.vote_cast.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
        /**
        * **tokenomics.vote_cast.votes**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        votes: db.NumericString;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.vote_cast._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.vote_cast._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.vote_cast.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.vote_cast.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.vote_cast.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.vote_cast.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString);
        /**
        * **tokenomics.vote_cast.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: (number | db.NumericString);
        /**
        * **tokenomics.vote_cast.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.vote_cast.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.vote_cast.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.vote_cast.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner: db.ByteArrayString;
        /**
        * **tokenomics.vote_cast.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.vote_cast.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
        /**
        * **tokenomics.vote_cast.votes**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        votes: (number | db.NumericString);
      }
      export interface Whereable {
        /**
        * **tokenomics.vote_cast._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_cast.votes**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        votes?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.vote_cast._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
        /**
        * **tokenomics.vote_cast.votes**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        votes: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.vote_cast._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.domain**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        domain?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.epoch**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        epoch?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.owner**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        owner?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_cast.votes**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        votes?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'vote_cast_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.vote_delegated**
     * - Table in database
     */
    export namespace vote_delegated {
      export type Table = 'tokenomics.vote_delegated';
      export interface Selectable {
        /**
        * **tokenomics.vote_delegated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.vote_delegated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.vote_delegated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.vote_delegated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.vote_delegated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.vote_delegated.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate: Buffer;
        /**
        * **tokenomics.vote_delegated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.vote_delegated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.vote_delegated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.vote_delegated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.vote_delegated.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.vote_delegated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.vote_delegated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.vote_delegated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.vote_delegated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.vote_delegated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.vote_delegated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.vote_delegated.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate: db.ByteArrayString;
        /**
        * **tokenomics.vote_delegated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.vote_delegated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.vote_delegated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.vote_delegated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.vote_delegated.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.vote_delegated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.vote_delegated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.vote_delegated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.vote_delegated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.vote_delegated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.vote_delegated._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.delegate**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        delegate?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.vote_delegated.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'vote_delegated_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.withdraw**
     * - Table in database
     */
    export namespace withdraw {
      export type Table = 'tokenomics.withdraw';
      export interface Selectable {
        /**
        * **tokenomics.withdraw._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.withdraw._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.withdraw.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.withdraw.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.withdraw.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.withdraw.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.withdraw.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.withdraw.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.withdraw.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.withdraw.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.withdraw.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: Buffer;
        /**
        * **tokenomics.withdraw.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.withdraw._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.withdraw._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.withdraw.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.withdraw.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.withdraw.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.withdraw.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.withdraw.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.withdraw.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.withdraw.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.withdraw.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.withdraw.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: db.ByteArrayString;
        /**
        * **tokenomics.withdraw.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.withdraw._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.withdraw._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.withdraw._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.withdraw.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.withdraw.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.withdraw.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.withdraw.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.withdraw._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.user**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        user?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'withdraw_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /**
     * **tokenomics.withdraw_eth**
     * - Table in database
     */
    export namespace withdraw_eth {
      export type Table = 'tokenomics.withdraw_eth';
      export interface Selectable {
        /**
        * **tokenomics.withdraw_eth._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.withdraw_eth._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.withdraw_eth.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: db.NumericString;
        /**
        * **tokenomics.withdraw_eth.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.withdraw_eth.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: db.NumericString;
        /**
        * **tokenomics.withdraw_eth.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: db.NumericString;
        /**
        * **tokenomics.withdraw_eth.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: Buffer;
        /**
        * **tokenomics.withdraw_eth.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: Date | null;
        /**
        * **tokenomics.withdraw_eth.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.withdraw_eth.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: Buffer;
        /**
        * **tokenomics.withdraw_eth.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: Buffer;
        /**
        * **tokenomics.withdraw_eth.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: db.Int8String;
      }
      export interface JSONSelectable {
        /**
        * **tokenomics.withdraw_eth._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string;
        /**
        * **tokenomics.withdraw_eth._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string;
        /**
        * **tokenomics.withdraw_eth.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString);
        /**
        * **tokenomics.withdraw_eth.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number;
        /**
        * **tokenomics.withdraw_eth.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString);
        /**
        * **tokenomics.withdraw_eth.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString);
        /**
        * **tokenomics.withdraw_eth.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: db.ByteArrayString;
        /**
        * **tokenomics.withdraw_eth.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp: db.TimestampString | null;
        /**
        * **tokenomics.withdraw_eth.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency: string | null;
        /**
        * **tokenomics.withdraw_eth.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: db.ByteArrayString;
        /**
        * **tokenomics.withdraw_eth.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: db.ByteArrayString;
        /**
        * **tokenomics.withdraw_eth.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String);
      }
      export interface Whereable {
        /**
        * **tokenomics.withdraw_eth._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.ParentColumn>;
        /**
        * **tokenomics.withdraw_eth.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.ParentColumn>;
      }
      export interface Insertable {
        /**
        * **tokenomics.withdraw_eth._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid: string | db.Parameter<string> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block: number | db.Parameter<number> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment;
        /**
        * **tokenomics.withdraw_eth.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment;
      }
      export interface Updatable {
        /**
        * **tokenomics.withdraw_eth._gs_chain**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_chain?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth._gs_gid**
        * - `text` in database
        * - `NOT NULL`, no default
        */
        _gs_gid?: string | db.Parameter<string> | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.amount**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        amount?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.block**
        * - `int4` in database
        * - `NOT NULL`, no default
        */
        block?: number | db.Parameter<number> | db.SQLFragment | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.block_number**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_number?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.block_timestamp**
        * - `numeric` in database
        * - `NOT NULL`, no default
        */
        block_timestamp?: (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment | db.SQLFragment<any, (number | db.NumericString) | db.Parameter<(number | db.NumericString)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.id**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        id?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.insert_timestamp**
        * - `timestamp` in database
        * - Nullable, no default
        */
        insert_timestamp?: (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, (db.TimestampString | Date) | db.Parameter<(db.TimestampString | Date)> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.latency**
        * - `interval` in database
        * - Nullable, no default
        */
        latency?: string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment | db.SQLFragment<any, string | db.Parameter<string> | null | db.DefaultType | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.receiver**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        receiver?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.transaction_hash**
        * - `bytea` in database
        * - `NOT NULL`, no default
        */
        transaction_hash?: (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment | db.SQLFragment<any, (db.ByteArrayString | Buffer) | db.Parameter<(db.ByteArrayString | Buffer)> | db.SQLFragment>;
        /**
        * **tokenomics.withdraw_eth.vid**
        * - `int8` in database
        * - `NOT NULL`, no default
        */
        vid?: (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment | db.SQLFragment<any, (number | db.Int8String) | db.Parameter<(number | db.Int8String)> | db.SQLFragment>;
      }
      export type UniqueIndex = 'withdraw_eth_pkey';
      export type Column = keyof Selectable;
      export type OnlyCols<T extends readonly Column[]> = Pick<Selectable, T[number]>;
      export type SQLExpression = Table | db.ColumnNames<Updatable | (keyof Updatable)[]> | db.ColumnValues<Updatable> | Whereable | Column | db.ParentColumn | db.GenericSQLExpression;
      export type SQL = SQLExpression | SQLExpression[];
    }
  
    /* --- aggregate types --- */
  
    export type Table = bridge_in_error.Table | bridge_updated.Table | bridged_in.Table | bridged_lock.Table | bridged_lock_error.Table | bridged_out.Table | chain_gateway_added.Table | chain_gateway_removed.Table | early_exit.Table | eip712_domain_changed.Table | epoch_rewards_updated.Table | eth_withdrawn.Table | fee_info.Table | gateway_updated.Table | hub_gauge_updated.Table | lock_position.Table | mailbox_updated.Table | message_gas_limit_updated.Table | mint_message_sent.Table | new_lock_position.Table | ownership_transferred.Table | process_error.Table | retry_bridge_out.Table | retry_lock.Table | retry_message.Table | retry_mint.Table | retry_transfer.Table | return_fee_updated.Table | reward_claimed.Table | reward_metadata_updated.Table | rewards_claimed.Table | security_module_updated.Table | user.Table | vote_cast.Table | vote_delegated.Table | withdraw.Table | withdraw_eth.Table;
    export type Selectable = bridge_in_error.Selectable | bridge_updated.Selectable | bridged_in.Selectable | bridged_lock.Selectable | bridged_lock_error.Selectable | bridged_out.Selectable | chain_gateway_added.Selectable | chain_gateway_removed.Selectable | early_exit.Selectable | eip712_domain_changed.Selectable | epoch_rewards_updated.Selectable | eth_withdrawn.Selectable | fee_info.Selectable | gateway_updated.Selectable | hub_gauge_updated.Selectable | lock_position.Selectable | mailbox_updated.Selectable | message_gas_limit_updated.Selectable | mint_message_sent.Selectable | new_lock_position.Selectable | ownership_transferred.Selectable | process_error.Selectable | retry_bridge_out.Selectable | retry_lock.Selectable | retry_message.Selectable | retry_mint.Selectable | retry_transfer.Selectable | return_fee_updated.Selectable | reward_claimed.Selectable | reward_metadata_updated.Selectable | rewards_claimed.Selectable | security_module_updated.Selectable | user.Selectable | vote_cast.Selectable | vote_delegated.Selectable | withdraw.Selectable | withdraw_eth.Selectable;
    export type JSONSelectable = bridge_in_error.JSONSelectable | bridge_updated.JSONSelectable | bridged_in.JSONSelectable | bridged_lock.JSONSelectable | bridged_lock_error.JSONSelectable | bridged_out.JSONSelectable | chain_gateway_added.JSONSelectable | chain_gateway_removed.JSONSelectable | early_exit.JSONSelectable | eip712_domain_changed.JSONSelectable | epoch_rewards_updated.JSONSelectable | eth_withdrawn.JSONSelectable | fee_info.JSONSelectable | gateway_updated.JSONSelectable | hub_gauge_updated.JSONSelectable | lock_position.JSONSelectable | mailbox_updated.JSONSelectable | message_gas_limit_updated.JSONSelectable | mint_message_sent.JSONSelectable | new_lock_position.JSONSelectable | ownership_transferred.JSONSelectable | process_error.JSONSelectable | retry_bridge_out.JSONSelectable | retry_lock.JSONSelectable | retry_message.JSONSelectable | retry_mint.JSONSelectable | retry_transfer.JSONSelectable | return_fee_updated.JSONSelectable | reward_claimed.JSONSelectable | reward_metadata_updated.JSONSelectable | rewards_claimed.JSONSelectable | security_module_updated.JSONSelectable | user.JSONSelectable | vote_cast.JSONSelectable | vote_delegated.JSONSelectable | withdraw.JSONSelectable | withdraw_eth.JSONSelectable;
    export type Whereable = bridge_in_error.Whereable | bridge_updated.Whereable | bridged_in.Whereable | bridged_lock.Whereable | bridged_lock_error.Whereable | bridged_out.Whereable | chain_gateway_added.Whereable | chain_gateway_removed.Whereable | early_exit.Whereable | eip712_domain_changed.Whereable | epoch_rewards_updated.Whereable | eth_withdrawn.Whereable | fee_info.Whereable | gateway_updated.Whereable | hub_gauge_updated.Whereable | lock_position.Whereable | mailbox_updated.Whereable | message_gas_limit_updated.Whereable | mint_message_sent.Whereable | new_lock_position.Whereable | ownership_transferred.Whereable | process_error.Whereable | retry_bridge_out.Whereable | retry_lock.Whereable | retry_message.Whereable | retry_mint.Whereable | retry_transfer.Whereable | return_fee_updated.Whereable | reward_claimed.Whereable | reward_metadata_updated.Whereable | rewards_claimed.Whereable | security_module_updated.Whereable | user.Whereable | vote_cast.Whereable | vote_delegated.Whereable | withdraw.Whereable | withdraw_eth.Whereable;
    export type Insertable = bridge_in_error.Insertable | bridge_updated.Insertable | bridged_in.Insertable | bridged_lock.Insertable | bridged_lock_error.Insertable | bridged_out.Insertable | chain_gateway_added.Insertable | chain_gateway_removed.Insertable | early_exit.Insertable | eip712_domain_changed.Insertable | epoch_rewards_updated.Insertable | eth_withdrawn.Insertable | fee_info.Insertable | gateway_updated.Insertable | hub_gauge_updated.Insertable | lock_position.Insertable | mailbox_updated.Insertable | message_gas_limit_updated.Insertable | mint_message_sent.Insertable | new_lock_position.Insertable | ownership_transferred.Insertable | process_error.Insertable | retry_bridge_out.Insertable | retry_lock.Insertable | retry_message.Insertable | retry_mint.Insertable | retry_transfer.Insertable | return_fee_updated.Insertable | reward_claimed.Insertable | reward_metadata_updated.Insertable | rewards_claimed.Insertable | security_module_updated.Insertable | user.Insertable | vote_cast.Insertable | vote_delegated.Insertable | withdraw.Insertable | withdraw_eth.Insertable;
    export type Updatable = bridge_in_error.Updatable | bridge_updated.Updatable | bridged_in.Updatable | bridged_lock.Updatable | bridged_lock_error.Updatable | bridged_out.Updatable | chain_gateway_added.Updatable | chain_gateway_removed.Updatable | early_exit.Updatable | eip712_domain_changed.Updatable | epoch_rewards_updated.Updatable | eth_withdrawn.Updatable | fee_info.Updatable | gateway_updated.Updatable | hub_gauge_updated.Updatable | lock_position.Updatable | mailbox_updated.Updatable | message_gas_limit_updated.Updatable | mint_message_sent.Updatable | new_lock_position.Updatable | ownership_transferred.Updatable | process_error.Updatable | retry_bridge_out.Updatable | retry_lock.Updatable | retry_message.Updatable | retry_mint.Updatable | retry_transfer.Updatable | return_fee_updated.Updatable | reward_claimed.Updatable | reward_metadata_updated.Updatable | rewards_claimed.Updatable | security_module_updated.Updatable | user.Updatable | vote_cast.Updatable | vote_delegated.Updatable | withdraw.Updatable | withdraw_eth.Updatable;
    export type UniqueIndex = bridge_in_error.UniqueIndex | bridge_updated.UniqueIndex | bridged_in.UniqueIndex | bridged_lock.UniqueIndex | bridged_lock_error.UniqueIndex | bridged_out.UniqueIndex | chain_gateway_added.UniqueIndex | chain_gateway_removed.UniqueIndex | early_exit.UniqueIndex | eip712_domain_changed.UniqueIndex | epoch_rewards_updated.UniqueIndex | eth_withdrawn.UniqueIndex | fee_info.UniqueIndex | gateway_updated.UniqueIndex | hub_gauge_updated.UniqueIndex | lock_position.UniqueIndex | mailbox_updated.UniqueIndex | message_gas_limit_updated.UniqueIndex | mint_message_sent.UniqueIndex | new_lock_position.UniqueIndex | ownership_transferred.UniqueIndex | process_error.UniqueIndex | retry_bridge_out.UniqueIndex | retry_lock.UniqueIndex | retry_message.UniqueIndex | retry_mint.UniqueIndex | retry_transfer.UniqueIndex | return_fee_updated.UniqueIndex | reward_claimed.UniqueIndex | reward_metadata_updated.UniqueIndex | rewards_claimed.UniqueIndex | security_module_updated.UniqueIndex | user.UniqueIndex | vote_cast.UniqueIndex | vote_delegated.UniqueIndex | withdraw.UniqueIndex | withdraw_eth.UniqueIndex;
    export type Column = bridge_in_error.Column | bridge_updated.Column | bridged_in.Column | bridged_lock.Column | bridged_lock_error.Column | bridged_out.Column | chain_gateway_added.Column | chain_gateway_removed.Column | early_exit.Column | eip712_domain_changed.Column | epoch_rewards_updated.Column | eth_withdrawn.Column | fee_info.Column | gateway_updated.Column | hub_gauge_updated.Column | lock_position.Column | mailbox_updated.Column | message_gas_limit_updated.Column | mint_message_sent.Column | new_lock_position.Column | ownership_transferred.Column | process_error.Column | retry_bridge_out.Column | retry_lock.Column | retry_message.Column | retry_mint.Column | retry_transfer.Column | return_fee_updated.Column | reward_claimed.Column | reward_metadata_updated.Column | rewards_claimed.Column | security_module_updated.Column | user.Column | vote_cast.Column | vote_delegated.Column | withdraw.Column | withdraw_eth.Column;
  
    export type AllBaseTables = [bridge_in_error.Table, bridge_updated.Table, bridged_in.Table, bridged_lock.Table, bridged_lock_error.Table, bridged_out.Table, chain_gateway_added.Table, chain_gateway_removed.Table, early_exit.Table, eip712_domain_changed.Table, epoch_rewards_updated.Table, eth_withdrawn.Table, fee_info.Table, gateway_updated.Table, hub_gauge_updated.Table, lock_position.Table, mailbox_updated.Table, message_gas_limit_updated.Table, mint_message_sent.Table, new_lock_position.Table, ownership_transferred.Table, process_error.Table, retry_bridge_out.Table, retry_lock.Table, retry_message.Table, retry_mint.Table, retry_transfer.Table, return_fee_updated.Table, reward_claimed.Table, reward_metadata_updated.Table, rewards_claimed.Table, security_module_updated.Table, user.Table, vote_cast.Table, vote_delegated.Table, withdraw.Table, withdraw_eth.Table];
    export type AllForeignTables = [];
    export type AllViews = [];
    export type AllMaterializedViews = [];
    export type AllTablesAndViews = [bridge_in_error.Table, bridge_updated.Table, bridged_in.Table, bridged_lock.Table, bridged_lock_error.Table, bridged_out.Table, chain_gateway_added.Table, chain_gateway_removed.Table, early_exit.Table, eip712_domain_changed.Table, epoch_rewards_updated.Table, eth_withdrawn.Table, fee_info.Table, gateway_updated.Table, hub_gauge_updated.Table, lock_position.Table, mailbox_updated.Table, message_gas_limit_updated.Table, mint_message_sent.Table, new_lock_position.Table, ownership_transferred.Table, process_error.Table, retry_bridge_out.Table, retry_lock.Table, retry_message.Table, retry_mint.Table, retry_transfer.Table, return_fee_updated.Table, reward_claimed.Table, reward_metadata_updated.Table, rewards_claimed.Table, security_module_updated.Table, user.Table, vote_cast.Table, vote_delegated.Table, withdraw.Table, withdraw_eth.Table];
  }


  /* === global aggregate types === */

  export type Schema = 'public' | 'tokenomics';
  export type Table = public.Table | tokenomics.Table;
  export type Selectable = public.Selectable | tokenomics.Selectable;
  export type JSONSelectable = public.JSONSelectable | tokenomics.JSONSelectable;
  export type Whereable = public.Whereable | tokenomics.Whereable;
  export type Insertable = public.Insertable | tokenomics.Insertable;
  export type Updatable = public.Updatable | tokenomics.Updatable;
  export type UniqueIndex = public.UniqueIndex | tokenomics.UniqueIndex;
  export type Column = public.Column | tokenomics.Column;

  export type AllSchemas = ['public', 'tokenomics'];
  export type AllBaseTables = [...public.AllBaseTables, ...tokenomics.AllBaseTables];
  export type AllForeignTables = [...public.AllForeignTables, ...tokenomics.AllForeignTables];
  export type AllViews = [...public.AllViews, ...tokenomics.AllViews];
  export type AllMaterializedViews = [...public.AllMaterializedViews, ...tokenomics.AllMaterializedViews];
  export type AllTablesAndViews = [...public.AllTablesAndViews, ...tokenomics.AllTablesAndViews];


  /* === lookups === */

  export type SelectableForTable<T extends Table> = {
    "assets": assets.Selectable;
    "balances": balances.Selectable;
    "checkpoints": checkpoints.Selectable;
    "closedepochsprocessed": closedepochsprocessed.Selectable;
    "daily_metrics_by_chains_tokens": daily_metrics_by_chains_tokens.Selectable;
    "daily_metrics_by_date": daily_metrics_by_date.Selectable;
    "deposit_enqueued_not_processed": deposit_enqueued_not_processed.Selectable;
    "depositenqueued": depositenqueued.Selectable;
    "depositors": depositors.Selectable;
    "depositprocessed": depositprocessed.Selectable;
    "destination_intents": destination_intents.Selectable;
    "destination_intents_status_log": destination_intents_status_log.Selectable;
    "epoch_results": epoch_results.Selectable;
    "finddepositdomain": finddepositdomain.Selectable;
    "findinvoicedomain": findinvoicedomain.Selectable;
    "hub_deposits": hub_deposits.Selectable;
    "hub_intents": hub_intents.Selectable;
    "hub_intents_status_log": hub_intents_status_log.Selectable;
    "hub_invoices": hub_invoices.Selectable;
    "intentprocessed": intentprocessed.Selectable;
    "intents": intents.Selectable;
    "intents_with_shadow_data": intents_with_shadow_data.Selectable;
    "invoice_enqueued_not_settled": invoice_enqueued_not_settled.Selectable;
    "invoiceenqueued": invoiceenqueued.Selectable;
    "invoices": invoices.Selectable;
    "invoices_with_shadow_data": invoices_with_shadow_data.Selectable;
    "lock_positions": lock_positions.Selectable;
    "matchdeposit": matchdeposit.Selectable;
    "merkle_trees": merkle_trees.Selectable;
    "messages": messages.Selectable;
    "origin_intents": origin_intents.Selectable;
    "origin_intents_status_log": origin_intents_status_log.Selectable;
    "queues": queues.Selectable;
    "queues_type_log": queues_type_log.Selectable;
    "rewards": rewards.Selectable;
    "schema_migrations": schema_migrations.Selectable;
    "settledeposit": settledeposit.Selectable;
    "settlement_intents": settlement_intents.Selectable;
    "settlementenqueued": settlementenqueued.Selectable;
    "settlementqueueprocessed": settlementqueueprocessed.Selectable;
    "settlementsent": settlementsent.Selectable;
    "tokens": tokens.Selectable;
    "tokenomics.bridge_in_error": tokenomics.bridge_in_error.Selectable;
    "tokenomics.bridge_updated": tokenomics.bridge_updated.Selectable;
    "tokenomics.bridged_in": tokenomics.bridged_in.Selectable;
    "tokenomics.bridged_lock": tokenomics.bridged_lock.Selectable;
    "tokenomics.bridged_lock_error": tokenomics.bridged_lock_error.Selectable;
    "tokenomics.bridged_out": tokenomics.bridged_out.Selectable;
    "tokenomics.chain_gateway_added": tokenomics.chain_gateway_added.Selectable;
    "tokenomics.chain_gateway_removed": tokenomics.chain_gateway_removed.Selectable;
    "tokenomics.early_exit": tokenomics.early_exit.Selectable;
    "tokenomics.eip712_domain_changed": tokenomics.eip712_domain_changed.Selectable;
    "tokenomics.epoch_rewards_updated": tokenomics.epoch_rewards_updated.Selectable;
    "tokenomics.eth_withdrawn": tokenomics.eth_withdrawn.Selectable;
    "tokenomics.fee_info": tokenomics.fee_info.Selectable;
    "tokenomics.gateway_updated": tokenomics.gateway_updated.Selectable;
    "tokenomics.hub_gauge_updated": tokenomics.hub_gauge_updated.Selectable;
    "tokenomics.lock_position": tokenomics.lock_position.Selectable;
    "tokenomics.mailbox_updated": tokenomics.mailbox_updated.Selectable;
    "tokenomics.message_gas_limit_updated": tokenomics.message_gas_limit_updated.Selectable;
    "tokenomics.mint_message_sent": tokenomics.mint_message_sent.Selectable;
    "tokenomics.new_lock_position": tokenomics.new_lock_position.Selectable;
    "tokenomics.ownership_transferred": tokenomics.ownership_transferred.Selectable;
    "tokenomics.process_error": tokenomics.process_error.Selectable;
    "tokenomics.retry_bridge_out": tokenomics.retry_bridge_out.Selectable;
    "tokenomics.retry_lock": tokenomics.retry_lock.Selectable;
    "tokenomics.retry_message": tokenomics.retry_message.Selectable;
    "tokenomics.retry_mint": tokenomics.retry_mint.Selectable;
    "tokenomics.retry_transfer": tokenomics.retry_transfer.Selectable;
    "tokenomics.return_fee_updated": tokenomics.return_fee_updated.Selectable;
    "tokenomics.reward_claimed": tokenomics.reward_claimed.Selectable;
    "tokenomics.reward_metadata_updated": tokenomics.reward_metadata_updated.Selectable;
    "tokenomics.rewards_claimed": tokenomics.rewards_claimed.Selectable;
    "tokenomics.security_module_updated": tokenomics.security_module_updated.Selectable;
    "tokenomics.user": tokenomics.user.Selectable;
    "tokenomics.vote_cast": tokenomics.vote_cast.Selectable;
    "tokenomics.vote_delegated": tokenomics.vote_delegated.Selectable;
    "tokenomics.withdraw": tokenomics.withdraw.Selectable;
    "tokenomics.withdraw_eth": tokenomics.withdraw_eth.Selectable;
  }[T];

  export type JSONSelectableForTable<T extends Table> = {
    "assets": assets.JSONSelectable;
    "balances": balances.JSONSelectable;
    "checkpoints": checkpoints.JSONSelectable;
    "closedepochsprocessed": closedepochsprocessed.JSONSelectable;
    "daily_metrics_by_chains_tokens": daily_metrics_by_chains_tokens.JSONSelectable;
    "daily_metrics_by_date": daily_metrics_by_date.JSONSelectable;
    "deposit_enqueued_not_processed": deposit_enqueued_not_processed.JSONSelectable;
    "depositenqueued": depositenqueued.JSONSelectable;
    "depositors": depositors.JSONSelectable;
    "depositprocessed": depositprocessed.JSONSelectable;
    "destination_intents": destination_intents.JSONSelectable;
    "destination_intents_status_log": destination_intents_status_log.JSONSelectable;
    "epoch_results": epoch_results.JSONSelectable;
    "finddepositdomain": finddepositdomain.JSONSelectable;
    "findinvoicedomain": findinvoicedomain.JSONSelectable;
    "hub_deposits": hub_deposits.JSONSelectable;
    "hub_intents": hub_intents.JSONSelectable;
    "hub_intents_status_log": hub_intents_status_log.JSONSelectable;
    "hub_invoices": hub_invoices.JSONSelectable;
    "intentprocessed": intentprocessed.JSONSelectable;
    "intents": intents.JSONSelectable;
    "intents_with_shadow_data": intents_with_shadow_data.JSONSelectable;
    "invoice_enqueued_not_settled": invoice_enqueued_not_settled.JSONSelectable;
    "invoiceenqueued": invoiceenqueued.JSONSelectable;
    "invoices": invoices.JSONSelectable;
    "invoices_with_shadow_data": invoices_with_shadow_data.JSONSelectable;
    "lock_positions": lock_positions.JSONSelectable;
    "matchdeposit": matchdeposit.JSONSelectable;
    "merkle_trees": merkle_trees.JSONSelectable;
    "messages": messages.JSONSelectable;
    "origin_intents": origin_intents.JSONSelectable;
    "origin_intents_status_log": origin_intents_status_log.JSONSelectable;
    "queues": queues.JSONSelectable;
    "queues_type_log": queues_type_log.JSONSelectable;
    "rewards": rewards.JSONSelectable;
    "schema_migrations": schema_migrations.JSONSelectable;
    "settledeposit": settledeposit.JSONSelectable;
    "settlement_intents": settlement_intents.JSONSelectable;
    "settlementenqueued": settlementenqueued.JSONSelectable;
    "settlementqueueprocessed": settlementqueueprocessed.JSONSelectable;
    "settlementsent": settlementsent.JSONSelectable;
    "tokens": tokens.JSONSelectable;
    "tokenomics.bridge_in_error": tokenomics.bridge_in_error.JSONSelectable;
    "tokenomics.bridge_updated": tokenomics.bridge_updated.JSONSelectable;
    "tokenomics.bridged_in": tokenomics.bridged_in.JSONSelectable;
    "tokenomics.bridged_lock": tokenomics.bridged_lock.JSONSelectable;
    "tokenomics.bridged_lock_error": tokenomics.bridged_lock_error.JSONSelectable;
    "tokenomics.bridged_out": tokenomics.bridged_out.JSONSelectable;
    "tokenomics.chain_gateway_added": tokenomics.chain_gateway_added.JSONSelectable;
    "tokenomics.chain_gateway_removed": tokenomics.chain_gateway_removed.JSONSelectable;
    "tokenomics.early_exit": tokenomics.early_exit.JSONSelectable;
    "tokenomics.eip712_domain_changed": tokenomics.eip712_domain_changed.JSONSelectable;
    "tokenomics.epoch_rewards_updated": tokenomics.epoch_rewards_updated.JSONSelectable;
    "tokenomics.eth_withdrawn": tokenomics.eth_withdrawn.JSONSelectable;
    "tokenomics.fee_info": tokenomics.fee_info.JSONSelectable;
    "tokenomics.gateway_updated": tokenomics.gateway_updated.JSONSelectable;
    "tokenomics.hub_gauge_updated": tokenomics.hub_gauge_updated.JSONSelectable;
    "tokenomics.lock_position": tokenomics.lock_position.JSONSelectable;
    "tokenomics.mailbox_updated": tokenomics.mailbox_updated.JSONSelectable;
    "tokenomics.message_gas_limit_updated": tokenomics.message_gas_limit_updated.JSONSelectable;
    "tokenomics.mint_message_sent": tokenomics.mint_message_sent.JSONSelectable;
    "tokenomics.new_lock_position": tokenomics.new_lock_position.JSONSelectable;
    "tokenomics.ownership_transferred": tokenomics.ownership_transferred.JSONSelectable;
    "tokenomics.process_error": tokenomics.process_error.JSONSelectable;
    "tokenomics.retry_bridge_out": tokenomics.retry_bridge_out.JSONSelectable;
    "tokenomics.retry_lock": tokenomics.retry_lock.JSONSelectable;
    "tokenomics.retry_message": tokenomics.retry_message.JSONSelectable;
    "tokenomics.retry_mint": tokenomics.retry_mint.JSONSelectable;
    "tokenomics.retry_transfer": tokenomics.retry_transfer.JSONSelectable;
    "tokenomics.return_fee_updated": tokenomics.return_fee_updated.JSONSelectable;
    "tokenomics.reward_claimed": tokenomics.reward_claimed.JSONSelectable;
    "tokenomics.reward_metadata_updated": tokenomics.reward_metadata_updated.JSONSelectable;
    "tokenomics.rewards_claimed": tokenomics.rewards_claimed.JSONSelectable;
    "tokenomics.security_module_updated": tokenomics.security_module_updated.JSONSelectable;
    "tokenomics.user": tokenomics.user.JSONSelectable;
    "tokenomics.vote_cast": tokenomics.vote_cast.JSONSelectable;
    "tokenomics.vote_delegated": tokenomics.vote_delegated.JSONSelectable;
    "tokenomics.withdraw": tokenomics.withdraw.JSONSelectable;
    "tokenomics.withdraw_eth": tokenomics.withdraw_eth.JSONSelectable;
  }[T];

  export type WhereableForTable<T extends Table> = {
    "assets": assets.Whereable;
    "balances": balances.Whereable;
    "checkpoints": checkpoints.Whereable;
    "closedepochsprocessed": closedepochsprocessed.Whereable;
    "daily_metrics_by_chains_tokens": daily_metrics_by_chains_tokens.Whereable;
    "daily_metrics_by_date": daily_metrics_by_date.Whereable;
    "deposit_enqueued_not_processed": deposit_enqueued_not_processed.Whereable;
    "depositenqueued": depositenqueued.Whereable;
    "depositors": depositors.Whereable;
    "depositprocessed": depositprocessed.Whereable;
    "destination_intents": destination_intents.Whereable;
    "destination_intents_status_log": destination_intents_status_log.Whereable;
    "epoch_results": epoch_results.Whereable;
    "finddepositdomain": finddepositdomain.Whereable;
    "findinvoicedomain": findinvoicedomain.Whereable;
    "hub_deposits": hub_deposits.Whereable;
    "hub_intents": hub_intents.Whereable;
    "hub_intents_status_log": hub_intents_status_log.Whereable;
    "hub_invoices": hub_invoices.Whereable;
    "intentprocessed": intentprocessed.Whereable;
    "intents": intents.Whereable;
    "intents_with_shadow_data": intents_with_shadow_data.Whereable;
    "invoice_enqueued_not_settled": invoice_enqueued_not_settled.Whereable;
    "invoiceenqueued": invoiceenqueued.Whereable;
    "invoices": invoices.Whereable;
    "invoices_with_shadow_data": invoices_with_shadow_data.Whereable;
    "lock_positions": lock_positions.Whereable;
    "matchdeposit": matchdeposit.Whereable;
    "merkle_trees": merkle_trees.Whereable;
    "messages": messages.Whereable;
    "origin_intents": origin_intents.Whereable;
    "origin_intents_status_log": origin_intents_status_log.Whereable;
    "queues": queues.Whereable;
    "queues_type_log": queues_type_log.Whereable;
    "rewards": rewards.Whereable;
    "schema_migrations": schema_migrations.Whereable;
    "settledeposit": settledeposit.Whereable;
    "settlement_intents": settlement_intents.Whereable;
    "settlementenqueued": settlementenqueued.Whereable;
    "settlementqueueprocessed": settlementqueueprocessed.Whereable;
    "settlementsent": settlementsent.Whereable;
    "tokens": tokens.Whereable;
    "tokenomics.bridge_in_error": tokenomics.bridge_in_error.Whereable;
    "tokenomics.bridge_updated": tokenomics.bridge_updated.Whereable;
    "tokenomics.bridged_in": tokenomics.bridged_in.Whereable;
    "tokenomics.bridged_lock": tokenomics.bridged_lock.Whereable;
    "tokenomics.bridged_lock_error": tokenomics.bridged_lock_error.Whereable;
    "tokenomics.bridged_out": tokenomics.bridged_out.Whereable;
    "tokenomics.chain_gateway_added": tokenomics.chain_gateway_added.Whereable;
    "tokenomics.chain_gateway_removed": tokenomics.chain_gateway_removed.Whereable;
    "tokenomics.early_exit": tokenomics.early_exit.Whereable;
    "tokenomics.eip712_domain_changed": tokenomics.eip712_domain_changed.Whereable;
    "tokenomics.epoch_rewards_updated": tokenomics.epoch_rewards_updated.Whereable;
    "tokenomics.eth_withdrawn": tokenomics.eth_withdrawn.Whereable;
    "tokenomics.fee_info": tokenomics.fee_info.Whereable;
    "tokenomics.gateway_updated": tokenomics.gateway_updated.Whereable;
    "tokenomics.hub_gauge_updated": tokenomics.hub_gauge_updated.Whereable;
    "tokenomics.lock_position": tokenomics.lock_position.Whereable;
    "tokenomics.mailbox_updated": tokenomics.mailbox_updated.Whereable;
    "tokenomics.message_gas_limit_updated": tokenomics.message_gas_limit_updated.Whereable;
    "tokenomics.mint_message_sent": tokenomics.mint_message_sent.Whereable;
    "tokenomics.new_lock_position": tokenomics.new_lock_position.Whereable;
    "tokenomics.ownership_transferred": tokenomics.ownership_transferred.Whereable;
    "tokenomics.process_error": tokenomics.process_error.Whereable;
    "tokenomics.retry_bridge_out": tokenomics.retry_bridge_out.Whereable;
    "tokenomics.retry_lock": tokenomics.retry_lock.Whereable;
    "tokenomics.retry_message": tokenomics.retry_message.Whereable;
    "tokenomics.retry_mint": tokenomics.retry_mint.Whereable;
    "tokenomics.retry_transfer": tokenomics.retry_transfer.Whereable;
    "tokenomics.return_fee_updated": tokenomics.return_fee_updated.Whereable;
    "tokenomics.reward_claimed": tokenomics.reward_claimed.Whereable;
    "tokenomics.reward_metadata_updated": tokenomics.reward_metadata_updated.Whereable;
    "tokenomics.rewards_claimed": tokenomics.rewards_claimed.Whereable;
    "tokenomics.security_module_updated": tokenomics.security_module_updated.Whereable;
    "tokenomics.user": tokenomics.user.Whereable;
    "tokenomics.vote_cast": tokenomics.vote_cast.Whereable;
    "tokenomics.vote_delegated": tokenomics.vote_delegated.Whereable;
    "tokenomics.withdraw": tokenomics.withdraw.Whereable;
    "tokenomics.withdraw_eth": tokenomics.withdraw_eth.Whereable;
  }[T];

  export type InsertableForTable<T extends Table> = {
    "assets": assets.Insertable;
    "balances": balances.Insertable;
    "checkpoints": checkpoints.Insertable;
    "closedepochsprocessed": closedepochsprocessed.Insertable;
    "daily_metrics_by_chains_tokens": daily_metrics_by_chains_tokens.Insertable;
    "daily_metrics_by_date": daily_metrics_by_date.Insertable;
    "deposit_enqueued_not_processed": deposit_enqueued_not_processed.Insertable;
    "depositenqueued": depositenqueued.Insertable;
    "depositors": depositors.Insertable;
    "depositprocessed": depositprocessed.Insertable;
    "destination_intents": destination_intents.Insertable;
    "destination_intents_status_log": destination_intents_status_log.Insertable;
    "epoch_results": epoch_results.Insertable;
    "finddepositdomain": finddepositdomain.Insertable;
    "findinvoicedomain": findinvoicedomain.Insertable;
    "hub_deposits": hub_deposits.Insertable;
    "hub_intents": hub_intents.Insertable;
    "hub_intents_status_log": hub_intents_status_log.Insertable;
    "hub_invoices": hub_invoices.Insertable;
    "intentprocessed": intentprocessed.Insertable;
    "intents": intents.Insertable;
    "intents_with_shadow_data": intents_with_shadow_data.Insertable;
    "invoice_enqueued_not_settled": invoice_enqueued_not_settled.Insertable;
    "invoiceenqueued": invoiceenqueued.Insertable;
    "invoices": invoices.Insertable;
    "invoices_with_shadow_data": invoices_with_shadow_data.Insertable;
    "lock_positions": lock_positions.Insertable;
    "matchdeposit": matchdeposit.Insertable;
    "merkle_trees": merkle_trees.Insertable;
    "messages": messages.Insertable;
    "origin_intents": origin_intents.Insertable;
    "origin_intents_status_log": origin_intents_status_log.Insertable;
    "queues": queues.Insertable;
    "queues_type_log": queues_type_log.Insertable;
    "rewards": rewards.Insertable;
    "schema_migrations": schema_migrations.Insertable;
    "settledeposit": settledeposit.Insertable;
    "settlement_intents": settlement_intents.Insertable;
    "settlementenqueued": settlementenqueued.Insertable;
    "settlementqueueprocessed": settlementqueueprocessed.Insertable;
    "settlementsent": settlementsent.Insertable;
    "tokens": tokens.Insertable;
    "tokenomics.bridge_in_error": tokenomics.bridge_in_error.Insertable;
    "tokenomics.bridge_updated": tokenomics.bridge_updated.Insertable;
    "tokenomics.bridged_in": tokenomics.bridged_in.Insertable;
    "tokenomics.bridged_lock": tokenomics.bridged_lock.Insertable;
    "tokenomics.bridged_lock_error": tokenomics.bridged_lock_error.Insertable;
    "tokenomics.bridged_out": tokenomics.bridged_out.Insertable;
    "tokenomics.chain_gateway_added": tokenomics.chain_gateway_added.Insertable;
    "tokenomics.chain_gateway_removed": tokenomics.chain_gateway_removed.Insertable;
    "tokenomics.early_exit": tokenomics.early_exit.Insertable;
    "tokenomics.eip712_domain_changed": tokenomics.eip712_domain_changed.Insertable;
    "tokenomics.epoch_rewards_updated": tokenomics.epoch_rewards_updated.Insertable;
    "tokenomics.eth_withdrawn": tokenomics.eth_withdrawn.Insertable;
    "tokenomics.fee_info": tokenomics.fee_info.Insertable;
    "tokenomics.gateway_updated": tokenomics.gateway_updated.Insertable;
    "tokenomics.hub_gauge_updated": tokenomics.hub_gauge_updated.Insertable;
    "tokenomics.lock_position": tokenomics.lock_position.Insertable;
    "tokenomics.mailbox_updated": tokenomics.mailbox_updated.Insertable;
    "tokenomics.message_gas_limit_updated": tokenomics.message_gas_limit_updated.Insertable;
    "tokenomics.mint_message_sent": tokenomics.mint_message_sent.Insertable;
    "tokenomics.new_lock_position": tokenomics.new_lock_position.Insertable;
    "tokenomics.ownership_transferred": tokenomics.ownership_transferred.Insertable;
    "tokenomics.process_error": tokenomics.process_error.Insertable;
    "tokenomics.retry_bridge_out": tokenomics.retry_bridge_out.Insertable;
    "tokenomics.retry_lock": tokenomics.retry_lock.Insertable;
    "tokenomics.retry_message": tokenomics.retry_message.Insertable;
    "tokenomics.retry_mint": tokenomics.retry_mint.Insertable;
    "tokenomics.retry_transfer": tokenomics.retry_transfer.Insertable;
    "tokenomics.return_fee_updated": tokenomics.return_fee_updated.Insertable;
    "tokenomics.reward_claimed": tokenomics.reward_claimed.Insertable;
    "tokenomics.reward_metadata_updated": tokenomics.reward_metadata_updated.Insertable;
    "tokenomics.rewards_claimed": tokenomics.rewards_claimed.Insertable;
    "tokenomics.security_module_updated": tokenomics.security_module_updated.Insertable;
    "tokenomics.user": tokenomics.user.Insertable;
    "tokenomics.vote_cast": tokenomics.vote_cast.Insertable;
    "tokenomics.vote_delegated": tokenomics.vote_delegated.Insertable;
    "tokenomics.withdraw": tokenomics.withdraw.Insertable;
    "tokenomics.withdraw_eth": tokenomics.withdraw_eth.Insertable;
  }[T];

  export type UpdatableForTable<T extends Table> = {
    "assets": assets.Updatable;
    "balances": balances.Updatable;
    "checkpoints": checkpoints.Updatable;
    "closedepochsprocessed": closedepochsprocessed.Updatable;
    "daily_metrics_by_chains_tokens": daily_metrics_by_chains_tokens.Updatable;
    "daily_metrics_by_date": daily_metrics_by_date.Updatable;
    "deposit_enqueued_not_processed": deposit_enqueued_not_processed.Updatable;
    "depositenqueued": depositenqueued.Updatable;
    "depositors": depositors.Updatable;
    "depositprocessed": depositprocessed.Updatable;
    "destination_intents": destination_intents.Updatable;
    "destination_intents_status_log": destination_intents_status_log.Updatable;
    "epoch_results": epoch_results.Updatable;
    "finddepositdomain": finddepositdomain.Updatable;
    "findinvoicedomain": findinvoicedomain.Updatable;
    "hub_deposits": hub_deposits.Updatable;
    "hub_intents": hub_intents.Updatable;
    "hub_intents_status_log": hub_intents_status_log.Updatable;
    "hub_invoices": hub_invoices.Updatable;
    "intentprocessed": intentprocessed.Updatable;
    "intents": intents.Updatable;
    "intents_with_shadow_data": intents_with_shadow_data.Updatable;
    "invoice_enqueued_not_settled": invoice_enqueued_not_settled.Updatable;
    "invoiceenqueued": invoiceenqueued.Updatable;
    "invoices": invoices.Updatable;
    "invoices_with_shadow_data": invoices_with_shadow_data.Updatable;
    "lock_positions": lock_positions.Updatable;
    "matchdeposit": matchdeposit.Updatable;
    "merkle_trees": merkle_trees.Updatable;
    "messages": messages.Updatable;
    "origin_intents": origin_intents.Updatable;
    "origin_intents_status_log": origin_intents_status_log.Updatable;
    "queues": queues.Updatable;
    "queues_type_log": queues_type_log.Updatable;
    "rewards": rewards.Updatable;
    "schema_migrations": schema_migrations.Updatable;
    "settledeposit": settledeposit.Updatable;
    "settlement_intents": settlement_intents.Updatable;
    "settlementenqueued": settlementenqueued.Updatable;
    "settlementqueueprocessed": settlementqueueprocessed.Updatable;
    "settlementsent": settlementsent.Updatable;
    "tokens": tokens.Updatable;
    "tokenomics.bridge_in_error": tokenomics.bridge_in_error.Updatable;
    "tokenomics.bridge_updated": tokenomics.bridge_updated.Updatable;
    "tokenomics.bridged_in": tokenomics.bridged_in.Updatable;
    "tokenomics.bridged_lock": tokenomics.bridged_lock.Updatable;
    "tokenomics.bridged_lock_error": tokenomics.bridged_lock_error.Updatable;
    "tokenomics.bridged_out": tokenomics.bridged_out.Updatable;
    "tokenomics.chain_gateway_added": tokenomics.chain_gateway_added.Updatable;
    "tokenomics.chain_gateway_removed": tokenomics.chain_gateway_removed.Updatable;
    "tokenomics.early_exit": tokenomics.early_exit.Updatable;
    "tokenomics.eip712_domain_changed": tokenomics.eip712_domain_changed.Updatable;
    "tokenomics.epoch_rewards_updated": tokenomics.epoch_rewards_updated.Updatable;
    "tokenomics.eth_withdrawn": tokenomics.eth_withdrawn.Updatable;
    "tokenomics.fee_info": tokenomics.fee_info.Updatable;
    "tokenomics.gateway_updated": tokenomics.gateway_updated.Updatable;
    "tokenomics.hub_gauge_updated": tokenomics.hub_gauge_updated.Updatable;
    "tokenomics.lock_position": tokenomics.lock_position.Updatable;
    "tokenomics.mailbox_updated": tokenomics.mailbox_updated.Updatable;
    "tokenomics.message_gas_limit_updated": tokenomics.message_gas_limit_updated.Updatable;
    "tokenomics.mint_message_sent": tokenomics.mint_message_sent.Updatable;
    "tokenomics.new_lock_position": tokenomics.new_lock_position.Updatable;
    "tokenomics.ownership_transferred": tokenomics.ownership_transferred.Updatable;
    "tokenomics.process_error": tokenomics.process_error.Updatable;
    "tokenomics.retry_bridge_out": tokenomics.retry_bridge_out.Updatable;
    "tokenomics.retry_lock": tokenomics.retry_lock.Updatable;
    "tokenomics.retry_message": tokenomics.retry_message.Updatable;
    "tokenomics.retry_mint": tokenomics.retry_mint.Updatable;
    "tokenomics.retry_transfer": tokenomics.retry_transfer.Updatable;
    "tokenomics.return_fee_updated": tokenomics.return_fee_updated.Updatable;
    "tokenomics.reward_claimed": tokenomics.reward_claimed.Updatable;
    "tokenomics.reward_metadata_updated": tokenomics.reward_metadata_updated.Updatable;
    "tokenomics.rewards_claimed": tokenomics.rewards_claimed.Updatable;
    "tokenomics.security_module_updated": tokenomics.security_module_updated.Updatable;
    "tokenomics.user": tokenomics.user.Updatable;
    "tokenomics.vote_cast": tokenomics.vote_cast.Updatable;
    "tokenomics.vote_delegated": tokenomics.vote_delegated.Updatable;
    "tokenomics.withdraw": tokenomics.withdraw.Updatable;
    "tokenomics.withdraw_eth": tokenomics.withdraw_eth.Updatable;
  }[T];

  export type UniqueIndexForTable<T extends Table> = {
    "assets": assets.UniqueIndex;
    "balances": balances.UniqueIndex;
    "checkpoints": checkpoints.UniqueIndex;
    "closedepochsprocessed": closedepochsprocessed.UniqueIndex;
    "daily_metrics_by_chains_tokens": daily_metrics_by_chains_tokens.UniqueIndex;
    "daily_metrics_by_date": daily_metrics_by_date.UniqueIndex;
    "deposit_enqueued_not_processed": deposit_enqueued_not_processed.UniqueIndex;
    "depositenqueued": depositenqueued.UniqueIndex;
    "depositors": depositors.UniqueIndex;
    "depositprocessed": depositprocessed.UniqueIndex;
    "destination_intents": destination_intents.UniqueIndex;
    "destination_intents_status_log": destination_intents_status_log.UniqueIndex;
    "epoch_results": epoch_results.UniqueIndex;
    "finddepositdomain": finddepositdomain.UniqueIndex;
    "findinvoicedomain": findinvoicedomain.UniqueIndex;
    "hub_deposits": hub_deposits.UniqueIndex;
    "hub_intents": hub_intents.UniqueIndex;
    "hub_intents_status_log": hub_intents_status_log.UniqueIndex;
    "hub_invoices": hub_invoices.UniqueIndex;
    "intentprocessed": intentprocessed.UniqueIndex;
    "intents": intents.UniqueIndex;
    "intents_with_shadow_data": intents_with_shadow_data.UniqueIndex;
    "invoice_enqueued_not_settled": invoice_enqueued_not_settled.UniqueIndex;
    "invoiceenqueued": invoiceenqueued.UniqueIndex;
    "invoices": invoices.UniqueIndex;
    "invoices_with_shadow_data": invoices_with_shadow_data.UniqueIndex;
    "lock_positions": lock_positions.UniqueIndex;
    "matchdeposit": matchdeposit.UniqueIndex;
    "merkle_trees": merkle_trees.UniqueIndex;
    "messages": messages.UniqueIndex;
    "origin_intents": origin_intents.UniqueIndex;
    "origin_intents_status_log": origin_intents_status_log.UniqueIndex;
    "queues": queues.UniqueIndex;
    "queues_type_log": queues_type_log.UniqueIndex;
    "rewards": rewards.UniqueIndex;
    "schema_migrations": schema_migrations.UniqueIndex;
    "settledeposit": settledeposit.UniqueIndex;
    "settlement_intents": settlement_intents.UniqueIndex;
    "settlementenqueued": settlementenqueued.UniqueIndex;
    "settlementqueueprocessed": settlementqueueprocessed.UniqueIndex;
    "settlementsent": settlementsent.UniqueIndex;
    "tokens": tokens.UniqueIndex;
    "tokenomics.bridge_in_error": tokenomics.bridge_in_error.UniqueIndex;
    "tokenomics.bridge_updated": tokenomics.bridge_updated.UniqueIndex;
    "tokenomics.bridged_in": tokenomics.bridged_in.UniqueIndex;
    "tokenomics.bridged_lock": tokenomics.bridged_lock.UniqueIndex;
    "tokenomics.bridged_lock_error": tokenomics.bridged_lock_error.UniqueIndex;
    "tokenomics.bridged_out": tokenomics.bridged_out.UniqueIndex;
    "tokenomics.chain_gateway_added": tokenomics.chain_gateway_added.UniqueIndex;
    "tokenomics.chain_gateway_removed": tokenomics.chain_gateway_removed.UniqueIndex;
    "tokenomics.early_exit": tokenomics.early_exit.UniqueIndex;
    "tokenomics.eip712_domain_changed": tokenomics.eip712_domain_changed.UniqueIndex;
    "tokenomics.epoch_rewards_updated": tokenomics.epoch_rewards_updated.UniqueIndex;
    "tokenomics.eth_withdrawn": tokenomics.eth_withdrawn.UniqueIndex;
    "tokenomics.fee_info": tokenomics.fee_info.UniqueIndex;
    "tokenomics.gateway_updated": tokenomics.gateway_updated.UniqueIndex;
    "tokenomics.hub_gauge_updated": tokenomics.hub_gauge_updated.UniqueIndex;
    "tokenomics.lock_position": tokenomics.lock_position.UniqueIndex;
    "tokenomics.mailbox_updated": tokenomics.mailbox_updated.UniqueIndex;
    "tokenomics.message_gas_limit_updated": tokenomics.message_gas_limit_updated.UniqueIndex;
    "tokenomics.mint_message_sent": tokenomics.mint_message_sent.UniqueIndex;
    "tokenomics.new_lock_position": tokenomics.new_lock_position.UniqueIndex;
    "tokenomics.ownership_transferred": tokenomics.ownership_transferred.UniqueIndex;
    "tokenomics.process_error": tokenomics.process_error.UniqueIndex;
    "tokenomics.retry_bridge_out": tokenomics.retry_bridge_out.UniqueIndex;
    "tokenomics.retry_lock": tokenomics.retry_lock.UniqueIndex;
    "tokenomics.retry_message": tokenomics.retry_message.UniqueIndex;
    "tokenomics.retry_mint": tokenomics.retry_mint.UniqueIndex;
    "tokenomics.retry_transfer": tokenomics.retry_transfer.UniqueIndex;
    "tokenomics.return_fee_updated": tokenomics.return_fee_updated.UniqueIndex;
    "tokenomics.reward_claimed": tokenomics.reward_claimed.UniqueIndex;
    "tokenomics.reward_metadata_updated": tokenomics.reward_metadata_updated.UniqueIndex;
    "tokenomics.rewards_claimed": tokenomics.rewards_claimed.UniqueIndex;
    "tokenomics.security_module_updated": tokenomics.security_module_updated.UniqueIndex;
    "tokenomics.user": tokenomics.user.UniqueIndex;
    "tokenomics.vote_cast": tokenomics.vote_cast.UniqueIndex;
    "tokenomics.vote_delegated": tokenomics.vote_delegated.UniqueIndex;
    "tokenomics.withdraw": tokenomics.withdraw.UniqueIndex;
    "tokenomics.withdraw_eth": tokenomics.withdraw_eth.UniqueIndex;
  }[T];

  export type ColumnForTable<T extends Table> = {
    "assets": assets.Column;
    "balances": balances.Column;
    "checkpoints": checkpoints.Column;
    "closedepochsprocessed": closedepochsprocessed.Column;
    "daily_metrics_by_chains_tokens": daily_metrics_by_chains_tokens.Column;
    "daily_metrics_by_date": daily_metrics_by_date.Column;
    "deposit_enqueued_not_processed": deposit_enqueued_not_processed.Column;
    "depositenqueued": depositenqueued.Column;
    "depositors": depositors.Column;
    "depositprocessed": depositprocessed.Column;
    "destination_intents": destination_intents.Column;
    "destination_intents_status_log": destination_intents_status_log.Column;
    "epoch_results": epoch_results.Column;
    "finddepositdomain": finddepositdomain.Column;
    "findinvoicedomain": findinvoicedomain.Column;
    "hub_deposits": hub_deposits.Column;
    "hub_intents": hub_intents.Column;
    "hub_intents_status_log": hub_intents_status_log.Column;
    "hub_invoices": hub_invoices.Column;
    "intentprocessed": intentprocessed.Column;
    "intents": intents.Column;
    "intents_with_shadow_data": intents_with_shadow_data.Column;
    "invoice_enqueued_not_settled": invoice_enqueued_not_settled.Column;
    "invoiceenqueued": invoiceenqueued.Column;
    "invoices": invoices.Column;
    "invoices_with_shadow_data": invoices_with_shadow_data.Column;
    "lock_positions": lock_positions.Column;
    "matchdeposit": matchdeposit.Column;
    "merkle_trees": merkle_trees.Column;
    "messages": messages.Column;
    "origin_intents": origin_intents.Column;
    "origin_intents_status_log": origin_intents_status_log.Column;
    "queues": queues.Column;
    "queues_type_log": queues_type_log.Column;
    "rewards": rewards.Column;
    "schema_migrations": schema_migrations.Column;
    "settledeposit": settledeposit.Column;
    "settlement_intents": settlement_intents.Column;
    "settlementenqueued": settlementenqueued.Column;
    "settlementqueueprocessed": settlementqueueprocessed.Column;
    "settlementsent": settlementsent.Column;
    "tokens": tokens.Column;
    "tokenomics.bridge_in_error": tokenomics.bridge_in_error.Column;
    "tokenomics.bridge_updated": tokenomics.bridge_updated.Column;
    "tokenomics.bridged_in": tokenomics.bridged_in.Column;
    "tokenomics.bridged_lock": tokenomics.bridged_lock.Column;
    "tokenomics.bridged_lock_error": tokenomics.bridged_lock_error.Column;
    "tokenomics.bridged_out": tokenomics.bridged_out.Column;
    "tokenomics.chain_gateway_added": tokenomics.chain_gateway_added.Column;
    "tokenomics.chain_gateway_removed": tokenomics.chain_gateway_removed.Column;
    "tokenomics.early_exit": tokenomics.early_exit.Column;
    "tokenomics.eip712_domain_changed": tokenomics.eip712_domain_changed.Column;
    "tokenomics.epoch_rewards_updated": tokenomics.epoch_rewards_updated.Column;
    "tokenomics.eth_withdrawn": tokenomics.eth_withdrawn.Column;
    "tokenomics.fee_info": tokenomics.fee_info.Column;
    "tokenomics.gateway_updated": tokenomics.gateway_updated.Column;
    "tokenomics.hub_gauge_updated": tokenomics.hub_gauge_updated.Column;
    "tokenomics.lock_position": tokenomics.lock_position.Column;
    "tokenomics.mailbox_updated": tokenomics.mailbox_updated.Column;
    "tokenomics.message_gas_limit_updated": tokenomics.message_gas_limit_updated.Column;
    "tokenomics.mint_message_sent": tokenomics.mint_message_sent.Column;
    "tokenomics.new_lock_position": tokenomics.new_lock_position.Column;
    "tokenomics.ownership_transferred": tokenomics.ownership_transferred.Column;
    "tokenomics.process_error": tokenomics.process_error.Column;
    "tokenomics.retry_bridge_out": tokenomics.retry_bridge_out.Column;
    "tokenomics.retry_lock": tokenomics.retry_lock.Column;
    "tokenomics.retry_message": tokenomics.retry_message.Column;
    "tokenomics.retry_mint": tokenomics.retry_mint.Column;
    "tokenomics.retry_transfer": tokenomics.retry_transfer.Column;
    "tokenomics.return_fee_updated": tokenomics.return_fee_updated.Column;
    "tokenomics.reward_claimed": tokenomics.reward_claimed.Column;
    "tokenomics.reward_metadata_updated": tokenomics.reward_metadata_updated.Column;
    "tokenomics.rewards_claimed": tokenomics.rewards_claimed.Column;
    "tokenomics.security_module_updated": tokenomics.security_module_updated.Column;
    "tokenomics.user": tokenomics.user.Column;
    "tokenomics.vote_cast": tokenomics.vote_cast.Column;
    "tokenomics.vote_delegated": tokenomics.vote_delegated.Column;
    "tokenomics.withdraw": tokenomics.withdraw.Column;
    "tokenomics.withdraw_eth": tokenomics.withdraw_eth.Column;
  }[T];

  export type SQLForTable<T extends Table> = {
    "assets": assets.SQL;
    "balances": balances.SQL;
    "checkpoints": checkpoints.SQL;
    "closedepochsprocessed": closedepochsprocessed.SQL;
    "daily_metrics_by_chains_tokens": daily_metrics_by_chains_tokens.SQL;
    "daily_metrics_by_date": daily_metrics_by_date.SQL;
    "deposit_enqueued_not_processed": deposit_enqueued_not_processed.SQL;
    "depositenqueued": depositenqueued.SQL;
    "depositors": depositors.SQL;
    "depositprocessed": depositprocessed.SQL;
    "destination_intents": destination_intents.SQL;
    "destination_intents_status_log": destination_intents_status_log.SQL;
    "epoch_results": epoch_results.SQL;
    "finddepositdomain": finddepositdomain.SQL;
    "findinvoicedomain": findinvoicedomain.SQL;
    "hub_deposits": hub_deposits.SQL;
    "hub_intents": hub_intents.SQL;
    "hub_intents_status_log": hub_intents_status_log.SQL;
    "hub_invoices": hub_invoices.SQL;
    "intentprocessed": intentprocessed.SQL;
    "intents": intents.SQL;
    "intents_with_shadow_data": intents_with_shadow_data.SQL;
    "invoice_enqueued_not_settled": invoice_enqueued_not_settled.SQL;
    "invoiceenqueued": invoiceenqueued.SQL;
    "invoices": invoices.SQL;
    "invoices_with_shadow_data": invoices_with_shadow_data.SQL;
    "lock_positions": lock_positions.SQL;
    "matchdeposit": matchdeposit.SQL;
    "merkle_trees": merkle_trees.SQL;
    "messages": messages.SQL;
    "origin_intents": origin_intents.SQL;
    "origin_intents_status_log": origin_intents_status_log.SQL;
    "queues": queues.SQL;
    "queues_type_log": queues_type_log.SQL;
    "rewards": rewards.SQL;
    "schema_migrations": schema_migrations.SQL;
    "settledeposit": settledeposit.SQL;
    "settlement_intents": settlement_intents.SQL;
    "settlementenqueued": settlementenqueued.SQL;
    "settlementqueueprocessed": settlementqueueprocessed.SQL;
    "settlementsent": settlementsent.SQL;
    "tokens": tokens.SQL;
    "tokenomics.bridge_in_error": tokenomics.bridge_in_error.SQL;
    "tokenomics.bridge_updated": tokenomics.bridge_updated.SQL;
    "tokenomics.bridged_in": tokenomics.bridged_in.SQL;
    "tokenomics.bridged_lock": tokenomics.bridged_lock.SQL;
    "tokenomics.bridged_lock_error": tokenomics.bridged_lock_error.SQL;
    "tokenomics.bridged_out": tokenomics.bridged_out.SQL;
    "tokenomics.chain_gateway_added": tokenomics.chain_gateway_added.SQL;
    "tokenomics.chain_gateway_removed": tokenomics.chain_gateway_removed.SQL;
    "tokenomics.early_exit": tokenomics.early_exit.SQL;
    "tokenomics.eip712_domain_changed": tokenomics.eip712_domain_changed.SQL;
    "tokenomics.epoch_rewards_updated": tokenomics.epoch_rewards_updated.SQL;
    "tokenomics.eth_withdrawn": tokenomics.eth_withdrawn.SQL;
    "tokenomics.fee_info": tokenomics.fee_info.SQL;
    "tokenomics.gateway_updated": tokenomics.gateway_updated.SQL;
    "tokenomics.hub_gauge_updated": tokenomics.hub_gauge_updated.SQL;
    "tokenomics.lock_position": tokenomics.lock_position.SQL;
    "tokenomics.mailbox_updated": tokenomics.mailbox_updated.SQL;
    "tokenomics.message_gas_limit_updated": tokenomics.message_gas_limit_updated.SQL;
    "tokenomics.mint_message_sent": tokenomics.mint_message_sent.SQL;
    "tokenomics.new_lock_position": tokenomics.new_lock_position.SQL;
    "tokenomics.ownership_transferred": tokenomics.ownership_transferred.SQL;
    "tokenomics.process_error": tokenomics.process_error.SQL;
    "tokenomics.retry_bridge_out": tokenomics.retry_bridge_out.SQL;
    "tokenomics.retry_lock": tokenomics.retry_lock.SQL;
    "tokenomics.retry_message": tokenomics.retry_message.SQL;
    "tokenomics.retry_mint": tokenomics.retry_mint.SQL;
    "tokenomics.retry_transfer": tokenomics.retry_transfer.SQL;
    "tokenomics.return_fee_updated": tokenomics.return_fee_updated.SQL;
    "tokenomics.reward_claimed": tokenomics.reward_claimed.SQL;
    "tokenomics.reward_metadata_updated": tokenomics.reward_metadata_updated.SQL;
    "tokenomics.rewards_claimed": tokenomics.rewards_claimed.SQL;
    "tokenomics.security_module_updated": tokenomics.security_module_updated.SQL;
    "tokenomics.user": tokenomics.user.SQL;
    "tokenomics.vote_cast": tokenomics.vote_cast.SQL;
    "tokenomics.vote_delegated": tokenomics.vote_delegated.SQL;
    "tokenomics.withdraw": tokenomics.withdraw.SQL;
    "tokenomics.withdraw_eth": tokenomics.withdraw_eth.SQL;
  }[T];

}
