{
  "name": "@chimera-monorepo/contracts",
  "version": "0.0.1",
  "description": "Smart contracts for Everclear",
  "homepage": "https://github.com/defi-wonderland/chimera-monorepo/packages/contracts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/defi-wonderland/chimera-monorepo.git"
  },
  "license": "MIT",
  "author": "Everclear / Wonderland",
  "main": "dist/deployments/index.js",
  "types": "dist/deployments/index.d.ts",
  "files": [
    "dist/**/*"
  ],
  "scripts": {
    "add-assets:prod": "bash -c 'source .env && forge script script/hub/AddAsset.s.sol:TestnetProduction $0 $1 $2'",
    "add-assets:staging": "bash -c 'source .env && forge script script/hub/AddAsset.s.sol:TestnetStaging $0 $1 $2'",
    "add-domains:prod": "bash -c 'source .env && forge script script/hub/AddDomains.s.sol:TestnetProduction $0 $1 $2'",
    "add-domains:staging": "bash -c 'source .env && forge script script/hub/AddDomains.s.sol:TestnetStaging $0 $1 $2'",
    "add-liquidity:staging": "bash -c 'source .env && forge script script/spoke/AddLiquidity.s.sol:TestnetStaging --rpc-url $0 $1'",
    "assign-role:staging": "bash -c 'source .env && forge script script/hub/AssignRole.s.sol:TestnetStaging $0'",
    "build": "yarn build:ts && yarn build:sol",
    "build:optimized": "FOUNDRY_PROFILE=optimized forge build",
    "build:sol": "forge build",
    "build:ts": "tsc --build ./tsconfig.build.json",
    "bump-message:mainnet": "bash -c 'source .env && forge script script/common/BumpGas.s.sol:MainnetProduction --rpc-url $0 $1'",
    "bump-message:prod": "bash -c 'source .env && forge script script/common/BumpGas.s.sol:TestnetProduction --rpc-url $0 $1'",
    "bump-message:staging": "bash -c 'source .env && forge script script/common/BumpGas.s.sol:TestnetStaging --rpc-url $0 $1'",
    "cli": "npx ts-node cli/main.ts",
    "coverage": "forge coverage --match-contract Unit",
    "deploy:hub:prod": "bash -c 'source .env && forge script script/deploy/Hub.s.sol:TestnetProduction --rpc-url $EVERCLEAR_SEPOLIA_RPC --chain 6398 $@'",
    "deploy:hub:staging": "bash -c 'source .env && forge script script/deploy/Hub.s.sol:TestnetStaging --rpc-url $EVERCLEAR_SEPOLIA_RPC --chain 6398 $@'",
    "deploy:protocol:staging": "bash -c 'source .env && forge script script/deploy/SingleDeploy.s.sol:TestnetStaging --legacy $0 $1'",
    "deploy:spoke:arb-sepolia:prod": "bash -c 'source .env && forge script script/deploy/Spokes.s.sol:TestnetProduction --rpc-url $ARB_SEPOLIA_RPC --chain 421614 $@'",
    "deploy:spoke:arb-sepolia:staging": "bash -c 'source .env && forge script script/deploy/Spokes.s.sol:TestnetStaging --rpc-url $ARB_SEPOLIA_RPC --chain 421614 $@'",
    "deploy:spoke:bsc:prod": "bash -c 'source .env && forge script script/deploy/Spokes.s.sol:TestnetProduction --rpc-url $BNB_TESTNET_RPC --chain 97 $@'",
    "deploy:spoke:bsc:staging": "bash -c 'source .env && forge script script/deploy/Spokes.s.sol:TestnetStaging --rpc-url $BNB_TESTNET_RPC --chain 97 $@'",
    "deploy:spoke:op-sepolia:prod": "bash -c 'source .env && forge script script/deploy/Spokes.s.sol:TestnetProduction --rpc-url $OP_SEPOLIA_RPC --chain 11155420 $@'",
    "deploy:spoke:op-sepolia:staging": "bash -c 'source .env && forge script script/deploy/Spokes.s.sol:TestnetStaging --rpc-url $OP_SEPOLIA_RPC --chain 11155420 $@'",
    "deploy:spoke:sepolia:prod": "bash -c 'source .env && forge script script/deploy/Spokes.s.sol:TestnetProduction --rpc-url $SEPOLIA_RPC --chain sepolia $@'",
    "deploy:spoke:sepolia:staging": "bash -c 'source .env && forge script script/deploy/Spokes.s.sol:TestnetStaging --rpc-url $SEPOLIA_RPC --chain sepolia $@'",
    "deploy:token": "bash -c 'source .env && forge script script/deploy/Token.s.sol:Deploy $@'",
    "epoch:prod": "bash -c 'source .env && forge script script/hub/UpdateEpochLength.s.sol:TestnetProduction $0 $1'",
    "epoch:staging": "bash -c 'source .env && forge script script/hub/UpdateEpochLength.s.sol:TestnetStaging $0 $1'",
    "forge": "forge",
    "lint:check": "yarn lint:sol-tests && yarn lint:sol-logic && forge fmt --check",
    "lint:fix": "sort-package-json && forge fmt && yarn lint:sol-tests --fix && yarn lint:sol-logic --fix",
    "lint:natspec": "npx @defi-wonderland/natspec-smells --config natspec-smells.config.js",
    "lint:sol-logic": "solhint -c .solhint.json 'src/**/*.sol' 'script/**/*.sol'",
    "lint:sol-tests": "solhint -c .solhint.tests.json 'test/**/*.sol'",
    "new-intent:mainnet": "bash -c 'source .env && forge script script/spoke/NewIntent.s.sol:MainnetProduction --rpc-url $0 $1'",
    "new-intent:prod": "bash -c 'source .env && forge script script/spoke/NewIntent.s.sol:TestnetProduction --rpc-url $0 $1'",
    "new-intent:staging": "bash -c 'source .env && forge script script/spoke/NewIntent.s.sol:TestnetStaging --rpc-url $0 $1'",
    "new-intent:mainnetstaging": "bash -c 'source .env && forge script script/spoke/NewIntent.s.sol:MainnetStaging --rpc-url $0 $1'",
    "prepare": "husky install",
    "receive-settlement:prod": "bash -c 'source .env && forge script script/spoke/ReceiveSettlementMessage.s.sol:TestnetProduction --rpc-url $0 $1'",
    "remove-liquidity:staging": "bash -c 'source .env && forge script script/spoke/RemoveLiquidity.s.sol:TestnetStaging --rpc-url $0 $1'",
    "set-gateways:staging": "bash -c 'source .env && forge script script/hub/Gateways.s.sol:TestnetStaging $0'",
    "set-router:staging": "bash -c 'source .env && forge script script/hub/Router.s.sol:TestnetStaging $0'",
    "test": "forge test -vvv",
    "test-debugging:prod": "forge test --match-contract TestnetProductionDebugging -vvv",
    "test-debugging:staging": "forge test --match-contract TestnetStagingDebugging -vvv",
    "test:ci": "forge test --match-contract Unit -vvv",
    "test:integration": "forge test --match-contract Integration -vvv",
    "test:unit": "FOUNDRY_FUZZ_RUNS=5 forge test --mc Unit",
    "test:unit:deep": "FOUNDRY_FUZZ_RUNS=5000 yarn test:ci",
    "update-ism:prod": "bash -c 'source .env && forge script script/common/UpdateIsm.s.sol:TestnetProduction --rpc-url $0 $1'",
    "update-ism:staging": "bash -c 'source .env && forge script script/common/UpdateIsm.s.sol:TestnetStaging --rpc-url $0 $1'"
  },
  "lint-staged": {
    "*.{js,css,md,ts,sol}": "forge fmt",
    "(src|script)/**/*.sol": "yarn lint:sol-logic",
    "test/**/*.sol": "yarn lint:sol-tests",
    "package.json": "sort-package-json"
  },
  "dependencies": {
    "@hyperlane-xyz/core": "3.8.1",
    "@inquirer/prompts": "^5.3.8",
    "@openzeppelin/contracts": "5.0.2",
    "@openzeppelin/contracts-upgradeable": "5.0.2",
    "dotenv": "^16.4.5",
    "isolmate": "github:defi-wonderland/isolmate#59e18043c2450fef550f1744b3705ce9ebcaf1c8",
    "ts-node": "^10.9.2",
    "viem": "^2.19.8"
  },
  "devDependencies": {
    "@commitlint/cli": "17.0.3",
    "@commitlint/config-conventional": "17.0.3",
    "@defi-wonderland/natspec-smells": "1.1.3",
    "ds-test": "github:dapphub/ds-test#e282159d5170298eb2455a6c05280ab5a73a4ef0",
    "forge-std": "github:foundry-rs/forge-std#52715a217dc51d0de15877878ab8213f6cbbbab5",
    "husky": ">=8",
    "lint-staged": ">=10",
    "solhint": "github:solhint-community/solhint-community#v4.0.0-rc01",
    "sort-package-json": "1.53.1",
    "typescript": "^5.5.4"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org",
    "access": "public",
    "name": "@chimera-monorepo/contracts"
  }
}
